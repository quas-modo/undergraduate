<?xml version="1.0"?>
<rss version="2.0">
    <channel>
        <title>Carpe diem</title>
        <subtitle>pluck the day</subtitle>
        <icon>https://quas-modo.github.io/undergraduate/images/favicon.ico</icon>
        <link>https://quas-modo.github.io/undergraduate</link>
        <author>
          <name>quas-modo</name>
        </author>
        <description>notes/thoughts/nonsense</description>
        <language>zh-CN</language>
        <pubDate>Wed, 21 Jun 2023 14:44:20 +0800</pubDate>
        <lastBuildDate>Wed, 21 Jun 2023 14:44:20 +0800</lastBuildDate>
        <item>
            <guid isPermalink="true">https://quas-modo.github.io/undergraduate/2023/06/21/NJUSE/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E4%B8%8E%E8%AE%A1%E7%AE%97%E4%BA%8C%E6%9C%9F%E6%9C%AB%E5%A4%8D%E4%B9%A0/</guid>
            <title>软件工程与计算二期末复习</title>
            <link>https://quas-modo.github.io/undergraduate/2023/06/21/NJUSE/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E4%B8%8E%E8%AE%A1%E7%AE%97%E4%BA%8C%E6%9C%9F%E6%9C%AB%E5%A4%8D%E4%B9%A0/</link>
            <category term="NJUSE" scheme="https://quas-modo.github.io/undergraduate/categories/NJUSE/" />
            <category term="软件工程与计算二" scheme="https://quas-modo.github.io/undergraduate/categories/NJUSE/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E4%B8%8E%E8%AE%A1%E7%AE%97%E4%BA%8C/" />
            <category term="软件工程与计算二" scheme="https://quas-modo.github.io/undergraduate/tags/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E4%B8%8E%E8%AE%A1%E7%AE%97%E4%BA%8C/" />
            <pubDate>Wed, 21 Jun 2023 14:44:20 +0800</pubDate>
            <description><![CDATA[ &lt;p&gt;整理了软工二除了名词解释以外的重点 ww&lt;/p&gt;
&lt;p&gt;&lt;span id=&#34;more&#34;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;by 陈欣怡&lt;/p&gt;
&lt;h2 id=&#34;软件工程发展历史&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#软件工程发展历史&#34;&gt;#&lt;/a&gt; 软件工程发展历史&lt;/h2&gt;
&lt;p&gt;1950s：科学计算；以机器为中心进行编程；像生产硬件一样生产软件。&lt;/p&gt;
&lt;p&gt;1960s：业务应用 (批量数据处理和事物计算)；软件不同于硬件；用软件工艺的方式生产软件。&lt;/p&gt;
&lt;p&gt;1970s：结构化方法；瀑布模型；强调规则和纪律。它们奠定了软件工程的基础，是后续年代软件工程发展的支撑。&lt;/p&gt;
&lt;p&gt;1980s：追求生产力最大化；现代结构化方法 / 面向对象编程广泛应用；重视过程的作用。&lt;/p&gt;
&lt;p&gt;1990s：企业为中心的大规模软件系统开发；追求快速开发、可变更性和用户价值；web 应用出现&lt;/p&gt;
&lt;p&gt;2000s：大规模 web 应用；大量面向大众的 web 产品；追求快速开发、可变更性、用户价值和创新。&lt;/p&gt;
&lt;h2 id=&#34;项目启动&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#项目启动&#34;&gt;#&lt;/a&gt; 项目启动&lt;/h2&gt;
&lt;h3 id=&#34;如何管理团队&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#如何管理团队&#34;&gt;#&lt;/a&gt; 如何管理团队&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;建立团队章程&lt;/li&gt;
&lt;li&gt;持续成功&lt;/li&gt;
&lt;li&gt;和谐沟通&lt;/li&gt;
&lt;li&gt;避免团队杀手&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;团队结构有几种&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#团队结构有几种&#34;&gt;#&lt;/a&gt; 团队结构有几种？&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;主程序员&lt;/li&gt;
&lt;li&gt;民主团队&lt;/li&gt;
&lt;li&gt;开放团队&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;质量保障配置管理&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#质量保障配置管理&#34;&gt;#&lt;/a&gt; 质量保障 / 配置管理&lt;/h2&gt;
&lt;p&gt;&lt;img data-src=&#34;https://quasdo.oss-cn-hangzhou.aliyuncs.com/img/image-20230617144808777.png&#34; alt=&#34;image-20230617144808777&#34; /&gt;&lt;/p&gt;
&lt;h3 id=&#34;质量保障有哪些措施&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#质量保障有哪些措施&#34;&gt;#&lt;/a&gt; 质量保障有哪些措施？&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;需求开发 —— 需求评审和需求度量&lt;/li&gt;
&lt;li&gt;体系结构 —— 体系结构评审和集成测试 (持续集成)；&lt;/li&gt;
&lt;li&gt;详细设计 —— 详细设计评审、设计度量和集成测试 (持续集成)&lt;/li&gt;
&lt;li&gt;构造阶段 —— 代码评审、代码度量、测试（测试驱动和持续集成）&lt;/li&gt;
&lt;li&gt;测试阶段 —— 测试、测试度量&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;＊要及时的根据保障计划进行质量验证，质量验证的方法主要有&lt;strong&gt;评审、度量、测试&lt;/strong&gt;三种。&lt;/p&gt;
&lt;h3 id=&#34;配置管理有哪些活动&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#配置管理有哪些活动&#34;&gt;#&lt;/a&gt; 配置管理有哪些活动？&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;标识配置项：确定应该被保留的部分，并且给予他们确定标识，包含配置项的特征，包括生产者、基线建立时间、使用者等。&lt;/li&gt;
&lt;li&gt;版本管理：为配置项赋予版本号，管理分支和多版本情况。&lt;/li&gt;
&lt;li&gt;变更控制：以可控、一致的方式进行变更处理，包括对变更的评估、协调、批准或拒绝、实现和验证。&lt;/li&gt;
&lt;li&gt;配置审计：验证配置项的完整性、正确性、一致性和可追踪性。&lt;/li&gt;
&lt;li&gt;状态报告：反映当前的配置状态。&lt;/li&gt;
&lt;li&gt;软件发布管理：将配置项发布到开发活动之外，例如发布给客户。&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;需求层次需求类型&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#需求层次需求类型&#34;&gt;#&lt;/a&gt; 需求层次 / 需求类型&lt;/h2&gt;
&lt;h3 id=&#34;如何书写用例&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#如何书写用例&#34;&gt;#&lt;/a&gt; 如何书写用例&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;用例正常流程：在常见和符合预期的条件下，系统与外界的行为交互序列&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://quasdo.oss-cn-hangzhou.aliyuncs.com/img/image-20230617182637596.png&#34; alt=&#34;image-20230617182637596&#34; /&gt;&lt;/p&gt;
&lt;p&gt;名称：&lt;/p&gt;
&lt;p&gt;参与者：&lt;/p&gt;
&lt;p&gt;触发条件：（可以为空）&lt;/p&gt;
&lt;p&gt;前置条件：（可以为空）&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;正常流程：&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;用户行为 + 系统行为形成的行为交互序列&lt;/li&gt;
&lt;li&gt;用户：选择、输入、结束……&lt;/li&gt;
&lt;li&gt;系统：提示、显示、记录、计算、更新……&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;后置条件：（可以为空）&lt;/p&gt;
&lt;h3 id=&#34;区分需求的三个层次&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#区分需求的三个层次&#34;&gt;#&lt;/a&gt; 区分需求的三个层次&lt;/h3&gt;
&lt;p&gt;&lt;img data-src=&#34;https://quasdo.oss-cn-hangzhou.aliyuncs.com/img/image-20230617163010545.png&#34; alt=&#34;image-20230617163010545&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://quasdo.oss-cn-hangzhou.aliyuncs.com/img/image-20230617163331987.png&#34; alt=&#34;image-20230617163331987&#34; /&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;业务需求&lt;/strong&gt;（Business Requirement）
&lt;ol&gt;
&lt;li&gt;业务需求是高层次的&lt;strong&gt;解决方案和系统特性&lt;/strong&gt;、系统开发的战略出发点、&lt;strong&gt;高层次的需求&lt;/strong&gt;，描述为什么要开发系统。&lt;/li&gt;
&lt;li&gt;Eg. 在系统使用 3 个月后，销售额度应该提高 20%（期望，没有从软件角度进行描述，业务需求）&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;用户需求&lt;/strong&gt;（User Requirement）
&lt;ol&gt;
&lt;li&gt;执行具体任务的&lt;strong&gt;用户对系统所能完成任务的期望&lt;/strong&gt;，描述了系统能帮用户做什么（直接用户、间接用户）&lt;/li&gt;
&lt;li&gt;Eg. 在系统要帮助收银员完成销售处理&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;系统级需求&lt;/strong&gt;（System Requirement）
&lt;ol&gt;
&lt;li&gt;需求分析模型：用户对&lt;strong&gt;系统行为的期望&lt;/strong&gt;，每个系统级需求反映了&lt;strong&gt;一次外界与系统的交互行为&lt;/strong&gt;，或者&lt;strong&gt;系统的一个实现细节&lt;/strong&gt;（和用户需求有着很大的区别）&lt;/li&gt;
&lt;li&gt;Eg. 在接到客户经理的请求后，系统应该为客户经理提供所有会员的个人信息。&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;判断需求的类型&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#判断需求的类型&#34;&gt;#&lt;/a&gt; 判断需求的类型&lt;/h3&gt;
&lt;p&gt;&lt;img data-src=&#34;https://quasdo.oss-cn-hangzhou.aliyuncs.com/img/image-20230617163016932.png&#34; alt=&#34;image-20230617163016932&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://quasdo.oss-cn-hangzhou.aliyuncs.com/img/image-20230617163833524.png&#34; alt=&#34;image-20230617163833524&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;功能需求&lt;/strong&gt;：和系统主要共作相关的需求，即在不考虑物理约束的情况下，用户希望系统所能够执行的活动，这些活动可以帮助用户完成任务。&lt;strong&gt;功能需求主要表现为系统和环境之间的行为交互&lt;/strong&gt;。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Eg. 在接到客户经理的请求后，系统应该为客户经理提供所有会员的个人信息。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;strong&gt;数据需求&lt;/strong&gt;（属于功能需求的一种，DR）：&lt;strong&gt;功能需求&lt;/strong&gt;的补充：如果在功能需求部分明确定义了&lt;strong&gt;相关的数据结构&lt;/strong&gt;，那么就不需要再行定义数据需求。数据需求是需要在数据库、文件或者其他介质中存储的数据描述，通常包括下列内容：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;各个功能使用的&lt;strong&gt;数据信息&lt;/strong&gt;；&lt;/li&gt;
&lt;li&gt;使用频率；&lt;/li&gt;
&lt;li&gt;可访问性要求；&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;数据实体及其关系&lt;/strong&gt;；&lt;/li&gt;
&lt;li&gt;完整性约束；&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;数据保持&lt;/strong&gt;要求。&lt;/li&gt;
&lt;li&gt;Eg. 系统需要存储的数据实体及其关系为图 6-14 的内容。（数据实体及其关系）&lt;/li&gt;
&lt;li&gt;Eg. 系统需要存储 1 年内的销售记录和退货记录。（数据保持）&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;性能需求&lt;/strong&gt;：系统整体或系统组成部分应该拥有的性能特征，例如 CPU 使用率、内存使用率等。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;速度：系统完成任务的时间（所有用户查询必须在 10s 内完成）&lt;/li&gt;
&lt;li&gt;容量：系统能存储的数据量（系统因该能够存储至少 100 万个销售信息）&lt;/li&gt;
&lt;li&gt;吞吐量：系统在连续的时间内完成的事务数量（解释器每分钟应该能够至少解析 5000 条没有错误的语句）&lt;/li&gt;
&lt;li&gt;负载：系统可以承载的并发工作量（系统应该允许 50 个营业服务器同时从集中服务器上进行数据的上传或下载）&lt;/li&gt;
&lt;li&gt;实时性：严格的实时要求（系统监测到异常时，监视器必须在 0.5s 内发出警报，和故障警报不一样，故障不是系统的正常功能）&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;strong&gt;质量需求&lt;/strong&gt;（QA）：系统为了满足&lt;strong&gt;规定的及隐含&lt;/strong&gt;的所有要求而需要具备的要素称为质量&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;可靠性：在规格时间间隔内和规定条件下，系统或部件执行所要求能力的能力。（在进行数据的下载和上传中，如果网络故障，系统不能出现故障。能不能检测网络中断，并且进行恢复）&lt;/li&gt;
&lt;li&gt;可用性：软件系统在投入使用时可操作和可访问的程度或能实现其指定系统功能的概率。（系统的可用性要达到 98%）&lt;/li&gt;
&lt;li&gt;安全性：软件组织对其程序和数据进行未授权访问的能力，未授权的访问可能是有意，也可能是无意的。（VIP 顾客只能查看自己的个人信息和购买记录）&lt;/li&gt;
&lt;li&gt;可维护性：软件系统或部件能修改以排除故障、改进性能或其他属性或适应变更了的环境的容易程度，包括可修改性（Modifiability）和可扩展性（Extensibility）。（如果系统要增加新的特价类型，要能够在 2 个人月内完成）&lt;/li&gt;
&lt;li&gt;可移植性：系统或部件能从一种硬件或软件环境转换至另外一种环境的特性。（集中服务器要能够在 1 人月内从 Window 7 操作系统更换到 Solaris 10 操作系统。）&lt;/li&gt;
&lt;li&gt;易用性：与用户使用软件所花费的努力及其对使用的评价相关的特性。（使用系统 1 个月的收银员进行销售处理的效率要达到 10 件商品 / 分钟。）&lt;/li&gt;
&lt;li&gt;往往会有形容词和副词&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;strong&gt;对外接口&lt;/strong&gt;：系统和环境中其他系统之间需要建立的接口，包括硬件接口、软件接口、数据库接口等等。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;接口的用途&lt;/li&gt;
&lt;li&gt;接口的输入输出&lt;/li&gt;
&lt;li&gt;数据格式&lt;/li&gt;
&lt;li&gt;命令格式&lt;/li&gt;
&lt;li&gt;异常处理要求&lt;/li&gt;
&lt;li&gt;Eg. 注册使用 Google Maps API&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;strong&gt;约束&lt;/strong&gt;：进行系统构造时需要遵守的约束，例如&lt;strong&gt;编程语言、硬件设施&lt;/strong&gt;等&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;系统开发及运行的环境（包括目标机器、操作系统、网络环境、编程语言、数据库管理系统等，Eg. 系统使用 Java 语言进行开发）&lt;/li&gt;
&lt;li&gt;问题域内的相关标准（包括法律法规、行业协定、企业规章等。）&lt;/li&gt;
&lt;li&gt;商业规则：（用户在任务执行中的一些潜在规则也会限制开发人员设计和构建系统的选择范围）&lt;/li&gt;
&lt;li&gt;Eg. 已过保质期的食品不能销售&lt;/li&gt;
&lt;li&gt;Eg. 顾客可以使用美元付款&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;例题&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#例题&#34;&gt;#&lt;/a&gt; 例题&lt;/h3&gt;
&lt;h4 id=&#34;写用例t1&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#写用例t1&#34;&gt;#&lt;/a&gt; 写用例 T1&lt;/h4&gt;
&lt;p&gt;&lt;img data-src=&#34;https://quasdo.oss-cn-hangzhou.aliyuncs.com/img/image-20230617163659223.png&#34; alt=&#34;image-20230617163659223&#34; /&gt;&lt;/p&gt;
&lt;p&gt;（1）&lt;/p&gt;
&lt;p&gt;以 ATM 存款功能为例&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;业务需求：提供存款功能&lt;/li&gt;
&lt;li&gt;用户需求：系统允许用户存入现金并记录在对应银行卡中&lt;/li&gt;
&lt;li&gt;系统级需求：在用户放入现金后，系统应该能够清点现金数额，并在清点完毕后，显示数额，请用户核对&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;（2）&lt;/p&gt;
&lt;p&gt;性能需求：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;速度：系统应该在 3s 内完成单个操作，查询操作响应速度不得超过 1s&lt;/li&gt;
&lt;li&gt;负载：系统应该允许地区内所有 ATM 及同时从服务器上进行运作&lt;/li&gt;
&lt;li&gt;实时性：系统应该在 0.5 秒内同步数据&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;质量属性：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;安全性：系统应该保护用户的存取款信息不被非法用户获取；&lt;/li&gt;
&lt;li&gt;易用性：系统应该保证操作界面容易上手&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;对外接口：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;系统与数据库接口：如果发生异常，要抛出异常并回滚&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;约束：用 java 开发&lt;/p&gt;
&lt;p&gt;数据需求：系统需要存储用户 3 年以内的详细存取款记录信息&lt;/p&gt;
&lt;h4 id=&#34;写用例t2&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#写用例t2&#34;&gt;#&lt;/a&gt; 写用例 T2&lt;/h4&gt;
&lt;p&gt;&lt;img data-src=&#34;https://quasdo.oss-cn-hangzhou.aliyuncs.com/img/image-20230617172608167.png&#34; alt=&#34;image-20230617172608167&#34; /&gt;&lt;/p&gt;
&lt;p&gt;功能需求，与系统主要功能相关&lt;/p&gt;
&lt;p&gt;数据需求，规定了数据描述和数据的输入格式&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://quasdo.oss-cn-hangzhou.aliyuncs.com/img/image-20230617181931604.png&#34; alt=&#34;image-20230617181931604&#34; /&gt;&lt;/p&gt;
&lt;p&gt;该功能涉及 2 个用例&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;用例 1：手工创建询价单
&lt;ul&gt;
&lt;li&gt;参与者：采购人员&lt;/li&gt;
&lt;li&gt;主要流程：
&lt;ol&gt;
&lt;li&gt;采购人员登入系统，输入供应商、产品等信息&lt;/li&gt;
&lt;li&gt;系统记录供应商、产品、库存等信息&lt;/li&gt;
&lt;li&gt;采购人员结束创建过程&lt;/li&gt;
&lt;li&gt;系统生成并展示采购询价单&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;用例 2：自动生成询价单
&lt;ul&gt;
&lt;li&gt;参与者：库管员&lt;/li&gt;
&lt;li&gt;前置条件：仓库经理已设置产品的再订货规则&lt;/li&gt;
&lt;li&gt;主要流程：
&lt;ol&gt;
&lt;li&gt;库管员登录系统&lt;/li&gt;
&lt;li&gt;系统确认权限&lt;/li&gt;
&lt;li&gt;库管员点击运行排程&lt;/li&gt;
&lt;li&gt;系统按照再订货规则和销售订单及库存情况自动生成采购询价单，并显示&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h4 id=&#34;判断需求类型&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#判断需求类型&#34;&gt;#&lt;/a&gt; 判断需求类型&lt;/h4&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;需求描述&lt;/th&gt;
&lt;th&gt;需求类别&lt;/th&gt;
&lt;th&gt;备注&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;系统&lt;strong&gt;需要&lt;/strong&gt;存储一年内的销售记录&lt;/td&gt;
&lt;td&gt;数据需求&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;系统&lt;strong&gt;应该能够&lt;/strong&gt;存储 3 年的交易数据&lt;/td&gt;
&lt;td&gt;性能需求&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;系统使用之前，需要对收银员进行 10 天的专门培训&lt;/td&gt;
&lt;td&gt;其他需求（包括硬件需求、人力需求。）&lt;/td&gt;
&lt;td&gt;在交付之前&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;经过 10 天培训的收银员就能够熟练使用系统&lt;/td&gt;
&lt;td&gt;质量需求（易用性）&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;反映了用户与系统的&lt;strong&gt;交互细节&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;系统需求&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;反映了用户与系统的&lt;strong&gt;交互&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;用户需求&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;在存储设备发生故障时，系统要在 10 秒内发现&lt;/td&gt;
&lt;td&gt;质量需求（可靠性需求）&lt;/td&gt;
&lt;td&gt;故障是非正常状态，还一种系统需求。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;在存储设备发生故障时，系统要在 0.5 秒内向用户发出&lt;strong&gt;警报&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;功能需求&lt;/td&gt;
&lt;td&gt;故障不是系统的正常状态&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;检测到病人异常后，监控器必须在 0.5 秒内发出警报&lt;/td&gt;
&lt;td&gt;性能需求&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;该软件管理工具的开发过程&lt;strong&gt;自身&lt;/strong&gt;必须符合 CMMI-4 的评估&lt;/td&gt;
&lt;td&gt;过程需求&lt;/td&gt;
&lt;td&gt;是软件自身&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;该软件管理工具软件必须&lt;strong&gt;帮助&lt;/strong&gt;项目管理者进行开发管理工作，以通过 CMMI-4 的评估&lt;/td&gt;
&lt;td&gt;用户需求&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;系统能够为用户提供库存分析报告、商品 / 利润报告和过期商品报告&lt;/td&gt;
&lt;td&gt;用户需求&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;产品在发布 1 年之后内，必须在出版的 A、B、C 三个产品评论刊物中被评为最可靠产品。&lt;/td&gt;
&lt;td&gt;业务需求&lt;/td&gt;
&lt;td&gt;相当与一个目的&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;系统必须能够与 Oracle 数据库交互。&lt;/td&gt;
&lt;td&gt;约束&lt;/td&gt;
&lt;td&gt;Oracle 是系统的一个环境，环境本身在约束部分，比如 Tomcat 等等&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;开发团队需要给出 SRS 文档。&lt;/td&gt;
&lt;td&gt;过程需求&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;使用扫描仪扫描文件，传递回的数据为 pdf 格式文件。&lt;/td&gt;
&lt;td&gt;对外接口&lt;/td&gt;
&lt;td&gt;软件和扫描仪之间的交互&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;商品的标识由 0-24 位字母、数字混合组成的字符串。&lt;/td&gt;
&lt;td&gt;数据需求&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;商品标识的类型要能够在 0.5 个人月内更改为长整型。&lt;/td&gt;
&lt;td&gt;质量需求&lt;/td&gt;
&lt;td&gt;可移植性&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2 id=&#34;需求题&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#需求题&#34;&gt;#&lt;/a&gt; 需求题&lt;/h2&gt;
&lt;h3 id=&#34;知识点&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#知识点&#34;&gt;#&lt;/a&gt; 知识点&lt;/h3&gt;
&lt;h4 id=&#34;用例图&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#用例图&#34;&gt;#&lt;/a&gt; 用例图&lt;/h4&gt;
&lt;p&gt;用例、参与者、关系、系统边界&lt;/p&gt;
&lt;p&gt;&amp;lt;img src=&amp;quot;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9xdWFzZG8ub3NzLWNuLWhhbmd6aG91LmFsaXl1bmNzLmNvbS9pbWcvaW1hZ2UtMjAyMzA2MTcxODQzMTU2NjgucG5n&#34;&gt;https://quasdo.oss-cn-hangzhou.aliyuncs.com/img/image-20230617184315668.png&lt;/span&gt;&amp;quot; alt=&amp;quot;image-20230617184315668&amp;quot; style=&amp;quot;zoom: 25%;&amp;quot; /&amp;gt;&lt;/p&gt;
&lt;h4 id=&#34;分析类图概念类图&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#分析类图概念类图&#34;&gt;#&lt;/a&gt; 分析类图（概念类图）&lt;/h4&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;根据用例的文本描述，识别候选类&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;名词分析、行为分析&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;筛选候选类，确定概念类&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;根据系统需求&lt;/li&gt;
&lt;li&gt;是否有状态 + 行为
&lt;ul&gt;
&lt;li&gt;只有行为：&lt;/li&gt;
&lt;li&gt;只有状态：其他概念类的属性&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;识别关联&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;继承&lt;/p&gt;
&lt;p&gt;&amp;lt;img src=&amp;quot;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9xdWFzZG8ub3NzLWNuLWhhbmd6aG91LmFsaXl1bmNzLmNvbS9pbWcvaW1hZ2UtMjAyMzA2MTcxOTAxMjI5OTUucG5n&#34;&gt;https://quasdo.oss-cn-hangzhou.aliyuncs.com/img/image-20230617190122995.png&lt;/span&gt;&amp;quot; alt=&amp;quot;image-20230617190122995&amp;quot; style=&amp;quot;zoom: 25%;&amp;quot; /&amp;gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;依赖&lt;/p&gt;
&lt;p&gt;人靠船渡河&lt;/p&gt;
&lt;p&gt;&amp;lt;img src=&amp;quot;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9xdWFzZG8ub3NzLWNuLWhhbmd6aG91LmFsaXl1bmNzLmNvbS9pbWcvMjAyMDAyMjQxMDU0MzgzMjUucG5n&#34;&gt;https://quasdo.oss-cn-hangzhou.aliyuncs.com/img/20200224105438325.png&lt;/span&gt;&amp;quot; alt=&amp;quot;20200224105438325&amp;quot;  /&amp;gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;关联&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;聚合 - has a&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;组合 - contains a&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://quasdo.oss-cn-hangzhou.aliyuncs.com/img/image-20230617190052208.png&#34; alt=&#34;image-20230617190052208&#34; /&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;实现&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://quasdo.oss-cn-hangzhou.aliyuncs.com/img/20200224104937159.png&#34; alt=&#34;20200224104937159&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&amp;lt;img src=&amp;quot;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9xdWFzZG8ub3NzLWNuLWhhbmd6aG91LmFsaXl1bmNzLmNvbS9pbWcvaW1hZ2UtMjAyMzA2MTcxOTA0NDI1NDYucG5n&#34;&gt;https://quasdo.oss-cn-hangzhou.aliyuncs.com/img/image-20230617190442546.png&lt;/span&gt;&amp;quot; alt=&amp;quot;image-20230617190442546&amp;quot; style=&amp;quot;zoom:25%;&amp;quot; /&amp;gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;识别重要属性&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img data-src=&#34;https://quasdo.oss-cn-hangzhou.aliyuncs.com/img/593F8D4DBCC2106DA87098122BA9DFD1.png&#34; alt=&#34;593F8D4DBCC2106DA87098122BA9DFD1&#34; /&gt;&lt;/p&gt;
&lt;h4 id=&#34;系统顺序图&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#系统顺序图&#34;&gt;#&lt;/a&gt; 系统顺序图&lt;/h4&gt;
&lt;p&gt;&lt;img data-src=&#34;https://quasdo.oss-cn-hangzhou.aliyuncs.com/img/image-20230616110005374.png&#34; alt=&#34;image-20230616110005374&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&amp;lt;img src=&amp;quot;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9xdWFzZG8ub3NzLWNuLWhhbmd6aG91LmFsaXl1bmNzLmNvbS9pbWcvaW1hZ2UtMjAyMzA2MTcyMDI4MDc2MjgucG5n&#34;&gt;https://quasdo.oss-cn-hangzhou.aliyuncs.com/img/image-20230617202807628.png&lt;/span&gt;&amp;quot; alt=&amp;quot;image-20230617202807628&amp;quot; style=&amp;quot;zoom: 33%;&amp;quot; /&amp;gt;&lt;/p&gt;
&lt;h4 id=&#34;状态图&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#状态图&#34;&gt;#&lt;/a&gt; 状态图&lt;/h4&gt;
&lt;p&gt;&lt;img data-src=&#34;https://quasdo.oss-cn-hangzhou.aliyuncs.com/img/image-20230617202834984.png&#34; alt=&#34;image-20230617202834984&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://quasdo.oss-cn-hangzhou.aliyuncs.com/img/image-20230617203052895.png&#34; alt=&#34;image-20230617203052895&#34; /&gt;&lt;/p&gt;
&lt;h3 id=&#34;题型&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#题型&#34;&gt;#&lt;/a&gt; 题型&lt;/h3&gt;
&lt;p&gt;&lt;img data-src=&#34;https://quasdo.oss-cn-hangzhou.aliyuncs.com/img/image-20230617144921876.png&#34; alt=&#34;image-20230617144921876&#34; /&gt;&lt;/p&gt;
&lt;h4 id=&#34;为什么需要需求规格文档结合实验说明&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#为什么需要需求规格文档结合实验说明&#34;&gt;#&lt;/a&gt; 为什么需要需求规格文档？结合实验说明&lt;/h4&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;方便交流&lt;/strong&gt;：软件开发过程中，&lt;strong&gt;子任务与人员&lt;/strong&gt;之间存在错综复杂的关系，存在大量的沟通和交流，所以要编写软件开发中要编写不同类型的文档，每种文档都是针对项目中需要广泛交流的内容。因为&lt;strong&gt;软件需求&lt;/strong&gt;需要进行&lt;strong&gt;广泛交流&lt;/strong&gt;，所以要把需求文档化。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;跟踪和度量&lt;/strong&gt;：需求规格说明是在&lt;strong&gt;软件产品的角度以系统级需求列表的方式&lt;/strong&gt;描述软件系统解决方案，书写需求规格说明，可以建立管理控制的基线，方便任务分配，制定工作计划，进行跟踪和度量。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;过程管理&lt;/strong&gt;：在实验中，需求规格的重要性不只体现在结果上，还包括中间过程，在书写需求规格过程中，才真正把问题域的问题和分析模型的成果转化为系统级需求，方便小组成员真正明确需求，个人认为在这个阶段包含一部分的需求在发现和完整化。&lt;/li&gt;
&lt;/ol&gt;
&lt;h4 id=&#34;需求示例修改&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#需求示例修改&#34;&gt;#&lt;/a&gt; 需求示例修改&lt;/h4&gt;
&lt;h5 id=&#34;用例选择错误&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#用例选择错误&#34;&gt;#&lt;/a&gt; 用例选择错误&lt;/h5&gt;
&lt;ol&gt;
&lt;li&gt;用例粒度
&lt;ol&gt;
&lt;li&gt;不要将用例细化为单个操作，如将用户管理细化为增加、修改和删除，需要联合才能体现业务价值&lt;/li&gt;
&lt;li&gt;不要将同一个业务目标细化为不同用例，比如特价策略制定和赠送策略制定，合并为销售策略制定&lt;/li&gt;
&lt;li&gt;将明显不同的业务事件分开，如会员管理用例应该细化为发展会员和礼品赠送&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;用例价值
&lt;ol&gt;
&lt;li&gt;登录、数据验证、连接数据库没有价值，不作为用例&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;是否和系统产生交互
&lt;ol&gt;
&lt;li&gt;顾客不是参与者，不与系统产生交互&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h5 id=&#34;技术文档撰写错误&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#技术文档撰写错误&#34;&gt;#&lt;/a&gt; 技术文档撰写错误&lt;/h5&gt;
&lt;ol&gt;
&lt;li&gt;技术文档写作要点（简洁，精确，易读，易修改）
&lt;ol&gt;
&lt;li&gt;简洁：动词名词 + 辅助词，不要使用复杂长句、形容词和副词。&lt;/li&gt;
&lt;li&gt;精确：避免歧义。&lt;/li&gt;
&lt;li&gt;易读（查询）：有效使用引言、目录、索引等能够增强文档易读性的方法，使用系统化的方式组织内容信息，提供文档内容的可读性。&lt;/li&gt;
&lt;li&gt;易修改：使用相同的语句格式组织相关联或相似的信息；使用列表组织独立、并列的信息；使用编号表达繁杂信息之间的关系。引用而不是重复&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;需求书写要点（使用用户术语，可验证，可行性）&lt;/li&gt;
&lt;li&gt;需求规格说明文档书写要点（充分利用标准的文档模板，保持所以内容位置得当；保持文档内的需求集具有完备性和一致性；为需求划分优先级）&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&amp;lt;img src=&amp;quot;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9xdWFzZG8ub3NzLWNuLWhhbmd6aG91LmFsaXl1bmNzLmNvbS9pbWcvaW1hZ2UtMjAyMzA2MTgyMzA4MzIwMzMucG5n&#34;&gt;https://quasdo.oss-cn-hangzhou.aliyuncs.com/img/image-20230618230832033.png&lt;/span&gt;&amp;quot; alt=&amp;quot;image-20230618230832033&amp;quot; style=&amp;quot;zoom: 50%;&amp;quot; /&amp;gt;&lt;/p&gt;
&lt;h4 id=&#34;设计功能测试用例&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#设计功能测试用例&#34;&gt;#&lt;/a&gt; 设计功能测试用例&lt;/h4&gt;
&lt;p&gt;以需求为线索，开发测试用例套件，确定输入 / 输出，开发测试用例。&lt;/p&gt;
&lt;p&gt;&amp;lt;img src=&amp;quot;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9xdWFzZG8ub3NzLWNuLWhhbmd6aG91LmFsaXl1bmNzLmNvbS9pbWcvaW1hZ2UtMjAyMzA2MTgyMzEwMzk5NTQucG5n&#34;&gt;https://quasdo.oss-cn-hangzhou.aliyuncs.com/img/image-20230618231039954.png&lt;/span&gt;&amp;quot; alt=&amp;quot;image-20230618231039954&amp;quot; style=&amp;quot;zoom: 50%;&amp;quot; /&amp;gt;&lt;/p&gt;
&lt;h3 id=&#34;例题-2&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#例题-2&#34;&gt;#&lt;/a&gt; 例题&lt;/h3&gt;
&lt;p&gt;&lt;img data-src=&#34;https://quasdo.oss-cn-hangzhou.aliyuncs.com/img/image-20230617144900733.png&#34; alt=&#34;image-20230617144900733&#34; /&gt;&lt;/p&gt;
&lt;p&gt;画用例图&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://quasdo.oss-cn-hangzhou.aliyuncs.com/img/image-20230617144909928.png&#34; alt=&#34;image-20230617144909928&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&amp;lt;img src=&amp;quot;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9xdWFzZG8ub3NzLWNuLWhhbmd6aG91LmFsaXl1bmNzLmNvbS9pbWcvaW1hZ2UtMjAyMzA2MTkyMTM3MTU4MjUucG5n&#34;&gt;https://quasdo.oss-cn-hangzhou.aliyuncs.com/img/image-20230619213715825.png&lt;/span&gt;&amp;quot; alt=&amp;quot;image-20230619213715825&amp;quot; style=&amp;quot;zoom: 33%;&amp;quot; /&amp;gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://quasdo.oss-cn-hangzhou.aliyuncs.com/img/image-20230617194537437.png&#34; alt=&#34;image-20230617194537437&#34; /&gt;&lt;/p&gt;
&lt;h2 id=&#34;软件设计&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#软件设计&#34;&gt;#&lt;/a&gt; 软件设计&lt;/h2&gt;
&lt;h3 id=&#34;软件设计的核心思想&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#软件设计的核心思想&#34;&gt;#&lt;/a&gt; 软件设计的核心思想&lt;/h3&gt;
&lt;p&gt;&amp;lt;img src=&amp;quot;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9xdWFzZG8ub3NzLWNuLWhhbmd6aG91LmFsaXl1bmNzLmNvbS9pbWcvaW1hZ2UtMjAyMzA2MTkxODA5MTY4MzEucG5n&#34;&gt;https://quasdo.oss-cn-hangzhou.aliyuncs.com/img/image-20230619180916831.png&lt;/span&gt;&amp;quot; alt=&amp;quot;image-20230619180916831&amp;quot; style=&amp;quot;zoom:50%;&amp;quot; /&amp;gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;抽象&lt;/strong&gt;：横向上将系统分解为几个相对简单的子系统以及各子系统之间的关系&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;分解&lt;/strong&gt;：纵向上聚焦各子系统的接口（区别于实现，各子系统之间交互的契约），可以分离接口和实现，使得人们更好地关注软件系统本质，降低复杂度&lt;/p&gt;
&lt;h3 id=&#34;软件工程有哪三个层次各层的主要思想是什么&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#软件工程有哪三个层次各层的主要思想是什么&#34;&gt;#&lt;/a&gt; 软件工程有哪三个层次？各层的主要思想是什么？&lt;/h3&gt;
&lt;p&gt;&lt;img data-src=&#34;https://quasdo.oss-cn-hangzhou.aliyuncs.com/img/image-20230619180923023.png&#34; alt=&#34;image-20230619180923023&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;高层设计&lt;/strong&gt;：基于反映软件高层抽象的构建层次，描述系统的高层结构、关注点和设计决策&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;中层设计&lt;/strong&gt;：更加关注组成构件的模块的划分、导入 / 导出、过程之间的调用关系或者类之间的协作&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;低层设计&lt;/strong&gt;：深入模块和类的内部，关注具体的数据结构、算法、类型、语句和控制结构等体系结构&lt;/p&gt;
&lt;h3 id=&#34;体系结构风格的优缺点&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#体系结构风格的优缺点&#34;&gt;#&lt;/a&gt; 体系结构风格的优缺点&lt;/h3&gt;
&lt;h4 id=&#34;主程序子程序&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#主程序子程序&#34;&gt;#&lt;/a&gt; 主程序子程序&lt;/h4&gt;
&lt;p&gt;&amp;lt;img src=&amp;quot;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9xdWFzZG8ub3NzLWNuLWhhbmd6aG91LmFsaXl1bmNzLmNvbS9pbWcvaW1hZ2UtMjAyMzA2MTkxODA5NDQ1NzAucG5n&#34;&gt;https://quasdo.oss-cn-hangzhou.aliyuncs.com/img/image-20230619180944570.png&lt;/span&gt;&amp;quot; alt=&amp;quot;image-20230619180944570&amp;quot; style=&amp;quot;zoom: 33%;&amp;quot; /&amp;gt;&lt;/p&gt;
&lt;p&gt;优点：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;流程清晰，易于理解&lt;/li&gt;
&lt;li&gt;强控制性&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;缺点：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;程序调用是一种&lt;strong&gt;强耦合的连接方式&lt;/strong&gt;，非常依赖交互方的接口规格，这会使得系统难以修改和复用&lt;/li&gt;
&lt;li&gt;程序调用的连接方式&lt;strong&gt;限制了各部件之间的数据交互&lt;/strong&gt;，可能会使得不同部件使用隐含的共享数据交流，产生不必要的公共耦合，进而破坏它的 “正确性” 控制能力&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;应用：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;系统功能依层次分解为多个顺序执行步骤的系统&lt;/li&gt;
&lt;li&gt;结构化分析（自顶向下或自底向上）建立的软件系统&lt;/li&gt;
&lt;/ol&gt;
&lt;h4 id=&#34;面向对象&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#面向对象&#34;&gt;#&lt;/a&gt; 面向对象&lt;/h4&gt;
&lt;p&gt;&amp;lt;img src=&amp;quot;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9xdWFzZG8ub3NzLWNuLWhhbmd6aG91LmFsaXl1bmNzLmNvbS9pbWcvaW1hZ2UtMjAyMzA2MTkxODA5NTU4MTAucG5n&#34;&gt;https://quasdo.oss-cn-hangzhou.aliyuncs.com/img/image-20230619180955810.png&lt;/span&gt;&amp;quot; alt=&amp;quot;image-20230619180955810&amp;quot; style=&amp;quot;zoom:33%;&amp;quot; /&amp;gt;&lt;/p&gt;
&lt;p&gt;优点：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;内部实现的可修改性&lt;/li&gt;
&lt;li&gt;易开发、易理解、易复用的结构组织&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;缺点：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;接口的耦合性&lt;/li&gt;
&lt;li&gt;标识的耦合性&lt;/li&gt;
&lt;li&gt;副作用 P155
&lt;ol&gt;
&lt;li&gt;对象的重入问题&lt;/li&gt;
&lt;li&gt;A\B 均使用 C，B 对 C 的修改可能产生对 A 未预期的影响&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;应用：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;基于数据分解和组织的软件系统&lt;/li&gt;
&lt;li&gt;基于抽象类型建立起来的软件系统&lt;/li&gt;
&lt;/ol&gt;
&lt;h4 id=&#34;分层&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#分层&#34;&gt;#&lt;/a&gt; 分层&lt;/h4&gt;
&lt;p&gt;&amp;lt;img src=&amp;quot;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9xdWFzZG8ub3NzLWNuLWhhbmd6aG91LmFsaXl1bmNzLmNvbS9pbWcvaW1hZ2UtMjAyMzA2MTkxODEwMjQwMTUucG5n&#34;&gt;https://quasdo.oss-cn-hangzhou.aliyuncs.com/img/image-20230619181024015.png&lt;/span&gt;&amp;quot; alt=&amp;quot;image-20230619181024015&amp;quot; style=&amp;quot;zoom:33%;&amp;quot; /&amp;gt;&lt;/p&gt;
&lt;p&gt;优点：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;设计机制清晰，易于理解（网络通信协议的分层）&lt;/li&gt;
&lt;li&gt;支持并行开发&lt;/li&gt;
&lt;li&gt;更好的可复用性与内部可修改性&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;缺点：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;交互协议难以修改&lt;/li&gt;
&lt;li&gt;性能损失&lt;/li&gt;
&lt;li&gt;难以确定层次数量和粒度&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;应用：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;ISO 网络通信模型&lt;/li&gt;
&lt;li&gt;TCP/IP 网络通信模型&lt;/li&gt;
&lt;/ol&gt;
&lt;h4 id=&#34;mvc&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#mvc&#34;&gt;#&lt;/a&gt; MVC&lt;/h4&gt;
&lt;p&gt;&amp;lt;img src=&amp;quot;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9xdWFzZG8ub3NzLWNuLWhhbmd6aG91LmFsaXl1bmNzLmNvbS9pbWcvaW1hZ2UtMjAyMzA2MTkxODEwMzE3MTYucG5n&#34;&gt;https://quasdo.oss-cn-hangzhou.aliyuncs.com/img/image-20230619181031716.png&lt;/span&gt;&amp;quot; alt=&amp;quot;image-20230619181031716&amp;quot; style=&amp;quot;zoom:33%;&amp;quot; /&amp;gt;&lt;/p&gt;
&lt;p&gt;模型、视图、控制分别是业务逻辑、表现、控制的三种不同内容抽象&lt;br /&gt;
优点：&lt;/p&gt;
&lt;p&gt;1）易开发性&lt;/p&gt;
&lt;p&gt;2）视图和控制的可修改性&lt;/p&gt;
&lt;p&gt;3）适宜于网络系统开发的特征&lt;/p&gt;
&lt;p&gt;缺点：&lt;/p&gt;
&lt;p&gt;1）复杂性&lt;/p&gt;
&lt;p&gt;2）模型修改困难&lt;/p&gt;
&lt;h3 id=&#34;包的原则&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#包的原则&#34;&gt;#&lt;/a&gt; 包的原则&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;内聚&lt;/strong&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;重用发布等价原则 (REP)：&lt;/p&gt;
&lt;p&gt;重用的粒度就是发布的粒度&lt;/p&gt;
&lt;p&gt;相关联的包一起发布，几个协作类组成一个包&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;共同封闭原则 (CCP)&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;包中所有类对于同一类性质的变化应该是共同封闭的，一个变化若对一个包产生影响，则对该包中的所有类产生影响，而对于其他包不造成任何影响。&lt;/li&gt;
&lt;li&gt;包尽可能大，和 CRP 互斥&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;共同重用原理 (CRP)&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;一个包中的所有类应该是能够共同重用（用到）的&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;strong&gt;耦合&lt;/strong&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;无环依赖原则 (ADP): 在包的依赖关系图中不能存在环。必须是有向无环图。&lt;/p&gt;
&lt;p&gt;修改方式：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;DIP，依赖接口，实现接口&lt;/li&gt;
&lt;li&gt;分离包&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;稳定依赖原则 (SDP): 朝着稳定 (别人的修改不影响我) 的方向进行依赖&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;尽可能减少对别人的依赖&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&amp;lt;img src=&amp;quot;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9xdWFzZG8ub3NzLWNuLWhhbmd6aG91LmFsaXl1bmNzLmNvbS9pbWcvaW1hZ2UtMjAyMzA2MTkwMDAzNDcyNTMucG5n&#34;&gt;https://quasdo.oss-cn-hangzhou.aliyuncs.com/img/image-20230619000347253.png&lt;/span&gt;&amp;quot; alt=&amp;quot;image-20230619000347253&amp;quot; style=&amp;quot;zoom: 25%;&amp;quot; /&amp;gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;稳定抽象原则 (SAP): 包的抽象程度应该和其稳定程度一致&lt;/p&gt;
&lt;p&gt;（再根据图理解）&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;体系结构开发集成测试用例&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#体系结构开发集成测试用例&#34;&gt;#&lt;/a&gt; 体系结构开发集成测试用例&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;大爆炸式集成&lt;/li&gt;
&lt;li&gt;增量式
&lt;ol&gt;
&lt;li&gt;自顶向下集成&lt;/li&gt;
&lt;li&gt;自底向上集成&lt;/li&gt;
&lt;li&gt;三明治式&lt;/li&gt;
&lt;li&gt;持续集成
&lt;ol&gt;
&lt;li&gt;尽早集成&lt;/li&gt;
&lt;li&gt;频繁集成&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;ul&gt;
&lt;li&gt;持续集成需要用到版本控制工具和持续集成工具&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;桩模仿的是下层模块，用来测试上层；&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;而驱动则模仿的是上层模块，用来测试下层。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;所以，驱动需要利用下层提供的接口，来实现其模仿的模块的功能&lt;/p&gt;
&lt;h3 id=&#34;包图&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#包图&#34;&gt;#&lt;/a&gt; 包图&lt;/h3&gt;
&lt;p&gt;分层风格，分为 presentation, logic, data 三层&lt;/p&gt;
&lt;p&gt;&amp;lt;img src=&amp;quot;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9xdWFzZG8ub3NzLWNuLWhhbmd6aG91LmFsaXl1bmNzLmNvbS9pbWcvaW1hZ2UtMjAyMzA2MTcyMTA5MDQ1NDMucG5n&#34;&gt;https://quasdo.oss-cn-hangzhou.aliyuncs.com/img/image-20230617210904543.png&lt;/span&gt;&amp;quot; alt=&amp;quot;image-20230617210904543&amp;quot; style=&amp;quot;zoom:33%;&amp;quot; /&amp;gt;&lt;/p&gt;
&lt;h4 id=&#34;逻辑设计&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#逻辑设计&#34;&gt;#&lt;/a&gt; 逻辑设计&lt;/h4&gt;
&lt;p&gt;&amp;lt;img src=&amp;quot;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9xdWFzZG8ub3NzLWNuLWhhbmd6aG91LmFsaXl1bmNzLmNvbS9pbWcvaW1hZ2UtMjAyMzA2MTcyMTA2NDQ0NDAucG5n&#34;&gt;https://quasdo.oss-cn-hangzhou.aliyuncs.com/img/image-20230617210644440.png&lt;/span&gt;&amp;quot; alt=&amp;quot;image-20230617210644440&amp;quot; style=&amp;quot;zoom: 33%;&amp;quot; /&amp;gt;&lt;/p&gt;
&lt;p&gt;增加登录 logicController&lt;/p&gt;
&lt;p&gt;增加 RMI，分离服务端和客户端&lt;/p&gt;
&lt;p&gt;&amp;lt;img src=&amp;quot;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9xdWFzZG8ub3NzLWNuLWhhbmd6aG91LmFsaXl1bmNzLmNvbS9pbWcvaW1hZ2UtMjAyMzA2MTcyMTA5NTEzMzcucG5n&#34;&gt;https://quasdo.oss-cn-hangzhou.aliyuncs.com/img/image-20230617210951337.png&lt;/span&gt;&amp;quot; alt=&amp;quot;image-20230617210951337&amp;quot; style=&amp;quot;zoom:33%;&amp;quot; /&amp;gt;&lt;/p&gt;
&lt;h4 id=&#34;物理设计&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#物理设计&#34;&gt;#&lt;/a&gt; 物理设计&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;presentation
&lt;ul&gt;
&lt;li&gt;建立界面
&lt;ul&gt;
&lt;li&gt;界面类库包&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;跳转逻辑
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;mainui&lt;/code&gt;  包&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;logic
&lt;ul&gt;
&lt;li&gt;不希望高层直接依赖低层
&lt;ul&gt;
&lt;li&gt;增加 &lt;code&gt;businesslogicservice&lt;/code&gt;  包：ui 和 logic 都会依赖，前者调用，后者实现&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;一些初始化与业务逻辑层上下文工作
&lt;ul&gt;
&lt;li&gt;增加 &lt;code&gt;utilitybl&lt;/code&gt;  包，其他 bl 包均会依赖&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;data
&lt;ul&gt;
&lt;li&gt;持久化，会导致重复代码
&lt;ul&gt;
&lt;li&gt;增加 &lt;code&gt;databaseutility&lt;/code&gt;  包，依赖 &lt;code&gt;JDBC&lt;/code&gt;  类库包或 &lt;code&gt;IO&lt;/code&gt;  类库包&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;层间
&lt;ul&gt;
&lt;li&gt;logic 与 data
&lt;ul&gt;
&lt;li&gt;数据问题：将 data 分为&lt;strong&gt;客户端&lt;/strong&gt;的 &lt;code&gt;daraservice&lt;/code&gt;  与&lt;strong&gt;服务器端&lt;/strong&gt;的 &lt;code&gt;data&lt;/code&gt; ，都依赖于 &lt;code&gt;RMI&lt;/code&gt;  类库包&lt;/li&gt;
&lt;li&gt;传递问题： &lt;code&gt;PO&lt;/code&gt;  包， persistent object&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;presentation 与 logic
&lt;ul&gt;
&lt;li&gt;传递问题： &lt;code&gt;VO&lt;/code&gt;  包， value object&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;无环依赖原则
&lt;ul&gt;
&lt;li&gt;消除互环
&lt;ul&gt;
&lt;li&gt;实现接口和调用：将 commodity 和 member 的抽象接口放入 sales&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img data-src=&#34;https://quasdo.oss-cn-hangzhou.aliyuncs.com/img/image-20230617211817834.png&#34; alt=&#34;image-20230617211817834&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://quasdo.oss-cn-hangzhou.aliyuncs.com/img/image-20230617211833346.png&#34; alt=&#34;image-20230617211833346&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://quasdo.oss-cn-hangzhou.aliyuncs.com/img/image-20230617212617519.png&#34; alt=&#34;image-20230617212617519&#34; /&gt;&lt;/p&gt;
&lt;h3 id=&#34;进程图&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#进程图&#34;&gt;#&lt;/a&gt; 进程图&lt;/h3&gt;
&lt;p&gt;&lt;img data-src=&#34;https://quasdo.oss-cn-hangzhou.aliyuncs.com/img/image-20230617212557635.png&#34; alt=&#34;image-20230617212557635&#34; /&gt;&lt;/p&gt;
&lt;h3 id=&#34;关键类图&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#关键类图&#34;&gt;#&lt;/a&gt; 关键类图&lt;/h3&gt;
&lt;p&gt;&amp;lt;img src=&amp;quot;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9xdWFzZG8ub3NzLWNuLWhhbmd6aG91LmFsaXl1bmNzLmNvbS9pbWcvaW1hZ2UtMjAyMzA2MTcyMTI1Mzg4ODUucG5n&#34;&gt;https://quasdo.oss-cn-hangzhou.aliyuncs.com/img/image-20230617212538885.png&lt;/span&gt;&amp;quot; alt=&amp;quot;image-20230617212538885&amp;quot; style=&amp;quot;zoom: 25%;&amp;quot; /&amp;gt;&lt;/p&gt;
&lt;h3 id=&#34;持久化po&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#持久化po&#34;&gt;#&lt;/a&gt; 持久化 PO&lt;/h3&gt;
&lt;p&gt;&amp;lt;img src=&amp;quot;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9xdWFzZG8ub3NzLWNuLWhhbmd6aG91LmFsaXl1bmNzLmNvbS9pbWcvaW1hZ2UtMjAyMzA2MTcyMTI2Mzk4MzQucG5n&#34;&gt;https://quasdo.oss-cn-hangzhou.aliyuncs.com/img/image-20230617212639834.png&lt;/span&gt;&amp;quot; alt=&amp;quot;image-20230617212639834&amp;quot; style=&amp;quot;zoom: 33%;&amp;quot; /&amp;gt;&lt;/p&gt;
&lt;h3 id=&#34;接口&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#接口&#34;&gt;#&lt;/a&gt; 接口&lt;/h3&gt;
&lt;p&gt;&amp;lt;img src=&amp;quot;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9xdWFzZG8ub3NzLWNuLWhhbmd6aG91LmFsaXl1bmNzLmNvbS9pbWcvaW1hZ2UtMjAyMzA2MTcyMTI2Mjk0OTYucG5n&#34;&gt;https://quasdo.oss-cn-hangzhou.aliyuncs.com/img/image-20230617212629496.png&lt;/span&gt;&amp;quot; alt=&amp;quot;image-20230617212629496&amp;quot; style=&amp;quot;zoom:33%;&amp;quot; /&amp;gt;&lt;/p&gt;
&lt;p&gt;&amp;lt;img src=&amp;quot;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9xdWFzZG8ub3NzLWNuLWhhbmd6aG91LmFsaXl1bmNzLmNvbS9pbWcvaW1hZ2UtMjAyMzA2MTkwMDI1NTE4MTkucG5n&#34;&gt;https://quasdo.oss-cn-hangzhou.aliyuncs.com/img/image-20230619002551819.png&lt;/span&gt;&amp;quot; alt=&amp;quot;image-20230619002551819&amp;quot; style=&amp;quot;zoom:33%;&amp;quot; /&amp;gt;&lt;/p&gt;
&lt;p&gt;&amp;lt;img src=&amp;quot;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9xdWFzZG8ub3NzLWNuLWhhbmd6aG91LmFsaXl1bmNzLmNvbS9pbWcvaW1hZ2UtMjAyMzA2MTkwMDI2MTY0NzIucG5n&#34;&gt;https://quasdo.oss-cn-hangzhou.aliyuncs.com/img/image-20230619002616472.png&lt;/span&gt;&amp;quot; alt=&amp;quot;image-20230619002616472&amp;quot; style=&amp;quot;zoom:33%;&amp;quot; /&amp;gt;&lt;/p&gt;
&lt;p&gt;&amp;lt;img src=&amp;quot;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9xdWFzZG8ub3NzLWNuLWhhbmd6aG91LmFsaXl1bmNzLmNvbS9pbWcvaW1hZ2UtMjAyMzA2MTcyMTI4MTU1MjMucG5n&#34;&gt;https://quasdo.oss-cn-hangzhou.aliyuncs.com/img/image-20230617212815523.png&lt;/span&gt;&amp;quot; alt=&amp;quot;image-20230617212815523&amp;quot; style=&amp;quot;zoom:33%;&amp;quot; /&amp;gt;&lt;/p&gt;
&lt;p&gt;&amp;lt;img src=&amp;quot;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9xdWFzZG8ub3NzLWNuLWhhbmd6aG91LmFsaXl1bmNzLmNvbS9pbWcvaW1hZ2UtMjAyMzA2MTkwMDE5NDgyMzQucG5n&#34;&gt;https://quasdo.oss-cn-hangzhou.aliyuncs.com/img/image-20230619001948234.png&lt;/span&gt;&amp;quot; alt=&amp;quot;image-20230619001948234&amp;quot; style=&amp;quot;zoom: 33%;&amp;quot; /&amp;gt;&lt;/p&gt;
&lt;p&gt;&amp;lt;img src=&amp;quot;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9xdWFzZG8ub3NzLWNuLWhhbmd6aG91LmFsaXl1bmNzLmNvbS9pbWcvaW1hZ2UtMjAyMzA2MTkwMDIwMTk3MTMucG5n&#34;&gt;https://quasdo.oss-cn-hangzhou.aliyuncs.com/img/image-20230619002019713.png&lt;/span&gt;&amp;quot; alt=&amp;quot;image-20230619002019713&amp;quot; style=&amp;quot;zoom:33%;&amp;quot; /&amp;gt;&lt;/p&gt;
&lt;h3 id=&#34;题型-2&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#题型-2&#34;&gt;#&lt;/a&gt; 题型&lt;/h3&gt;
&lt;p&gt;&lt;img data-src=&#34;https://quasdo.oss-cn-hangzhou.aliyuncs.com/img/image-20230618235532418.png&#34; alt=&#34;image-20230618235532418&#34; /&gt;&lt;/p&gt;
&lt;h3 id=&#34;例题-3&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#例题-3&#34;&gt;#&lt;/a&gt; 例题&lt;/h3&gt;
&lt;p&gt;&lt;img data-src=&#34;https://quasdo.oss-cn-hangzhou.aliyuncs.com/img/image-20230617145000599.png&#34; alt=&#34;image-20230617145000599&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&amp;lt;img src=&amp;quot;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9xdWFzZG8ub3NzLWNuLWhhbmd6aG91LmFsaXl1bmNzLmNvbS9pbWcvQjY1NjAyMzNFMEVDMjg0MDEwRDE1RkJFMDk1OEU2NTkucG5n&#34;&gt;https://quasdo.oss-cn-hangzhou.aliyuncs.com/img/B6560233E0EC284010D15FBE0958E659.png&lt;/span&gt;&amp;quot; alt=&amp;quot;B6560233E0EC284010D15FBE0958E659&amp;quot; style=&amp;quot;zoom:33%;&amp;quot; /&amp;gt;&lt;/p&gt;
&lt;p&gt;&amp;lt;img src=&amp;quot;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9xdWFzZG8ub3NzLWNuLWhhbmd6aG91LmFsaXl1bmNzLmNvbS9pbWcvMjI4RkNFNDUxNjE4QkU0OUFBMjRCQTY0RDE3NjNDMjcucG5n&#34;&gt;https://quasdo.oss-cn-hangzhou.aliyuncs.com/img/228FCE451618BE49AA24BA64D1763C27.png&lt;/span&gt;&amp;quot; alt=&amp;quot;228FCE451618BE49AA24BA64D1763C27&amp;quot; style=&amp;quot;zoom:33%;&amp;quot; /&amp;gt;&lt;/p&gt;
&lt;p&gt;&amp;lt;img src=&amp;quot;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9xdWFzZG8ub3NzLWNuLWhhbmd6aG91LmFsaXl1bmNzLmNvbS9pbWcvN0VBRDRBQjhFMjk2MDg2Njk0NDNBNTMyNURGQ0E5QjQucG5n&#34;&gt;https://quasdo.oss-cn-hangzhou.aliyuncs.com/img/7EAD4AB8E29608669443A5325DFCA9B4.png&lt;/span&gt;&amp;quot; alt=&amp;quot;7EAD4AB8E29608669443A5325DFCA9B4&amp;quot; style=&amp;quot;zoom: 50%;&amp;quot; /&amp;gt;&lt;/p&gt;
&lt;p&gt;展示层和逻辑层的数据交互用 VO，函数名诸如 &lt;code&gt;addXXXX&lt;/code&gt;   &lt;code&gt;getXXXXbyId&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;逻辑层和数据层的交互用 PO，函数名诸如 &lt;code&gt;get&lt;/code&gt; 、 &lt;code&gt;insert&lt;/code&gt; 、 &lt;code&gt;find&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;（都是我猜的）&lt;/p&gt;
&lt;h2 id=&#34;人机交互界面设计&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#人机交互界面设计&#34;&gt;#&lt;/a&gt; 人机交互（界面设计）&lt;/h2&gt;
&lt;h3 id=&#34;知识点-2&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#知识点-2&#34;&gt;#&lt;/a&gt; 知识点&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;简洁设计&lt;/strong&gt;：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;7+-2 原则&lt;/li&gt;
&lt;li&gt;不在一个窗口展示过多信息，功能清晰明确&lt;/li&gt;
&lt;li&gt;摘要图片优于文字描述&lt;/li&gt;
&lt;li&gt;不要大菜单，不要过多的信息类别，不要太多的颜色和字体&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;一致性设计&lt;/strong&gt;：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;依据&lt;strong&gt;精神模型&lt;/strong&gt;，让系统中相似的任务有一致的交互机制（按钮位置等等）&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;低出错率设计&lt;/strong&gt;：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;避免犯错&lt;/p&gt;
&lt;p&gt;数值域不可输入字符&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;友好建议：&lt;/p&gt;
&lt;p&gt;提供简洁的指导帮助⽤户消除错误，用户输入错误信息，系统会标注出来，而不是让用户重写整段代码&lt;/p&gt;
&lt;p&gt;语言清晰，表达准确，建设性帮助，友好，不应责备&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;易记性&lt;/strong&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;减少用户的记忆负担&lt;/li&gt;
&lt;li&gt;使用逐层递进的范式展示信息&lt;/li&gt;
&lt;li&gt;使用直观的快捷方式&lt;/li&gt;
&lt;li&gt;设置有意义的默认值&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;所见即所得&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;使用导航&lt;/strong&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;导航的目的就是为用户提供一个很好的完成&lt;strong&gt;任务的入口&lt;/strong&gt;，好的导航会让这个入口非常符合人的精神模型&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;全局导航控件包括窗口、菜单、列表、快捷方式、热键等等。&lt;/p&gt;
&lt;p&gt;局部导航通过安排布局细节，制造视觉上的线索来提供导航。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;反馈&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;按钮点击等在视觉（声音）上给用户反馈，让用户意识到&lt;strong&gt;行为的结果&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;反馈的目的是提示用户交互行为的结果，但不能打断用户工作时的意识流。对用户思考和反应时间的把握。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;协作式设计&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;人和计算机是人机交互的两方，其中人的因素是比较固定的，一定时期内不会发生大的变化，所以要让两者交互顺畅，就需要让计算机更多地适应人的因素，这也是人机交互设计以用户为中心的根本原因。这种&lt;strong&gt;调整计算机因素以更好地适应并帮助用户的设计方式&lt;/strong&gt;被称作为协作式设计。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;** 精神模型：** 就是用户进行人机交互时头脑中的任务模型。人机交互设计需要依据精神模型进行隐喻设计，依据隐喻将控件功能与已知的熟悉事物联系起来，实现界面视觉提示和系统功能之间的知觉联系&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;差异性&lt;/strong&gt;：对不同用户群体的任务模型是有差异的，所以对他们的人机交互设计也要有差异。按照用户群体自身的特点，可以将其划分为新手用户、专家用户和熟练用户&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;题型-3&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#题型-3&#34;&gt;#&lt;/a&gt; 题型&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;能够列出 5 个界面设计的注意事项，并加以解释&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;例子违反了哪些条界面设计原则&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;分析上图，它们分别体现（或违反）了哪些人机交互设计原则？请详细解释这些原则（10 分）&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;例子&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#例子&#34;&gt;#&lt;/a&gt; 例子&lt;/h3&gt;
&lt;p&gt;&lt;img data-src=&#34;https://quasdo.oss-cn-hangzhou.aliyuncs.com/img/image-20230617144952956.png&#34; alt=&#34;image-20230617144952956&#34; /&gt;&lt;/p&gt;
&lt;p&gt;对左图：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;违反了简洁设计，交互信息过多，摘要图片比描述文字更清晰&lt;/li&gt;
&lt;li&gt;违反了一致性原则，按钮位置不一致，如 cancel 和 ok 的位置，不符合精神模型（已存在相似系统）&lt;/li&gt;
&lt;li&gt;违反了低出错率原则，选择的进度条不明显&lt;/li&gt;
&lt;li&gt;违反了易记性原则，没有清晰的导航或直观的快捷方式，没有减少记忆负担，将所有 certificate 列出，用户不容易记住&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img data-src=&#34;https://quasdo.oss-cn-hangzhou.aliyuncs.com/img/image-20230617155938257.png&#34; alt=&#34;image-20230617155938257&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://quasdo.oss-cn-hangzhou.aliyuncs.com/img/image-20230617170644993.png&#34; alt=&#34;image-20230617170644993&#34; /&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;符合简洁设计原则，模块结构清晰，没有提供过多的信息，符合 7+2 的原则，颜色简单&lt;/li&gt;
&lt;li&gt;符合一致性原则，符合用户的精神模型，与已有类似的界面相似&lt;/li&gt;
&lt;li&gt;符合易用性原则，递进式地展示菜单，使用直观的快捷方式，减轻用户的记忆负担&lt;/li&gt;
&lt;li&gt;所见即所得&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;详细设计&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#详细设计&#34;&gt;#&lt;/a&gt; 详细设计&lt;/h2&gt;
&lt;p&gt;&lt;img data-src=&#34;https://quasdo.oss-cn-hangzhou.aliyuncs.com/img/image-20230617170624416.png&#34; alt=&#34;image-20230617170624416&#34; /&gt;&lt;/p&gt;
&lt;h3 id=&#34;知识点-3&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#知识点-3&#34;&gt;#&lt;/a&gt; 知识点&lt;/h3&gt;
&lt;h4 id=&#34;详细设计的出发点&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#详细设计的出发点&#34;&gt;#&lt;/a&gt; 详细设计的出发点&lt;/h4&gt;
&lt;p&gt;软件详细设计是在软件体系结构设计之后进行，&lt;strong&gt;以需求开发的结果&lt;/strong&gt; (需求规格说明和需求分析模型) 和&lt;strong&gt;软件体系结构的结果&lt;/strong&gt; (软件体系结构设计方案与原型) 为出发点。&lt;/p&gt;
&lt;h4 id=&#34;职责分配&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#职责分配&#34;&gt;#&lt;/a&gt; 职责分配&lt;/h4&gt;
&lt;p&gt;职责是执行任务（操作职责）或维护某些数据（数据职责）的义务。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;行为职责通常由方法来履行。&lt;/li&gt;
&lt;li&gt;数据职责通常由属性来完成。&lt;/li&gt;
&lt;li&gt;可能会涉及到类之间的协作。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;职责分类&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;属性职责：对象的状态&lt;/li&gt;
&lt;li&gt;行为职责：对象的行为&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;通过职责建立&lt;strong&gt;静态设计模型&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;职责分配可以从不同的抽象层次开始：职责是可以被分解的，职责分解是组件分解的基础&lt;br /&gt;
职责分配可以帮助实现高内聚，低耦合，确保不同模块职责没有重合，当且仅当数据和方法有利于模块职责时才添加。&lt;/p&gt;
&lt;p&gt;（关系）依赖 &amp;lt; 关联 &amp;lt; 聚合 &amp;lt; 组合 &amp;lt; 继承&lt;/p&gt;
&lt;h4 id=&#34;grasp一般职责分配软件模式&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#grasp一般职责分配软件模式&#34;&gt;#&lt;/a&gt; GRASP 一般职责分配软件模式&lt;/h4&gt;
&lt;ol&gt;
&lt;li&gt;特点：
&lt;ol&gt;
&lt;li&gt;低耦合：分配一个职责要保证低耦合度&lt;/li&gt;
&lt;li&gt;高聚合：分配一个职责的时候要保持类的高聚合度&lt;/li&gt;
&lt;li&gt;信息专家：将一个职责分配给专家 - 拥有履行职责所必须的信息的类&lt;/li&gt;
&lt;li&gt;创建者：创建规则在后面&lt;/li&gt;
&lt;li&gt;控制者：控制规则在后面（避免大多数信息由一个类发出、组件相对较小、行为职责和数据绑定、职责单一）&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;拇指原则：当有替代设计选择时，请仔细研究替代方案的内聚和耦合影响，以及未来可能对替代方案的演变压力。选择具有良好内聚性、耦合性和稳定性的替代方案。&lt;/li&gt;
&lt;li&gt;信息专家：统一提供对外的接口，而不是某一个具体的接口，数据和行为不要分开&lt;/li&gt;
&lt;li&gt;创建规则：如果有以下情况，则由创建者分配 B 类创建 A 类实例的职责：
&lt;ol&gt;
&lt;li&gt;B 聚合了 A 对象&lt;/li&gt;
&lt;li&gt;B 包含了 A 对象&lt;/li&gt;
&lt;li&gt;B 记录了 A 的实例&lt;/li&gt;
&lt;li&gt;B 要经常使用 A 对象&lt;/li&gt;
&lt;li&gt;当 A 的实例被创建，B 具有传递给 A 的初始化数据（也就是 B 是创建 A 的实例这项任务的信息专家）&lt;/li&gt;
&lt;li&gt;在有选择的地方，更喜欢 B 聚合或包含 A 对象&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h4 id=&#34;协作&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#协作&#34;&gt;#&lt;/a&gt; 协作&lt;/h4&gt;
&lt;p&gt;从小到大，将对象的小职责聚合成大职责&lt;/p&gt;
&lt;p&gt;从大到小，将大职责分配给每个小对象&lt;/p&gt;
&lt;p&gt;同时运用这两种方法，共同来完成对协作的抽象&lt;/p&gt;
&lt;p&gt;绘制顺序图&lt;/p&gt;
&lt;p&gt;表达软件的动态模型&lt;/p&gt;
&lt;h4 id=&#34;控制风格&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#控制风格&#34;&gt;#&lt;/a&gt; 控制风格&lt;/h4&gt;
&lt;ol&gt;
&lt;li&gt;集中式控制风格：做决策的只有一个对象&lt;/li&gt;
&lt;li&gt;委托式控制风格：做出决策的对象不只有一个，&lt;strong&gt;职责的分解决定了控制对象的层次&lt;/strong&gt;。&lt;/li&gt;
&lt;li&gt;分散式控制风格：无明确的控制对象，每个对象只承担想对较小的职责，完全靠各个对象自治的方式来实现大的职责&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;可查看书上类图&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://quasdo.oss-cn-hangzhou.aliyuncs.com/img/image-20230619180139238.png&#34; alt=&#34;image-20230619180139238&#34; /&gt;&lt;/p&gt;
&lt;h4 id=&#34;协作的测试&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#协作的测试&#34;&gt;#&lt;/a&gt; 协作的测试&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;Mock Object：类间协作的桩程序&lt;/li&gt;
&lt;li&gt;与体系结构集成的 stub 类型桩程序不同，Mock Object 要求自身的测试代码更简单，不用测试就能保证正确性&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;设计类图&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#设计类图&#34;&gt;#&lt;/a&gt; 设计类图&lt;/h4&gt;
&lt;p&gt;&amp;lt;img src=&amp;quot;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9xdWFzZG8ub3NzLWNuLWhhbmd6aG91LmFsaXl1bmNzLmNvbS9pbWcvaW1hZ2UtMjAyMzA2MTkwMDIzMDQ1NDYucG5n&#34;&gt;https://quasdo.oss-cn-hangzhou.aliyuncs.com/img/image-20230619002304546.png&lt;/span&gt;&amp;quot; alt=&amp;quot;image-20230619002304546&amp;quot; style=&amp;quot;zoom: 33%;&amp;quot; /&amp;gt;&lt;/p&gt;
&lt;h4 id=&#34;详细顺序图&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#详细顺序图&#34;&gt;#&lt;/a&gt; 详细顺序图&lt;/h4&gt;
&lt;p&gt;&lt;img data-src=&#34;https://quasdo.oss-cn-hangzhou.aliyuncs.com/img/image-20230619185109209.png&#34; alt=&#34;image-20230619185109209&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://quasdo.oss-cn-hangzhou.aliyuncs.com/img/46232BBCC2798A511945CAF26C596D3C.jpg&#34; alt=&#34;46232BBCC2798A511945CAF26C596D3C&#34; /&gt;&lt;/p&gt;
&lt;h3 id=&#34;例题-4&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#例题-4&#34;&gt;#&lt;/a&gt; 例题&lt;/h3&gt;
&lt;h2 id=&#34;耦合内聚&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#耦合内聚&#34;&gt;#&lt;/a&gt; 耦合 / 内聚&lt;/h2&gt;
&lt;h3 id=&#34;知识点-4&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#知识点-4&#34;&gt;#&lt;/a&gt; 知识点&lt;/h3&gt;
&lt;p&gt;&lt;img data-src=&#34;https://quasdo.oss-cn-hangzhou.aliyuncs.com/img/image-20230617144725911.png&#34; alt=&#34;image-20230617144725911&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://quasdo.oss-cn-hangzhou.aliyuncs.com/img/image-20230617144738739.png&#34; alt=&#34;image-20230617144738739&#34; /&gt;&lt;/p&gt;
&lt;p&gt;判断是哪种耦合 / 内聚，可以接受吗？如何修改？&lt;/p&gt;
&lt;p&gt;耦合：内容、公共、重复不可接受，控制、印记可以接受，数据最理想&lt;/p&gt;
&lt;p&gt;内聚：偶然和逻辑不可接受，时间、过程、通信可以接受且不可避免，功能和信息最理想&lt;/p&gt;
&lt;h3 id=&#34;例子-2&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#例子-2&#34;&gt;#&lt;/a&gt; 例子&lt;/h3&gt;
&lt;h4 id=&#34;内聚&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#内聚&#34;&gt;#&lt;/a&gt; 内聚&lt;/h4&gt;
&lt;p&gt;偶然内聚：完全不相关&lt;/p&gt;
&lt;p&gt;&amp;lt;img src=&amp;quot;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9xdWFzZG8ub3NzLWNuLWhhbmd6aG91LmFsaXl1bmNzLmNvbS9pbWcvaW1hZ2UtMjAyMzA2MTcxNTA2MDQyNzgucG5n&#34;&gt;https://quasdo.oss-cn-hangzhou.aliyuncs.com/img/image-20230617150604278.png&lt;/span&gt;&amp;quot; alt=&amp;quot;image-20230617150604278&amp;quot; style=&amp;quot;zoom:33%;&amp;quot; /&amp;gt;&lt;/p&gt;
&lt;p&gt;逻辑内聚：执行一系列操作，具体操作交给具体模块（如 swtich），解决控制耦合的方法&lt;/p&gt;
&lt;p&gt;&amp;lt;img src=&amp;quot;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9lYWdsZWJlYXIyMDAyLmdpdGh1Yi5pby8yMDIyU3ByaW5nLSVFOCVCRCVBRiVFNCVCQiVCNiVFNSVCNyVBNSVFNyVBOCU4QiVFNCVCOCU4RSVFOCVBRSVBMSVFNyVBRSU5N0lJLyVFOCVCRCVBRiVFNCVCQiVCNiVFNSVCNyVBNSVFNyVBOCU4QiVFNCVCOCU4RSVFOCVBRSVBMSVFNyVBRSU5N0lJLTI0LSVFNSVBNCU4RCVFNCVCOSVBMCVFNiU4RiU5MCVFNyVCQSVCMi8zNi0xNjU0ODcyMDQ5MzY3Ny5wbmc=&#34;&gt;https://eaglebear2002.github.io/2022Spring - 软件工程与计算 II / 软件工程与计算 II-24 - 复习提纲 / 36-16548720493677.png&lt;/span&gt;&amp;quot; alt=&amp;quot;img&amp;quot; style=&amp;quot;zoom: 50%;&amp;quot; /&amp;gt;&lt;/p&gt;
&lt;p&gt;时间内聚：执行一系列和时间有关的操作，比如构造方法和析构方法&lt;/p&gt;
&lt;p&gt;&amp;lt;img src=&amp;quot;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9lYWdsZWJlYXIyMDAyLmdpdGh1Yi5pby8yMDIyU3ByaW5nLSVFOCVCRCVBRiVFNCVCQiVCNiVFNSVCNyVBNSVFNyVBOCU4QiVFNCVCOCU4RSVFOCVBRSVBMSVFNyVBRSU5N0lJLyVFOCVCRCVBRiVFNCVCQiVCNiVFNSVCNyVBNSVFNyVBOCU4QiVFNCVCOCU4RSVFOCVBRSVBMSVFNyVBRSU5N0lJLTI0LSVFNSVBNCU4RCVFNCVCOSVBMCVFNiU4RiU5MCVFNyVCQSVCMi8zNy0xNjU0ODcyMDQ5MzY3OC5wbmc=&#34;&gt;https://eaglebear2002.github.io/2022Spring - 软件工程与计算 II / 软件工程与计算 II-24 - 复习提纲 / 37-16548720493678.png&lt;/span&gt;&amp;quot; alt=&amp;quot;img&amp;quot; style=&amp;quot;zoom: 67%;&amp;quot; /&amp;gt;&lt;/p&gt;
&lt;p&gt;过程内聚：执行一系列与步骤顺序有关的操作&lt;/p&gt;
&lt;p&gt;&amp;lt;img src=&amp;quot;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9lYWdsZWJlYXIyMDAyLmdpdGh1Yi5pby8yMDIyU3ByaW5nLSVFOCVCRCVBRiVFNCVCQiVCNiVFNSVCNyVBNSVFNyVBOCU4QiVFNCVCOCU4RSVFOCVBRSVBMSVFNyVBRSU5N0lJLyVFOCVCRCVBRiVFNCVCQiVCNiVFNSVCNyVBNSVFNyVBOCU4QiVFNCVCOCU4RSVFOCVBRSVBMSVFNyVBRSU5N0lJLTI0LSVFNSVBNCU4RCVFNCVCOSVBMCVFNiU4RiU5MCVFNyVCQSVCMi8zOC0xNjc2NTI5NDk0ODUwLTIyMTQucG5n&#34;&gt;https://eaglebear2002.github.io/2022Spring - 软件工程与计算 II / 软件工程与计算 II-24 - 复习提纲 / 38-1676529494850-2214.png&lt;/span&gt;&amp;quot; alt=&amp;quot;img&amp;quot; style=&amp;quot;zoom: 80%;&amp;quot; /&amp;gt;&lt;/p&gt;
&lt;p&gt;通信内聚：执行一系列与步骤顺序有关的操作，并且这些操作是在相同的数据结构上。&lt;/p&gt;
&lt;p&gt;&amp;lt;img src=&amp;quot;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9lYWdsZWJlYXIyMDAyLmdpdGh1Yi5pby8yMDIyU3ByaW5nLSVFOCVCRCVBRiVFNCVCQiVCNiVFNSVCNyVBNSVFNyVBOCU4QiVFNCVCOCU4RSVFOCVBRSVBMSVFNyVBRSU5N0lJLyVFOCVCRCVBRiVFNCVCQiVCNiVFNSVCNyVBNSVFNyVBOCU4QiVFNCVCOCU4RSVFOCVBRSVBMSVFNyVBRSU5N0lJLTI0LSVFNSVBNCU4RCVFNCVCOSVBMCVFNiU4RiU5MCVFNyVCQSVCMi8zOS0xNjc2NTI5NDk0ODUwLTIyMTUucG5n&#34;&gt;https://eaglebear2002.github.io/2022Spring - 软件工程与计算 II / 软件工程与计算 II-24 - 复习提纲 / 39-1676529494850-2215.png&lt;/span&gt;&amp;quot; alt=&amp;quot;img&amp;quot; style=&amp;quot;zoom:50%;&amp;quot; /&amp;gt;&lt;/p&gt;
&lt;p&gt;功能内聚：模块只执行一个操作或达到一个单一目的&lt;/p&gt;
&lt;p&gt;&amp;lt;img src=&amp;quot;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9lYWdsZWJlYXIyMDAyLmdpdGh1Yi5pby8yMDIyU3ByaW5nLSVFOCVCRCVBRiVFNCVCQiVCNiVFNSVCNyVBNSVFNyVBOCU4QiVFNCVCOCU4RSVFOCVBRSVBMSVFNyVBRSU5N0lJLyVFOCVCRCVBRiVFNCVCQiVCNiVFNSVCNyVBNSVFNyVBOCU4QiVFNCVCOCU4RSVFOCVBRSVBMSVFNyVBRSU5N0lJLTI0LSVFNSVBNCU4RCVFNCVCOSVBMCVFNiU4RiU5MCVFNyVCQSVCMi80MC0xNjU0ODcyMDQ5MzY4OS5wbmc=&#34;&gt;https://eaglebear2002.github.io/2022Spring - 软件工程与计算 II / 软件工程与计算 II-24 - 复习提纲 / 40-16548720493689.png&lt;/span&gt;&amp;quot; alt=&amp;quot;img&amp;quot; style=&amp;quot;zoom:50%;&amp;quot; /&amp;gt;&lt;/p&gt;
&lt;p&gt;信息内聚：模块进行许多操作，各自有各自的入口，相互独立，且在相同的数据结构上完成操作。&lt;/p&gt;
&lt;p&gt;&amp;lt;img src=&amp;quot;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9lYWdsZWJlYXIyMDAyLmdpdGh1Yi5pby8yMDIyU3ByaW5nLSVFOCVCRCVBRiVFNCVCQiVCNiVFNSVCNyVBNSVFNyVBOCU4QiVFNCVCOCU4RSVFOCVBRSVBMSVFNyVBRSU5N0lJLyVFOCVCRCVBRiVFNCVCQiVCNiVFNSVCNyVBNSVFNyVBOCU4QiVFNCVCOCU4RSVFOCVBRSVBMSVFNyVBRSU5N0lJLTI0LSVFNSVBNCU4RCVFNCVCOSVBMCVFNiU4RiU5MCVFNyVCQSVCMi80MS0xNjU0ODcyMDQ5MzY4MTAucG5n&#34;&gt;https://eaglebear2002.github.io/2022Spring - 软件工程与计算 II / 软件工程与计算 II-24 - 复习提纲 / 41-165487204936810.png&lt;/span&gt;&amp;quot; alt=&amp;quot;img&amp;quot; style=&amp;quot;zoom:50%;&amp;quot; /&amp;gt;&lt;/p&gt;
&lt;h4 id=&#34;耦合&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#耦合&#34;&gt;#&lt;/a&gt; 耦合&lt;/h4&gt;
&lt;p&gt;数据耦合：两个模块的所有参数是同类型的数据项（发送正好）&lt;/p&gt;
&lt;p&gt;&amp;lt;img src=&amp;quot;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9lYWdsZWJlYXIyMDAyLmdpdGh1Yi5pby8yMDIyU3ByaW5nLSVFOCVCRCVBRiVFNCVCQiVCNiVFNSVCNyVBNSVFNyVBOCU4QiVFNCVCOCU4RSVFOCVBRSVBMSVFNyVBRSU5N0lJLyVFOCVCRCVBRiVFNCVCQiVCNiVFNSVCNyVBNSVFNyVBOCU4QiVFNCVCOCU4RSVFOCVBRSVBMSVFNyVBRSU5N0lJLTI0LSVFNSVBNCU4RCVFNCVCOSVBMCVFNiU4RiU5MCVFNyVCQSVCMi80NS0xNjc2NTI5NDk0ODUwLTIyMTYucG5n&#34;&gt;https://eaglebear2002.github.io/2022Spring - 软件工程与计算 II / 软件工程与计算 II-24 - 复习提纲 / 45-1676529494850-2216.png&lt;/span&gt;&amp;quot; alt=&amp;quot;img&amp;quot; style=&amp;quot;zoom:50%;&amp;quot; /&amp;gt;&lt;/p&gt;
&lt;p&gt;印记耦合：两个模块共享一个数据结构，但是只用了其中一个部分（发送多了）&lt;/p&gt;
&lt;p&gt;&amp;lt;img src=&amp;quot;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9lYWdsZWJlYXIyMDAyLmdpdGh1Yi5pby8yMDIyU3ByaW5nLSVFOCVCRCVBRiVFNCVCQiVCNiVFNSVCNyVBNSVFNyVBOCU4QiVFNCVCOCU4RSVFOCVBRSVBMSVFNyVBRSU5N0lJLyVFOCVCRCVBRiVFNCVCQiVCNiVFNSVCNyVBNSVFNyVBOCU4QiVFNCVCOCU4RSVFOCVBRSVBMSVFNyVBRSU5N0lJLTI0LSVFNSVBNCU4RCVFNCVCOSVBMCVFNiU4RiU5MCVFNyVCQSVCMi8yOS0xNjU0ODcyMDQ5MzY5MTEucG5n&#34;&gt;https://eaglebear2002.github.io/2022Spring - 软件工程与计算 II / 软件工程与计算 II-24 - 复习提纲 / 29-165487204936911.png&lt;/span&gt;&amp;quot; alt=&amp;quot;img&amp;quot; style=&amp;quot;zoom: 67%;&amp;quot; /&amp;gt;&lt;/p&gt;
&lt;p&gt;&amp;lt;img src=&amp;quot;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9lYWdsZWJlYXIyMDAyLmdpdGh1Yi5pby8yMDIyU3ByaW5nLSVFOCVCRCVBRiVFNCVCQiVCNiVFNSVCNyVBNSVFNyVBOCU4QiVFNCVCOCU4RSVFOCVBRSVBMSVFNyVBRSU5N0lJLyVFOCVCRCVBRiVFNCVCQiVCNiVFNSVCNyVBNSVFNyVBOCU4QiVFNCVCOCU4RSVFOCVBRSVBMSVFNyVBRSU5N0lJLTI0LSVFNSVBNCU4RCVFNCVCOSVBMCVFNiU4RiU5MCVFNyVCQSVCMi8zMC0xNjc2NTI5NDk0ODUxLTIyMTcucG5n&#34;&gt;https://eaglebear2002.github.io/2022Spring - 软件工程与计算 II / 软件工程与计算 II-24 - 复习提纲 / 30-1676529494851-2217.png&lt;/span&gt;&amp;quot; alt=&amp;quot;img&amp;quot; style=&amp;quot;zoom:67%;&amp;quot; /&amp;gt;&lt;/p&gt;
&lt;p&gt;&amp;lt;img src=&amp;quot;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9lYWdsZWJlYXIyMDAyLmdpdGh1Yi5pby8yMDIyU3ByaW5nLSVFOCVCRCVBRiVFNCVCQiVCNiVFNSVCNyVBNSVFNyVBOCU4QiVFNCVCOCU4RSVFOCVBRSVBMSVFNyVBRSU5N0lJLyVFOCVCRCVBRiVFNCVCQiVCNiVFNSVCNyVBNSVFNyVBOCU4QiVFNCVCOCU4RSVFOCVBRSVBMSVFNyVBRSU5N0lJLTI0LSVFNSVBNCU4RCVFNCVCOSVBMCVFNiU4RiU5MCVFNyVCQSVCMi80NC0xNjc2NTI5NDk0ODUxLTIyMTgucG5n&#34;&gt;https://eaglebear2002.github.io/2022Spring - 软件工程与计算 II / 软件工程与计算 II-24 - 复习提纲 / 44-1676529494851-2218.png&lt;/span&gt;&amp;quot; alt=&amp;quot;img&amp;quot; style=&amp;quot;zoom:50%;&amp;quot; /&amp;gt;&lt;/p&gt;
&lt;p&gt;控制耦合：一个模块给另一个模块传递了控制信息（除了数据还有控制信号，并且违反了单一职责原则）&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;主要是 case 中不应该出现具体实现的代码，应该抽象成方法&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img data-src=&#34;https://eaglebear2002.github.io/2022Spring-%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E4%B8%8E%E8%AE%A1%E7%AE%97II/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E4%B8%8E%E8%AE%A1%E7%AE%97II-24-%E5%A4%8D%E4%B9%A0%E6%8F%90%E7%BA%B2/31-165487204937012.png&#34; alt=&#34;img&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&amp;lt;img src=&amp;quot;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9lYWdsZWJlYXIyMDAyLmdpdGh1Yi5pby8yMDIyU3ByaW5nLSVFOCVCRCVBRiVFNCVCQiVCNiVFNSVCNyVBNSVFNyVBOCU4QiVFNCVCOCU4RSVFOCVBRSVBMSVFNyVBRSU5N0lJLyVFOCVCRCVBRiVFNCVCQiVCNiVFNSVCNyVBNSVFNyVBOCU4QiVFNCVCOCU4RSVFOCVBRSVBMSVFNyVBRSU5N0lJLTI0LSVFNSVBNCU4RCVFNCVCOSVBMCVFNiU4RiU5MCVFNyVCQSVCMi80My0xNjc2NTI5NDk0ODUxLTIyMTkucG5n&#34;&gt;https://eaglebear2002.github.io/2022Spring - 软件工程与计算 II / 软件工程与计算 II-24 - 复习提纲 / 43-1676529494851-2219.png&lt;/span&gt;&amp;quot; alt=&amp;quot;img&amp;quot; style=&amp;quot;zoom:50%;&amp;quot; /&amp;gt;&lt;/p&gt;
&lt;p&gt;重复耦合：一个模块有逻辑上相同的重复代码&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://eaglebear2002.github.io/2022Spring-%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E4%B8%8E%E8%AE%A1%E7%AE%97II/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E4%B8%8E%E8%AE%A1%E7%AE%97II-24-%E5%A4%8D%E4%B9%A0%E6%8F%90%E7%BA%B2/34-1676529494851-2220.png&#34; alt=&#34;img&#34; /&gt;&lt;/p&gt;
&lt;p&gt;公共耦合：模块之间共享全局数据结构&lt;/p&gt;
&lt;p&gt;&amp;lt;img src=&amp;quot;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9lYWdsZWJlYXIyMDAyLmdpdGh1Yi5pby8yMDIyU3ByaW5nLSVFOCVCRCVBRiVFNCVCQiVCNiVFNSVCNyVBNSVFNyVBOCU4QiVFNCVCOCU4RSVFOCVBRSVBMSVFNyVBRSU5N0lJLyVFOCVCRCVBRiVFNCVCQiVCNiVFNSVCNyVBNSVFNyVBOCU4QiVFNCVCOCU4RSVFOCVBRSVBMSVFNyVBRSU5N0lJLTI0LSVFNSVBNCU4RCVFNCVCOSVBMCVFNiU4RiU5MCVFNyVCQSVCMi8zMi0xNjU0ODcyMDQ5MzcwMTMucG5n&#34;&gt;https://eaglebear2002.github.io/2022Spring - 软件工程与计算 II / 软件工程与计算 II-24 - 复习提纲 / 32-165487204937013.png&lt;/span&gt;&amp;quot; alt=&amp;quot;img&amp;quot; style=&amp;quot;zoom:50%;&amp;quot; /&amp;gt;&lt;/p&gt;
&lt;p&gt;&amp;lt;img src=&amp;quot;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9lYWdsZWJlYXIyMDAyLmdpdGh1Yi5pby8yMDIyU3ByaW5nLSVFOCVCRCVBRiVFNCVCQiVCNiVFNSVCNyVBNSVFNyVBOCU4QiVFNCVCOCU4RSVFOCVBRSVBMSVFNyVBRSU5N0lJLyVFOCVCRCVBRiVFNCVCQiVCNiVFNSVCNyVBNSVFNyVBOCU4QiVFNCVCOCU4RSVFOCVBRSVBMSVFNyVBRSU5N0lJLTI0LSVFNSVBNCU4RCVFNCVCOSVBMCVFNiU4RiU5MCVFNyVCQSVCMi80Ni0xNjc2NTI5NDk0ODUxLTIyMjEucG5n&#34;&gt;https://eaglebear2002.github.io/2022Spring - 软件工程与计算 II / 软件工程与计算 II-24 - 复习提纲 / 46-1676529494851-2221.png&lt;/span&gt;&amp;quot; alt=&amp;quot;img&amp;quot; style=&amp;quot;zoom:50%;&amp;quot; /&amp;gt;&lt;/p&gt;
&lt;p&gt;内容耦合：一个模块直接修改另一个模块的内容（成员变量、函数等）&lt;/p&gt;
&lt;h3 id=&#34;p226-227习题&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#p226-227习题&#34;&gt;#&lt;/a&gt; p226-227 习题&lt;/h3&gt;
&lt;ol start=&#34;6&#34;&gt;
&lt;li&gt;
&lt;p&gt;功能内聚&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;印记耦合，（通信内聚？）&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;通信内聚，数据耦合&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;控制耦合&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;时间内聚，拆成三个函数，在 init 当中调用&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://quasdo.oss-cn-hangzhou.aliyuncs.com/img/image-20230617161725358.png&#34; alt=&#34;image-20230617161725358&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://quasdo.oss-cn-hangzhou.aliyuncs.com/img/fbeacb1eb626519ad68930d40346622.png&#34; alt=&#34;fbeacb1eb626519ad68930d40346622&#34; /&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;信息隐藏&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#信息隐藏&#34;&gt;#&lt;/a&gt; 信息隐藏&lt;/h2&gt;
&lt;h3 id=&#34;基本思想&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#基本思想&#34;&gt;#&lt;/a&gt; 基本思想&lt;/h3&gt;
&lt;p&gt;每个模块都隐藏了重要设计决策的实现，因此只有该模块的组成部分才知道详细信息：特别是如果存在所有可能的设计更改的列表，则隐藏假设列表&lt;/p&gt;
&lt;h3 id=&#34;两种常见的信息隐藏决策&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#两种常见的信息隐藏决策&#34;&gt;#&lt;/a&gt; 两种常见的信息隐藏决策&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;按职责分解&lt;/strong&gt; - 根据需求分配的职责，因为实践表明，需求是经常变化的，频率和幅度都很大；&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;按算法分解&lt;/strong&gt; - 内部实现机制，常见的变化主题包括硬件依赖，输入输出形式，非标准语言特征和库，负责的设计和实现，复杂的数据结构，复杂的逻辑，全局变量。数据大小限制等。&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;对例子说明其信息隐藏程度的好坏&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#对例子说明其信息隐藏程度的好坏&#34;&gt;#&lt;/a&gt; 对例子 ***，说明其信息隐藏程度的好坏&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;封装数据和行为&lt;/li&gt;
&lt;li&gt;封装内部结构&lt;/li&gt;
&lt;li&gt;封装对象的引用&lt;/li&gt;
&lt;li&gt;委托隐藏了与其他对象的协作&lt;/li&gt;
&lt;li&gt;封装类型信息&lt;/li&gt;
&lt;li&gt;封装可能存在的变更&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img data-src=&#34;https://quasdo.oss-cn-hangzhou.aliyuncs.com/img/RM@ESVVEG_%60$_6KDF7$B7QG.JPG&#34; alt=&#34;RM@ESVVEG_B7QG&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://quasdo.oss-cn-hangzhou.aliyuncs.com/img/image-20230620002654223.png&#34; alt=&#34;image-20230620002654223&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://quasdo.oss-cn-hangzhou.aliyuncs.com/img/image-20230620002711981.png&#34; alt=&#34;image-20230620002711981&#34; /&gt;&lt;/p&gt;
&lt;h3 id=&#34;题型-4&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#题型-4&#34;&gt;#&lt;/a&gt; 题型&lt;/h3&gt;
&lt;p&gt;&lt;img data-src=&#34;https://quasdo.oss-cn-hangzhou.aliyuncs.com/img/image-20230619005242633.png&#34; alt=&#34;image-20230619005242633&#34; /&gt;&lt;/p&gt;
&lt;h3 id=&#34;例题-5&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#例题-5&#34;&gt;#&lt;/a&gt; 例题&lt;/h3&gt;
&lt;p&gt;&lt;img data-src=&#34;https://quasdo.oss-cn-hangzhou.aliyuncs.com/img/AgAABYrp6Svfn23qG8RFnZ9oI5VWkE5E.png&#34; alt=&#34;img&#34; /&gt;&lt;/p&gt;
&lt;p&gt;View 负责了展示，Logic 负责了统计求和。Data 负责各个数据的存储。&lt;/p&gt;
&lt;h2 id=&#34;设计规则&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#设计规则&#34;&gt;#&lt;/a&gt; 设计规则&lt;/h2&gt;
&lt;h3 id=&#34;规则罗列及详解&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#规则罗列及详解&#34;&gt;#&lt;/a&gt; 规则罗列及详解&lt;/h3&gt;
&lt;p&gt;&lt;img data-src=&#34;https://quasdo.oss-cn-hangzhou.aliyuncs.com/img/image-20230617232303090.png&#34; alt=&#34;image-20230617232303090&#34; /&gt;&lt;/p&gt;
&lt;h4 id=&#34;降低隐式耦合&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#降低隐式耦合&#34;&gt;#&lt;/a&gt; 降低隐式耦合&lt;/h4&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;全局变量是有害的&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;简洁&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;不要有代码重复&lt;/strong&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;h4 id=&#34;降低访问耦合&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#降低访问耦合&#34;&gt;#&lt;/a&gt; 降低访问耦合&lt;/h4&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;面对接口编程&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;接口分离原则（ISP)/ 也叫接口最小化原则&lt;/strong&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;将大的接口拆解成几个小的接口。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;这样可以有效避免出现不必要的依赖。&lt;/p&gt;
&lt;p&gt;&amp;lt;img src=&amp;quot;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9xdWFzZG8ub3NzLWNuLWhhbmd6aG91LmFsaXl1bmNzLmNvbS9pbWcvaW1hZ2UtMjAyMzA2MTkyMzI2MDYxOTMucG5n&#34;&gt;https://quasdo.oss-cn-hangzhou.aliyuncs.com/img/image-20230619232606193.png&lt;/span&gt;&amp;quot; alt=&amp;quot;image-20230619232606193&amp;quot; style=&amp;quot;zoom: 25%;&amp;quot; /&amp;gt;&lt;/p&gt;
&lt;p&gt;&amp;lt;img src=&amp;quot;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9xdWFzZG8ub3NzLWNuLWhhbmd6aG91LmFsaXl1bmNzLmNvbS9pbWcvaW1hZ2UtMjAyMzA2MTkyMzI2MjQ4NzIucG5n&#34;&gt;https://quasdo.oss-cn-hangzhou.aliyuncs.com/img/image-20230619232624872.png&lt;/span&gt;&amp;quot; alt=&amp;quot;image-20230619232624872&amp;quot; style=&amp;quot;zoom:25%;&amp;quot; /&amp;gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;迪米特法则&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;​	&amp;lt;img src=&amp;quot;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9xdWFzZG8ub3NzLWNuLWhhbmd6aG91LmFsaXl1bmNzLmNvbS9pbWcvaW1hZ2UtMjAyMzA2MTkyMzI2NDkyOTcucG5n&#34;&gt;https://quasdo.oss-cn-hangzhou.aliyuncs.com/img/image-20230619232649297.png&lt;/span&gt;&amp;quot; alt=&amp;quot;image-20230619232649297&amp;quot; style=&amp;quot;zoom: 25%;&amp;quot; /&amp;gt;&amp;lt;img src=&amp;quot;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9xdWFzZG8ub3NzLWNuLWhhbmd6aG91LmFsaXl1bmNzLmNvbS9pbWcvaW1hZ2UtMjAyMzA2MTkyMzI4MTE3MTgucG5n&#34;&gt;https://quasdo.oss-cn-hangzhou.aliyuncs.com/img/image-20230619232811718.png&lt;/span&gt;&amp;quot; alt=&amp;quot;image-20230619232811718&amp;quot; style=&amp;quot;zoom:25%;&amp;quot; /&amp;gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h4 id=&#34;降低继承耦合&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#降低继承耦合&#34;&gt;#&lt;/a&gt; 降低继承耦合&lt;/h4&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;LSP 里氏替换原则&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;子类型必须能够替换掉基类型而起同样的作用。&lt;/p&gt;
&lt;p&gt;保持父类的方法接口不变；保持父类方法的实现语义不变；（不能用 vector 实现 stack）&lt;/p&gt;
&lt;p&gt;只要调用一个接口，不论哪种子类或者父类本身，都可以完成相同语义的工作&lt;/p&gt;
&lt;p&gt;解决方案：在父类中添加方法或者函数，或者拆分接口&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;使用组合代替继承&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h4 id=&#34;提高内聚&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#提高内聚&#34;&gt;#&lt;/a&gt; 提高内聚&lt;/h4&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;集中信息和行为&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;单一职责原则&lt;/strong&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&amp;lt;img src=&amp;quot;C:/Users/QUAS/AppData/Roaming/Typora/typora-user-images/image-20230620083444560.png&amp;quot; alt=&amp;quot;image-20230620083444560&amp;quot; style=&amp;quot;zoom:33%;&amp;quot; /&amp;gt;&lt;/p&gt;
&lt;h4 id=&#34;其他&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#其他&#34;&gt;#&lt;/a&gt; 其他&lt;/h4&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;封装 —— 分离接口与实现&lt;/p&gt;
&lt;p&gt;含义：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;将数据和行为同时包含在类中&lt;/li&gt;
&lt;li&gt;分离对外接口与内部实现&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;实现细节：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;封装数据和行为（不要每个私有数据都有 getter 和 setter，也不要暴露存储数据和推导数据 calculateAge）&lt;/li&gt;
&lt;li&gt;封装内部结构（public Position getPosition 代替 public Position [] getPositions）&lt;/li&gt;
&lt;li&gt;封装其他对象的引用（新对象的引用返回）&lt;/li&gt;
&lt;li&gt;封装类型信息（隐藏子类，只知道共性类别）&lt;/li&gt;
&lt;li&gt;封装潜在变更&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;OCP 开闭原则&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;对扩展开放，对修改关闭，添加新的代码而不需要修改原来的代码就能实现变更&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;只要是发生了需求变更需要修改原有代码，则违反此原则&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;DIP 依赖倒置&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;高级模块不应该依赖于低级模块，两者都应该依赖于抽象&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;为具体类建立抽象接口并分离该接口&lt;/strong&gt;是中实现 DIP 的基本手段&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;例题-6&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#例题-6&#34;&gt;#&lt;/a&gt; 例题&lt;/h3&gt;
&lt;p&gt;对给定的示例，发现其所违反的原则，并进行修正&lt;/p&gt;
&lt;h4 id=&#34;里氏替换&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#里氏替换&#34;&gt;#&lt;/a&gt; 里氏替换&lt;/h4&gt;
&lt;p&gt;&lt;img data-src=&#34;https://quasdo.oss-cn-hangzhou.aliyuncs.com/img/image-20230616110140558.png&#34; alt=&#34;image-20230616110140558&#34; /&gt;&lt;/p&gt;
&lt;p&gt;里氏替换原则例题&lt;br /&gt;
（1）指出两个关于继承的设计是否合理？是否违反设计原则？&lt;br /&gt;
（2）对两段代码，如果合理，请解释其合理性，如果违反，请解释该原则，并修改&lt;/p&gt;
&lt;p&gt;第一个不合理，栈不能继承向量，向量很多方法栈用不到&lt;/p&gt;
&lt;p&gt;第二个合理，雇员继承人&lt;/p&gt;
&lt;h2 id=&#34;设计模式&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#设计模式&#34;&gt;#&lt;/a&gt; 设计模式&lt;/h2&gt;
&lt;h3 id=&#34;如何实现可修改性-可扩展性-灵活性&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#如何实现可修改性-可扩展性-灵活性&#34;&gt;#&lt;/a&gt; 如何实现可修改性、可扩展性、灵活性&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;实现的&lt;strong&gt;可修改性&lt;/strong&gt;：涉及到大的场景的修改
&lt;ol&gt;
&lt;li&gt;对已有实现的修改&lt;/li&gt;
&lt;li&gt;例如：修改现有促销策略&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;实现的&lt;strong&gt;可扩展性&lt;/strong&gt;（DIP &amp;amp; OCP）
&lt;ol&gt;
&lt;li&gt;对新的实现的扩展&lt;/li&gt;
&lt;li&gt;例如：增加一条新的促销策略（策略模式）&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;实现的&lt;strong&gt;灵活性&lt;/strong&gt;
&lt;ol&gt;
&lt;li&gt;对实现的动态配置&lt;/li&gt;
&lt;li&gt;例如：动态修改更改某商品对应促销策略&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;将接口和实现分离的实现方法：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;通过接口和实现该接口的类完成接口与实现的分离&lt;/li&gt;
&lt;li&gt;通过子类继承父类，将父类的接口和子类的实现分离&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&amp;lt;img src=&amp;quot;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9xdWFzZG8ub3NzLWNuLWhhbmd6aG91LmFsaXl1bmNzLmNvbS9pbWcvaW1hZ2UtMjAyMzA2MTkyMTM4MzQ0OTcucG5n&#34;&gt;https://quasdo.oss-cn-hangzhou.aliyuncs.com/img/image-20230619213834497.png&lt;/span&gt;&amp;quot; alt=&amp;quot;image-20230619213834497&amp;quot; style=&amp;quot;zoom: 25%;&amp;quot; /&amp;gt;&lt;/p&gt;
&lt;h3 id=&#34;模式体现的设计原则&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#模式体现的设计原则&#34;&gt;#&lt;/a&gt; 模式体现的设计原则&lt;/h3&gt;
&lt;p&gt;&lt;img data-src=&#34;https://quasdo.oss-cn-hangzhou.aliyuncs.com/img/image-20230616110233164.png&#34; alt=&#34;image-20230616110233164&#34; /&gt;&lt;/p&gt;
&lt;p&gt;策略模式：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;减少耦合&lt;/strong&gt; - 减少策略的使用类和策略的实现类的直接的耦合&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;依赖倒置&lt;/strong&gt; - 策略的使用类依赖的是策略的接口，而非策略的实现类&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;迭代器：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;减少耦合&lt;/strong&gt; - 减少遍历的使用类和遍历的实现类直接的耦合&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;依赖倒置&lt;/strong&gt; - 遍历的使用类依赖的是策略的接口，而非遍历的实现类&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;策略模式&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#策略模式&#34;&gt;#&lt;/a&gt; 策略模式&lt;/h3&gt;
&lt;p&gt;p266&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://quasdo.oss-cn-hangzhou.aliyuncs.com/img/image-20230617220043789.png&#34; alt=&#34;image-20230617220043789&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://quasdo.oss-cn-hangzhou.aliyuncs.com/img/image-20230617220107422.png&#34; alt=&#34;image-20230617220107422&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://quasdo.oss-cn-hangzhou.aliyuncs.com/img/image-20230617220423371.png&#34; alt=&#34;image-20230617220423371&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://quasdo.oss-cn-hangzhou.aliyuncs.com/img/image-20230617220512228.png&#34; alt=&#34;image-20230617220512228&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://quasdo.oss-cn-hangzhou.aliyuncs.com/img/image-20230617220533526.png&#34; alt=&#34;image-20230617220533526&#34; /&gt;&lt;/p&gt;
&lt;h3 id=&#34;抽象工厂模式&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#抽象工厂模式&#34;&gt;#&lt;/a&gt; 抽象工厂模式&lt;/h3&gt;
&lt;p&gt;&amp;lt;img src=&amp;quot;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9xdWFzZG8ub3NzLWNuLWhhbmd6aG91LmFsaXl1bmNzLmNvbS9pbWcvaW1hZ2UtMjAyMzA2MjAwODEwMTUzNzAucG5n&#34;&gt;https://quasdo.oss-cn-hangzhou.aliyuncs.com/img/image-20230620081015370.png&lt;/span&gt;&amp;quot; alt=&amp;quot;image-20230620081015370&amp;quot; style=&amp;quot;zoom:33%;&amp;quot; /&amp;gt;&lt;/p&gt;
&lt;h3 id=&#34;单件模式&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#单件模式&#34;&gt;#&lt;/a&gt; 单件模式&lt;/h3&gt;
&lt;h3 id=&#34;迭代器模式&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#迭代器模式&#34;&gt;#&lt;/a&gt; 迭代器模式&lt;/h3&gt;
&lt;p&gt;&lt;img data-src=&#34;https://quasdo.oss-cn-hangzhou.aliyuncs.com/img/image-20230617220719437.png&#34; alt=&#34;image-20230617220719437&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://quasdo.oss-cn-hangzhou.aliyuncs.com/img/image-20230617220949398.png&#34; alt=&#34;image-20230617220949398&#34; /&gt;&lt;/p&gt;
&lt;h2 id=&#34;构造&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#构造&#34;&gt;#&lt;/a&gt; 构造&lt;/h2&gt;
&lt;h3 id=&#34;构造包含的活动&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#构造包含的活动&#34;&gt;#&lt;/a&gt; 构造包含的活动&lt;/h3&gt;
&lt;p&gt;详细设计、编程、测试、调试、代码评审、集成与构建、构造管理&lt;/p&gt;
&lt;p&gt;&amp;lt;img src=&amp;quot;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9xdWFzZG8ub3NzLWNuLWhhbmd6aG91LmFsaXl1bmNzLmNvbS9pbWcvaW1hZ2UtMjAyMzA2MTkxNzQ4MjY2MDgucG5n&#34;&gt;https://quasdo.oss-cn-hangzhou.aliyuncs.com/img/image-20230619174826608.png&lt;/span&gt;&amp;quot; alt=&amp;quot;image-20230619174826608&amp;quot; style=&amp;quot;zoom:25%;&amp;quot; /&amp;gt;&lt;/p&gt;
&lt;h3 id=&#34;契约式编程&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#契约式编程&#34;&gt;#&lt;/a&gt; 契约式编程&lt;/h3&gt;
&lt;p&gt;如果一个函数或方法，在前置条件满足的情况下开始执行，完成后能够满足后置条件。&lt;/p&gt;
&lt;p&gt;异常和断言&lt;/p&gt;
&lt;h3 id=&#34;防御式编程&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#防御式编程&#34;&gt;#&lt;/a&gt; 防御式编程&lt;/h3&gt;
&lt;p&gt;当一个方法与其他方法、操作系统、硬件等外界环境发生交互时，不能保证外界环境都是正确的，外界发生错误时，保护方法内部不受损害。&lt;/p&gt;
&lt;p&gt;异常和断言&lt;/p&gt;
&lt;p&gt;常见问题有：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;输入参数&lt;/li&gt;
&lt;li&gt;其他对象初始化&lt;/li&gt;
&lt;li&gt;是否为 null&lt;/li&gt;
&lt;li&gt;网络连接是否正常&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;表驱动&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#表驱动&#34;&gt;#&lt;/a&gt; 表驱动&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;数据的保存一定要能够&lt;strong&gt;节省计算（核心思想）&lt;/strong&gt;，用空间换取时间&lt;/li&gt;
&lt;li&gt;eg：包括所得税中的速算&lt;/li&gt;
&lt;li&gt;声明多个一维数组，存储系列同类型的边界条件&lt;/li&gt;
&lt;li&gt;然后通过 for 循环，统一用一个下标 i 访问所有数组的值&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&amp;lt;img src=&amp;quot;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9xdWFzZG8ub3NzLWNuLWhhbmd6aG91LmFsaXl1bmNzLmNvbS9pbWcvaW1hZ2UtMjAyMzA2MTcyMzQ3NTk1NjgucG5n&#34;&gt;https://quasdo.oss-cn-hangzhou.aliyuncs.com/img/image-20230617234759568.png&lt;/span&gt;&amp;quot; alt=&amp;quot;image-20230617234759568&amp;quot; style=&amp;quot;zoom:33%;&amp;quot; /&amp;gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://quasdo.oss-cn-hangzhou.aliyuncs.com/img/image-20230617234851170.png&#34; alt=&#34;image-20230617234851170&#34; /&gt;&lt;/p&gt;
&lt;h3 id=&#34;代码问题&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#代码问题&#34;&gt;#&lt;/a&gt; 代码问题&lt;/h3&gt;
&lt;p&gt;&lt;img data-src=&#34;https://quasdo.oss-cn-hangzhou.aliyuncs.com/img/image-20230617235717836.png&#34; alt=&#34;image-20230617235717836&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;易维护性&lt;/strong&gt;：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;缩进表达逻辑结构&lt;/li&gt;
&lt;li&gt;将相关逻辑组织在一起&lt;/li&gt;
&lt;li&gt;用&lt;strong&gt;空行&lt;/strong&gt;分割逻辑&lt;/li&gt;
&lt;li&gt;语句分行&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;命名&lt;/strong&gt;要规范要有意义&lt;/li&gt;
&lt;li&gt;要有&lt;strong&gt;注释&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;不要硬编码&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;减少重复代码&lt;/strong&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;strong&gt;可靠的代码&lt;/strong&gt;：&lt;/p&gt;
&lt;ol start=&#34;7&#34;&gt;
&lt;li&gt;
&lt;p&gt;小型任务分解&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;复杂决策&lt;/strong&gt;的转化&lt;/p&gt;
&lt;p&gt;- 使用新的布尔变量简化复杂决策&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&amp;lt;img src=&amp;quot;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9xdWFzZG8ub3NzLWNuLWhhbmd6aG91LmFsaXl1bmNzLmNvbS9pbWcvaW1hZ2UtMjAyMzA2MjAwMDExMjAyMDIucG5n&#34;&gt;https://quasdo.oss-cn-hangzhou.aliyuncs.com/img/image-20230620001120202.png&lt;/span&gt;&amp;quot; alt=&amp;quot;image-20230620001120202&amp;quot; style=&amp;quot;zoom:25%;&amp;quot; /&amp;gt;&lt;/p&gt;
&lt;p&gt;- 使用有意义的名词简化复杂决策 （抽象成判断的函数）&lt;/p&gt;
&lt;p&gt;&amp;lt;img src=&amp;quot;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9xdWFzZG8ub3NzLWNuLWhhbmd6aG91LmFsaXl1bmNzLmNvbS9pbWcvaW1hZ2UtMjAyMzA2MjAwMDExNDU4MTcucG5n&#34;&gt;https://quasdo.oss-cn-hangzhou.aliyuncs.com/img/image-20230620001145817.png&lt;/span&gt;&amp;quot; alt=&amp;quot;image-20230620001145817&amp;quot; style=&amp;quot;zoom: 25%;&amp;quot; /&amp;gt;&lt;/p&gt;
&lt;p&gt;- 表驱动&lt;/p&gt;
&lt;ol start=&#34;9&#34;&gt;
&lt;li&gt;
&lt;p&gt;数据使用&lt;/p&gt;
&lt;p&gt;- 变量与命名相符、单变量单目的、限制全局变量、不要用突兀的数字&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;明确依赖关系（可以写到注释里面 @see）&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;例题-7&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#例题-7&#34;&gt;#&lt;/a&gt; 例题&lt;/h3&gt;
&lt;p&gt;&amp;lt;img src=&amp;quot;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9xdWFzZG8ub3NzLWNuLWhhbmd6aG91LmFsaXl1bmNzLmNvbS9pbWcvaW1hZ2UtMjAyMzA2MTkxNzQwNDUwODYucG5n&#34;&gt;https://quasdo.oss-cn-hangzhou.aliyuncs.com/img/image-20230619174045086.png&lt;/span&gt;&amp;quot; alt=&amp;quot;image-20230619174045086&amp;quot; style=&amp;quot;zoom: 25%;&amp;quot; /&amp;gt;&lt;/p&gt;
&lt;p&gt;&amp;lt;img src=&amp;quot;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9xdWFzZG8ub3NzLWNuLWhhbmd6aG91LmFsaXl1bmNzLmNvbS9pbWcvaW1hZ2UtMjAyMzA2MTkxNzQyMjQ5ODEucG5n&#34;&gt;https://quasdo.oss-cn-hangzhou.aliyuncs.com/img/image-20230619174224981.png&lt;/span&gt;&amp;quot; alt=&amp;quot;image-20230619174224981&amp;quot; style=&amp;quot;zoom: 50%;&amp;quot; /&amp;gt;&lt;/p&gt;
&lt;p&gt;&amp;lt;img src=&amp;quot;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9xdWFzZG8ub3NzLWNuLWhhbmd6aG91LmFsaXl1bmNzLmNvbS9pbWcvaW1hZ2UtMjAyMzA2MTkxNzQyNTUyMDAucG5n&#34;&gt;https://quasdo.oss-cn-hangzhou.aliyuncs.com/img/image-20230619174255200.png&lt;/span&gt;&amp;quot; alt=&amp;quot;image-20230619174255200&amp;quot; style=&amp;quot;zoom: 25%;&amp;quot; /&amp;gt;&lt;/p&gt;
&lt;p&gt;&amp;lt;img src=&amp;quot;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9xdWFzZG8ub3NzLWNuLWhhbmd6aG91LmFsaXl1bmNzLmNvbS9pbWcvQWdBQUJZcnA2U3V3R0RucWZXOURqS3B3ZDhoNnluM0oucG5n&#34;&gt;https://quasdo.oss-cn-hangzhou.aliyuncs.com/img/AgAABYrp6SuwGDnqfW9DjKpwd8h6yn3J.png&lt;/span&gt;&amp;quot; alt=&amp;quot;AgAABYrp6SuwGDnqfW9DjKpwd8h6yn3J&amp;quot; style=&amp;quot;zoom:50%;&amp;quot; /&amp;gt;&lt;/p&gt;
&lt;p&gt;代码缺点：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;直接通过字符串来返回结果，硬编码不利于修改，复用。&lt;/li&gt;
&lt;li&gt;即使使用字符串是合理，也应该在 ifelse 中设置 output 的值。再统一调用 writer.print (output)。&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;测试&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#测试&#34;&gt;#&lt;/a&gt; 测试&lt;/h2&gt;
&lt;p&gt;&lt;img data-src=&#34;https://quasdo.oss-cn-hangzhou.aliyuncs.com/img/image-20230616110350978.png&#34; alt=&#34;image-20230616110350978&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;书写格式：ID 输入 输出&lt;/strong&gt;&lt;/p&gt;
&lt;h3 id=&#34;黑盒测试&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#黑盒测试&#34;&gt;#&lt;/a&gt; 黑盒测试&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;等价类&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;分为若干子集，选取少量具有代表性的数据作为测试用例&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;边界值&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;错误往往发生在等价类的边界&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;决策表&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;状态转换&lt;/p&gt;
&lt;p&gt;根据状态转换图，建立测试对象的转换表，状态转换的每一类都应该被设计为测试用例&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;输入：方法 + 当前状态&lt;/li&gt;
&lt;li&gt;输出&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;黑白盒比较&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#黑白盒比较&#34;&gt;#&lt;/a&gt; 黑白盒比较&lt;/h3&gt;
&lt;p&gt;白盒优点：覆盖率高；发现的缺陷较多&lt;br /&gt;
白盒缺点：测试开销大；不能检验需求规格&lt;br /&gt;
黑盒优点：测试效率高；可以检验需求规格&lt;br /&gt;
黑盒缺点：覆盖率低：发现的缺陷少&lt;/p&gt;
&lt;h3 id=&#34;白盒测试-分支覆盖的测试用例设计&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#白盒测试-分支覆盖的测试用例设计&#34;&gt;#&lt;/a&gt; 白盒测试 - 分支覆盖的测试用例设计&lt;/h3&gt;
&lt;p&gt;&amp;lt;img src=&amp;quot;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9xdWFzZG8ub3NzLWNuLWhhbmd6aG91LmFsaXl1bmNzLmNvbS9pbWcvaW1hZ2UtMjAyMzA2MTgwMDAzNDcwOTQucG5n&#34;&gt;https://quasdo.oss-cn-hangzhou.aliyuncs.com/img/image-20230618000347094.png&lt;/span&gt;&amp;quot; alt=&amp;quot;image-20230618000347094&amp;quot; style=&amp;quot;zoom: 25%;&amp;quot; /&amp;gt;&lt;/p&gt;
&lt;p&gt;&amp;lt;img src=&amp;quot;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9xdWFzZG8ub3NzLWNuLWhhbmd6aG91LmFsaXl1bmNzLmNvbS9pbWcvaW1hZ2UtMjAyMzA2MTcyMjEzMjA2MjEucG5n&#34;&gt;https://quasdo.oss-cn-hangzhou.aliyuncs.com/img/image-20230617221320621.png&lt;/span&gt;&amp;quot; alt=&amp;quot;image-20230617221320621&amp;quot; style=&amp;quot;zoom: 80%;&amp;quot; /&amp;gt;&lt;/p&gt;
&lt;h4 id=&#34;语句覆盖&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#语句覆盖&#34;&gt;#&lt;/a&gt; 语句覆盖&lt;/h4&gt;
&lt;p&gt;确保测试用例的每一行代码都被覆盖到&lt;/p&gt;
&lt;h4 id=&#34;条件覆盖&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#条件覆盖&#34;&gt;#&lt;/a&gt; 条件覆盖&lt;/h4&gt;
&lt;p&gt;每个判断的每个结果都被至少满足一次&lt;/p&gt;
&lt;h4 id=&#34;路径覆盖&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#路径覆盖&#34;&gt;#&lt;/a&gt; 路径覆盖&lt;/h4&gt;
&lt;p&gt;确保程序每条独立的路径都被执行一次&lt;/p&gt;
&lt;h3 id=&#34;圈复杂度计算&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#圈复杂度计算&#34;&gt;#&lt;/a&gt; 圈复杂度计算&lt;/h3&gt;
&lt;p&gt;p316&lt;/p&gt;
&lt;p&gt;&amp;lt;img src=&amp;quot;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9xdWFzZG8ub3NzLWNuLWhhbmd6aG91LmFsaXl1bmNzLmNvbS9pbWcvaW1hZ2UtMjAyMzA2MTcyMzQ1NDgwMDIucG5n&#34;&gt;https://quasdo.oss-cn-hangzhou.aliyuncs.com/img/image-20230617234548002.png&lt;/span&gt;&amp;quot; alt=&amp;quot;image-20230617234548002&amp;quot; style=&amp;quot;zoom:33%;&amp;quot; /&amp;gt;&lt;/p&gt;
&lt;p&gt;法一：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://quasdo.oss-cn-hangzhou.aliyuncs.com/img/image-20230617234341854.png&#34; alt=&#34;image-20230617234341854&#34; /&gt;&lt;/p&gt;
&lt;p&gt;法二：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://quasdo.oss-cn-hangzhou.aliyuncs.com/img/image-20230617234353586.png&#34; alt=&#34;image-20230617234353586&#34; /&gt;&lt;/p&gt;
&lt;p&gt;评判：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;0-5：子程序还不错&lt;/li&gt;
&lt;li&gt;6-10：简化子程序&lt;/li&gt;
&lt;li&gt;大于 10：拆分子程序并调用&lt;img data-src=&#34;https://quasdo.oss-cn-hangzhou.aliyuncs.com/img/image-20230619010607697.png&#34; alt=&#34;image-20230619010607697&#34; /&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img data-src=&#34;https://quasdo.oss-cn-hangzhou.aliyuncs.com/img/image-20230619010616555.png&#34; alt=&#34;image-20230619010616555&#34; /&gt;&lt;/p&gt;
&lt;h3 id=&#34;例题-8&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#例题-8&#34;&gt;#&lt;/a&gt; 例题&lt;/h3&gt;
&lt;h2 id=&#34;软件生命周期模型&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#软件生命周期模型&#34;&gt;#&lt;/a&gt; 软件生命周期模型&lt;/h2&gt;
&lt;h3 id=&#34;知识点-5&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#知识点-5&#34;&gt;#&lt;/a&gt; 知识点&lt;/h3&gt;
&lt;h4 id=&#34;瀑布模型&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#瀑布模型&#34;&gt;#&lt;/a&gt; 瀑布模型&lt;/h4&gt;
&lt;p&gt;&lt;img data-src=&#34;https://quasdo.oss-cn-hangzhou.aliyuncs.com/img/image-20230619010913052.png&#34; alt=&#34;image-20230619010913052&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;瀑布模型&lt;/strong&gt;是按照软件生命周期模型将软件开发活动组织为&lt;strong&gt;需求开发、软件设计、软件实现、软件测试、软件交付和软件维护&lt;/strong&gt;等活动，并且规定了它们自上而下、相互邻接的次序。&lt;/p&gt;
&lt;p&gt;优点：为软件开发活动定义了&lt;strong&gt;清晰的阶段划分&lt;/strong&gt;（包括输入 / 输出、主要工作及其关注点），这让开发者能够以关注点分离的方式更好地进行那些复杂度超越个人能力的软件项目的开发活动。&lt;/p&gt;
&lt;p&gt;缺点：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;对文档的过高的期望具有局限性&lt;/li&gt;
&lt;li&gt;对开发活动的线性顺序假设具有局限性&lt;/li&gt;
&lt;li&gt;客户、用户的参与具有局限性：成功的项目开发需要客户、用户从始至终的参与，而不仅仅是一个阶段。&lt;/li&gt;
&lt;li&gt;里程碑粒度具有局限性：里程碑粒度过粗，基本丧失了 “早发现缺陷早修复” 这一思想&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;适用于比较成熟，没有技术难点的软件&lt;/p&gt;
&lt;h4 id=&#34;增量迭代模型&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#增量迭代模型&#34;&gt;#&lt;/a&gt; 增量迭代模型&lt;/h4&gt;
&lt;p&gt;&lt;img data-src=&#34;https://quasdo.oss-cn-hangzhou.aliyuncs.com/img/image-20230619011020595.png&#34; alt=&#34;image-20230619011020595&#34; /&gt;&lt;/p&gt;
&lt;p&gt;增量迭代模型是在项目开始时，通过&lt;strong&gt;系统需求开发和核心体系结构设计活动&lt;/strong&gt;完成项目对前景和范围的界定，然后再将后续开发活动组织为&lt;strong&gt;多个迭代、并行的瀑布式开发模型&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;少量的不确定性和影响不大的需求变更通过迭代的方式加以解决。&lt;/p&gt;
&lt;p&gt;优点：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;迭代式开发更加符合软件开发的实践情况，具有更好的适用性；&lt;/li&gt;
&lt;li&gt;并行开发可以帮助缩短软件产品的开发时间；&lt;/li&gt;
&lt;li&gt;渐进交付可以加强用户反馈，降低开发风险。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;缺点：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;由于各个构件是逐渐并入已有的软件体系结构中的，所以加入构件必须不破坏已构造好的系统部分，这需要软件具备开放式的体系结构。&lt;/li&gt;
&lt;li&gt;增量交付模型需要一个完备、清晰的项目前景和范围以进行并发开发规划，但是在一些不稳定的领域，不确定性太多或者需求变化非常频繁，很难在项目开始就确定前景和范围。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;适用范围：适用于大规模软件系统的开发。&lt;/p&gt;
&lt;h4 id=&#34;演化模型&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#演化模型&#34;&gt;#&lt;/a&gt; 演化模型&lt;/h4&gt;
&lt;p&gt;&lt;img data-src=&#34;https://quasdo.oss-cn-hangzhou.aliyuncs.com/img/image-20230619011031067.png&#34; alt=&#34;image-20230619011031067&#34; /&gt;&lt;/p&gt;
&lt;p&gt;演化模型将软件开发活动组织为&lt;strong&gt;多个迭代、并行的瀑布式开发活动&lt;/strong&gt;。演化模型能够更好地应对需求变更，更适用于需求变更比较频繁或不确定性较多的领域。&lt;/p&gt;
&lt;p&gt;优点：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;使用了迭代式开发，具有更好的适用性&lt;/strong&gt;，尤其是其演化式迭代安排能够适用于那些需求变更比较频繁或不确定性较多的软件系统的开发；&lt;/li&gt;
&lt;li&gt;并行开发可以帮助&lt;strong&gt;缩短&lt;/strong&gt;软件产品的开发时间；&lt;/li&gt;
&lt;li&gt;渐进交付可以&lt;strong&gt;加强用户反馈&lt;/strong&gt;，降低开发风险。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;缺点：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;无法在项目早期阶段建立项目范围，所以项目的整体计划、进度调度、尤其是商务协商事宜无法准确把握；&lt;/li&gt;
&lt;li&gt;后续迭代的开发活动是在前导迭代基础上进行修改和扩展的，这容易让后续迭代忽略设计分析与设计工作，蜕变为构建 - 修复方式。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;适用与不稳定领域的大规模软件系统开发&lt;/p&gt;
&lt;h3 id=&#34;题型-5&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#题型-5&#34;&gt;#&lt;/a&gt; 题型&lt;/h3&gt;
&lt;p&gt;&lt;img data-src=&#34;https://quasdo.oss-cn-hangzhou.aliyuncs.com/img/image-20230616110333210.png&#34; alt=&#34;image-20230616110333210&#34; /&gt;&lt;/p&gt;
&lt;h3 id=&#34;例题-9&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#例题-9&#34;&gt;#&lt;/a&gt; 例题&lt;/h3&gt;
 ]]></description>
        </item>
    </channel>
</rss>

{
    "version": "https://jsonfeed.org/version/1",
    "title": "Carpe diem",
    "subtitle": "pluck the day",
    "icon": "https://quas-modo.github.io/undergraduate/images/favicon.ico",
    "description": "notes/thoughts/nonsense",
    "home_page_url": "https://quas-modo.github.io/undergraduate",
    "items": [
        {
            "id": "https://quas-modo.github.io/undergraduate/2023/06/21/NJUSE/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E4%B8%8E%E8%AE%A1%E7%AE%97%E4%BA%8C%E6%9C%9F%E6%9C%AB%E5%A4%8D%E4%B9%A0/",
            "url": "https://quas-modo.github.io/undergraduate/2023/06/21/NJUSE/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E4%B8%8E%E8%AE%A1%E7%AE%97%E4%BA%8C%E6%9C%9F%E6%9C%AB%E5%A4%8D%E4%B9%A0/",
            "title": "软件工程与计算二期末复习",
            "date_published": "2023-06-21T06:44:20.000Z",
            "content_html": "<p>整理了软工二除了名词解释以外的重点 ww</p>\n<p><span id=\"more\"></span></p>\n<p>by 陈欣怡</p>\n<h2 id=\"软件工程发展历史\"><a class=\"anchor\" href=\"#软件工程发展历史\">#</a> 软件工程发展历史</h2>\n<p>1950s：科学计算；以机器为中心进行编程；像生产硬件一样生产软件。</p>\n<p>1960s：业务应用 (批量数据处理和事物计算)；软件不同于硬件；用软件工艺的方式生产软件。</p>\n<p>1970s：结构化方法；瀑布模型；强调规则和纪律。它们奠定了软件工程的基础，是后续年代软件工程发展的支撑。</p>\n<p>1980s：追求生产力最大化；现代结构化方法 / 面向对象编程广泛应用；重视过程的作用。</p>\n<p>1990s：企业为中心的大规模软件系统开发；追求快速开发、可变更性和用户价值；web 应用出现</p>\n<p>2000s：大规模 web 应用；大量面向大众的 web 产品；追求快速开发、可变更性、用户价值和创新。</p>\n<h2 id=\"项目启动\"><a class=\"anchor\" href=\"#项目启动\">#</a> 项目启动</h2>\n<h3 id=\"如何管理团队\"><a class=\"anchor\" href=\"#如何管理团队\">#</a> 如何管理团队</h3>\n<ol>\n<li>建立团队章程</li>\n<li>持续成功</li>\n<li>和谐沟通</li>\n<li>避免团队杀手</li>\n</ol>\n<h3 id=\"团队结构有几种\"><a class=\"anchor\" href=\"#团队结构有几种\">#</a> 团队结构有几种？</h3>\n<ol>\n<li>主程序员</li>\n<li>民主团队</li>\n<li>开放团队</li>\n</ol>\n<h2 id=\"质量保障配置管理\"><a class=\"anchor\" href=\"#质量保障配置管理\">#</a> 质量保障 / 配置管理</h2>\n<p><img data-src=\"https://quasdo.oss-cn-hangzhou.aliyuncs.com/img/image-20230617144808777.png\" alt=\"image-20230617144808777\" /></p>\n<h3 id=\"质量保障有哪些措施\"><a class=\"anchor\" href=\"#质量保障有哪些措施\">#</a> 质量保障有哪些措施？</h3>\n<ol>\n<li>需求开发 —— 需求评审和需求度量</li>\n<li>体系结构 —— 体系结构评审和集成测试 (持续集成)；</li>\n<li>详细设计 —— 详细设计评审、设计度量和集成测试 (持续集成)</li>\n<li>构造阶段 —— 代码评审、代码度量、测试（测试驱动和持续集成）</li>\n<li>测试阶段 —— 测试、测试度量</li>\n</ol>\n<p>＊要及时的根据保障计划进行质量验证，质量验证的方法主要有<strong>评审、度量、测试</strong>三种。</p>\n<h3 id=\"配置管理有哪些活动\"><a class=\"anchor\" href=\"#配置管理有哪些活动\">#</a> 配置管理有哪些活动？</h3>\n<ol>\n<li>标识配置项：确定应该被保留的部分，并且给予他们确定标识，包含配置项的特征，包括生产者、基线建立时间、使用者等。</li>\n<li>版本管理：为配置项赋予版本号，管理分支和多版本情况。</li>\n<li>变更控制：以可控、一致的方式进行变更处理，包括对变更的评估、协调、批准或拒绝、实现和验证。</li>\n<li>配置审计：验证配置项的完整性、正确性、一致性和可追踪性。</li>\n<li>状态报告：反映当前的配置状态。</li>\n<li>软件发布管理：将配置项发布到开发活动之外，例如发布给客户。</li>\n</ol>\n<h2 id=\"需求层次需求类型\"><a class=\"anchor\" href=\"#需求层次需求类型\">#</a> 需求层次 / 需求类型</h2>\n<h3 id=\"如何书写用例\"><a class=\"anchor\" href=\"#如何书写用例\">#</a> 如何书写用例</h3>\n<p><strong>用例正常流程：在常见和符合预期的条件下，系统与外界的行为交互序列</strong></p>\n<p><img data-src=\"https://quasdo.oss-cn-hangzhou.aliyuncs.com/img/image-20230617182637596.png\" alt=\"image-20230617182637596\" /></p>\n<p>名称：</p>\n<p>参与者：</p>\n<p>触发条件：（可以为空）</p>\n<p>前置条件：（可以为空）</p>\n<p><strong>正常流程：</strong></p>\n<ul>\n<li>用户行为 + 系统行为形成的行为交互序列</li>\n<li>用户：选择、输入、结束……</li>\n<li>系统：提示、显示、记录、计算、更新……</li>\n</ul>\n<p>后置条件：（可以为空）</p>\n<h3 id=\"区分需求的三个层次\"><a class=\"anchor\" href=\"#区分需求的三个层次\">#</a> 区分需求的三个层次</h3>\n<p><img data-src=\"https://quasdo.oss-cn-hangzhou.aliyuncs.com/img/image-20230617163010545.png\" alt=\"image-20230617163010545\" /></p>\n<p><img data-src=\"https://quasdo.oss-cn-hangzhou.aliyuncs.com/img/image-20230617163331987.png\" alt=\"image-20230617163331987\" /></p>\n<ol>\n<li><strong>业务需求</strong>（Business Requirement）\n<ol>\n<li>业务需求是高层次的<strong>解决方案和系统特性</strong>、系统开发的战略出发点、<strong>高层次的需求</strong>，描述为什么要开发系统。</li>\n<li>Eg. 在系统使用 3 个月后，销售额度应该提高 20%（期望，没有从软件角度进行描述，业务需求）</li>\n</ol>\n</li>\n<li><strong>用户需求</strong>（User Requirement）\n<ol>\n<li>执行具体任务的<strong>用户对系统所能完成任务的期望</strong>，描述了系统能帮用户做什么（直接用户、间接用户）</li>\n<li>Eg. 在系统要帮助收银员完成销售处理</li>\n</ol>\n</li>\n<li><strong>系统级需求</strong>（System Requirement）\n<ol>\n<li>需求分析模型：用户对<strong>系统行为的期望</strong>，每个系统级需求反映了<strong>一次外界与系统的交互行为</strong>，或者<strong>系统的一个实现细节</strong>（和用户需求有着很大的区别）</li>\n<li>Eg. 在接到客户经理的请求后，系统应该为客户经理提供所有会员的个人信息。</li>\n</ol>\n</li>\n</ol>\n<h3 id=\"判断需求的类型\"><a class=\"anchor\" href=\"#判断需求的类型\">#</a> 判断需求的类型</h3>\n<p><img data-src=\"https://quasdo.oss-cn-hangzhou.aliyuncs.com/img/image-20230617163016932.png\" alt=\"image-20230617163016932\" /></p>\n<p><img data-src=\"https://quasdo.oss-cn-hangzhou.aliyuncs.com/img/image-20230617163833524.png\" alt=\"image-20230617163833524\" /></p>\n<p><strong>功能需求</strong>：和系统主要共作相关的需求，即在不考虑物理约束的情况下，用户希望系统所能够执行的活动，这些活动可以帮助用户完成任务。<strong>功能需求主要表现为系统和环境之间的行为交互</strong>。</p>\n<ol>\n<li>Eg. 在接到客户经理的请求后，系统应该为客户经理提供所有会员的个人信息。</li>\n</ol>\n<p><strong>数据需求</strong>（属于功能需求的一种，DR）：<strong>功能需求</strong>的补充：如果在功能需求部分明确定义了<strong>相关的数据结构</strong>，那么就不需要再行定义数据需求。数据需求是需要在数据库、文件或者其他介质中存储的数据描述，通常包括下列内容：</p>\n<ul>\n<li>各个功能使用的<strong>数据信息</strong>；</li>\n<li>使用频率；</li>\n<li>可访问性要求；</li>\n<li><strong>数据实体及其关系</strong>；</li>\n<li>完整性约束；</li>\n<li><strong>数据保持</strong>要求。</li>\n<li>Eg. 系统需要存储的数据实体及其关系为图 6-14 的内容。（数据实体及其关系）</li>\n<li>Eg. 系统需要存储 1 年内的销售记录和退货记录。（数据保持）</li>\n</ul>\n<p><strong>性能需求</strong>：系统整体或系统组成部分应该拥有的性能特征，例如 CPU 使用率、内存使用率等。</p>\n<ol>\n<li>速度：系统完成任务的时间（所有用户查询必须在 10s 内完成）</li>\n<li>容量：系统能存储的数据量（系统因该能够存储至少 100 万个销售信息）</li>\n<li>吞吐量：系统在连续的时间内完成的事务数量（解释器每分钟应该能够至少解析 5000 条没有错误的语句）</li>\n<li>负载：系统可以承载的并发工作量（系统应该允许 50 个营业服务器同时从集中服务器上进行数据的上传或下载）</li>\n<li>实时性：严格的实时要求（系统监测到异常时，监视器必须在 0.5s 内发出警报，和故障警报不一样，故障不是系统的正常功能）</li>\n</ol>\n<p><strong>质量需求</strong>（QA）：系统为了满足<strong>规定的及隐含</strong>的所有要求而需要具备的要素称为质量</p>\n<ol>\n<li>可靠性：在规格时间间隔内和规定条件下，系统或部件执行所要求能力的能力。（在进行数据的下载和上传中，如果网络故障，系统不能出现故障。能不能检测网络中断，并且进行恢复）</li>\n<li>可用性：软件系统在投入使用时可操作和可访问的程度或能实现其指定系统功能的概率。（系统的可用性要达到 98%）</li>\n<li>安全性：软件组织对其程序和数据进行未授权访问的能力，未授权的访问可能是有意，也可能是无意的。（VIP 顾客只能查看自己的个人信息和购买记录）</li>\n<li>可维护性：软件系统或部件能修改以排除故障、改进性能或其他属性或适应变更了的环境的容易程度，包括可修改性（Modifiability）和可扩展性（Extensibility）。（如果系统要增加新的特价类型，要能够在 2 个人月内完成）</li>\n<li>可移植性：系统或部件能从一种硬件或软件环境转换至另外一种环境的特性。（集中服务器要能够在 1 人月内从 Window 7 操作系统更换到 Solaris 10 操作系统。）</li>\n<li>易用性：与用户使用软件所花费的努力及其对使用的评价相关的特性。（使用系统 1 个月的收银员进行销售处理的效率要达到 10 件商品 / 分钟。）</li>\n<li>往往会有形容词和副词</li>\n</ol>\n<p><strong>对外接口</strong>：系统和环境中其他系统之间需要建立的接口，包括硬件接口、软件接口、数据库接口等等。</p>\n<ol>\n<li>接口的用途</li>\n<li>接口的输入输出</li>\n<li>数据格式</li>\n<li>命令格式</li>\n<li>异常处理要求</li>\n<li>Eg. 注册使用 Google Maps API</li>\n</ol>\n<p><strong>约束</strong>：进行系统构造时需要遵守的约束，例如<strong>编程语言、硬件设施</strong>等</p>\n<ol>\n<li>系统开发及运行的环境（包括目标机器、操作系统、网络环境、编程语言、数据库管理系统等，Eg. 系统使用 Java 语言进行开发）</li>\n<li>问题域内的相关标准（包括法律法规、行业协定、企业规章等。）</li>\n<li>商业规则：（用户在任务执行中的一些潜在规则也会限制开发人员设计和构建系统的选择范围）</li>\n<li>Eg. 已过保质期的食品不能销售</li>\n<li>Eg. 顾客可以使用美元付款</li>\n</ol>\n<h3 id=\"例题\"><a class=\"anchor\" href=\"#例题\">#</a> 例题</h3>\n<h4 id=\"写用例t1\"><a class=\"anchor\" href=\"#写用例t1\">#</a> 写用例 T1</h4>\n<p><img data-src=\"https://quasdo.oss-cn-hangzhou.aliyuncs.com/img/image-20230617163659223.png\" alt=\"image-20230617163659223\" /></p>\n<p>（1）</p>\n<p>以 ATM 存款功能为例</p>\n<ul>\n<li>业务需求：提供存款功能</li>\n<li>用户需求：系统允许用户存入现金并记录在对应银行卡中</li>\n<li>系统级需求：在用户放入现金后，系统应该能够清点现金数额，并在清点完毕后，显示数额，请用户核对</li>\n</ul>\n<p>（2）</p>\n<p>性能需求：</p>\n<ul>\n<li>速度：系统应该在 3s 内完成单个操作，查询操作响应速度不得超过 1s</li>\n<li>负载：系统应该允许地区内所有 ATM 及同时从服务器上进行运作</li>\n<li>实时性：系统应该在 0.5 秒内同步数据</li>\n</ul>\n<p>质量属性：</p>\n<ul>\n<li>安全性：系统应该保护用户的存取款信息不被非法用户获取；</li>\n<li>易用性：系统应该保证操作界面容易上手</li>\n</ul>\n<p>对外接口：</p>\n<ul>\n<li>系统与数据库接口：如果发生异常，要抛出异常并回滚</li>\n</ul>\n<p>约束：用 java 开发</p>\n<p>数据需求：系统需要存储用户 3 年以内的详细存取款记录信息</p>\n<h4 id=\"写用例t2\"><a class=\"anchor\" href=\"#写用例t2\">#</a> 写用例 T2</h4>\n<p><img data-src=\"https://quasdo.oss-cn-hangzhou.aliyuncs.com/img/image-20230617172608167.png\" alt=\"image-20230617172608167\" /></p>\n<p>功能需求，与系统主要功能相关</p>\n<p>数据需求，规定了数据描述和数据的输入格式</p>\n<p><img data-src=\"https://quasdo.oss-cn-hangzhou.aliyuncs.com/img/image-20230617181931604.png\" alt=\"image-20230617181931604\" /></p>\n<p>该功能涉及 2 个用例</p>\n<ol>\n<li>用例 1：手工创建询价单\n<ul>\n<li>参与者：采购人员</li>\n<li>主要流程：\n<ol>\n<li>采购人员登入系统，输入供应商、产品等信息</li>\n<li>系统记录供应商、产品、库存等信息</li>\n<li>采购人员结束创建过程</li>\n<li>系统生成并展示采购询价单</li>\n</ol>\n</li>\n</ul>\n</li>\n<li>用例 2：自动生成询价单\n<ul>\n<li>参与者：库管员</li>\n<li>前置条件：仓库经理已设置产品的再订货规则</li>\n<li>主要流程：\n<ol>\n<li>库管员登录系统</li>\n<li>系统确认权限</li>\n<li>库管员点击运行排程</li>\n<li>系统按照再订货规则和销售订单及库存情况自动生成采购询价单，并显示</li>\n</ol>\n</li>\n</ul>\n</li>\n</ol>\n<h4 id=\"判断需求类型\"><a class=\"anchor\" href=\"#判断需求类型\">#</a> 判断需求类型</h4>\n<table>\n<thead>\n<tr>\n<th>需求描述</th>\n<th>需求类别</th>\n<th>备注</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>系统<strong>需要</strong>存储一年内的销售记录</td>\n<td>数据需求</td>\n<td>-</td>\n</tr>\n<tr>\n<td>系统<strong>应该能够</strong>存储 3 年的交易数据</td>\n<td>性能需求</td>\n<td>-</td>\n</tr>\n<tr>\n<td>系统使用之前，需要对收银员进行 10 天的专门培训</td>\n<td>其他需求（包括硬件需求、人力需求。）</td>\n<td>在交付之前</td>\n</tr>\n<tr>\n<td>经过 10 天培训的收银员就能够熟练使用系统</td>\n<td>质量需求（易用性）</td>\n<td>-</td>\n</tr>\n<tr>\n<td>反映了用户与系统的<strong>交互细节</strong></td>\n<td>系统需求</td>\n<td>-</td>\n</tr>\n<tr>\n<td>反映了用户与系统的<strong>交互</strong></td>\n<td>用户需求</td>\n<td>-</td>\n</tr>\n<tr>\n<td>在存储设备发生故障时，系统要在 10 秒内发现</td>\n<td>质量需求（可靠性需求）</td>\n<td>故障是非正常状态，还一种系统需求。</td>\n</tr>\n<tr>\n<td>在存储设备发生故障时，系统要在 0.5 秒内向用户发出<strong>警报</strong></td>\n<td>功能需求</td>\n<td>故障不是系统的正常状态</td>\n</tr>\n<tr>\n<td>检测到病人异常后，监控器必须在 0.5 秒内发出警报</td>\n<td>性能需求</td>\n<td>-</td>\n</tr>\n<tr>\n<td>该软件管理工具的开发过程<strong>自身</strong>必须符合 CMMI-4 的评估</td>\n<td>过程需求</td>\n<td>是软件自身</td>\n</tr>\n<tr>\n<td>该软件管理工具软件必须<strong>帮助</strong>项目管理者进行开发管理工作，以通过 CMMI-4 的评估</td>\n<td>用户需求</td>\n<td>-</td>\n</tr>\n<tr>\n<td>系统能够为用户提供库存分析报告、商品 / 利润报告和过期商品报告</td>\n<td>用户需求</td>\n<td>-</td>\n</tr>\n<tr>\n<td>产品在发布 1 年之后内，必须在出版的 A、B、C 三个产品评论刊物中被评为最可靠产品。</td>\n<td>业务需求</td>\n<td>相当与一个目的</td>\n</tr>\n<tr>\n<td>系统必须能够与 Oracle 数据库交互。</td>\n<td>约束</td>\n<td>Oracle 是系统的一个环境，环境本身在约束部分，比如 Tomcat 等等</td>\n</tr>\n<tr>\n<td>开发团队需要给出 SRS 文档。</td>\n<td>过程需求</td>\n<td>-</td>\n</tr>\n<tr>\n<td>使用扫描仪扫描文件，传递回的数据为 pdf 格式文件。</td>\n<td>对外接口</td>\n<td>软件和扫描仪之间的交互</td>\n</tr>\n<tr>\n<td>商品的标识由 0-24 位字母、数字混合组成的字符串。</td>\n<td>数据需求</td>\n<td>-</td>\n</tr>\n<tr>\n<td>商品标识的类型要能够在 0.5 个人月内更改为长整型。</td>\n<td>质量需求</td>\n<td>可移植性</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"需求题\"><a class=\"anchor\" href=\"#需求题\">#</a> 需求题</h2>\n<h3 id=\"知识点\"><a class=\"anchor\" href=\"#知识点\">#</a> 知识点</h3>\n<h4 id=\"用例图\"><a class=\"anchor\" href=\"#用例图\">#</a> 用例图</h4>\n<p>用例、参与者、关系、系统边界</p>\n<p>&lt;img src=&quot;<span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWFzZG8ub3NzLWNuLWhhbmd6aG91LmFsaXl1bmNzLmNvbS9pbWcvaW1hZ2UtMjAyMzA2MTcxODQzMTU2NjgucG5n\">https://quasdo.oss-cn-hangzhou.aliyuncs.com/img/image-20230617184315668.png</span>&quot; alt=&quot;image-20230617184315668&quot; style=&quot;zoom: 25%;&quot; /&gt;</p>\n<h4 id=\"分析类图概念类图\"><a class=\"anchor\" href=\"#分析类图概念类图\">#</a> 分析类图（概念类图）</h4>\n<ol>\n<li>\n<p>根据用例的文本描述，识别候选类</p>\n<ul>\n<li>名词分析、行为分析</li>\n</ul>\n</li>\n<li>\n<p>筛选候选类，确定概念类</p>\n<ul>\n<li>根据系统需求</li>\n<li>是否有状态 + 行为\n<ul>\n<li>只有行为：</li>\n<li>只有状态：其他概念类的属性</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<p>识别关联</p>\n<ul>\n<li>\n<p>继承</p>\n<p>&lt;img src=&quot;<span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWFzZG8ub3NzLWNuLWhhbmd6aG91LmFsaXl1bmNzLmNvbS9pbWcvaW1hZ2UtMjAyMzA2MTcxOTAxMjI5OTUucG5n\">https://quasdo.oss-cn-hangzhou.aliyuncs.com/img/image-20230617190122995.png</span>&quot; alt=&quot;image-20230617190122995&quot; style=&quot;zoom: 25%;&quot; /&gt;</p>\n</li>\n<li>\n<p>依赖</p>\n<p>人靠船渡河</p>\n<p>&lt;img src=&quot;<span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWFzZG8ub3NzLWNuLWhhbmd6aG91LmFsaXl1bmNzLmNvbS9pbWcvMjAyMDAyMjQxMDU0MzgzMjUucG5n\">https://quasdo.oss-cn-hangzhou.aliyuncs.com/img/20200224105438325.png</span>&quot; alt=&quot;20200224105438325&quot;  /&gt;</p>\n</li>\n<li>\n<p>关联</p>\n</li>\n<li>\n<p>聚合 - has a</p>\n</li>\n<li>\n<p>组合 - contains a</p>\n<p><img data-src=\"https://quasdo.oss-cn-hangzhou.aliyuncs.com/img/image-20230617190052208.png\" alt=\"image-20230617190052208\" /></p>\n</li>\n<li>\n<p>实现</p>\n<p><img data-src=\"https://quasdo.oss-cn-hangzhou.aliyuncs.com/img/20200224104937159.png\" alt=\"20200224104937159\" /></p>\n<p>&lt;img src=&quot;<span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWFzZG8ub3NzLWNuLWhhbmd6aG91LmFsaXl1bmNzLmNvbS9pbWcvaW1hZ2UtMjAyMzA2MTcxOTA0NDI1NDYucG5n\">https://quasdo.oss-cn-hangzhou.aliyuncs.com/img/image-20230617190442546.png</span>&quot; alt=&quot;image-20230617190442546&quot; style=&quot;zoom:25%;&quot; /&gt;</p>\n</li>\n</ul>\n</li>\n<li>\n<p>识别重要属性</p>\n</li>\n</ol>\n<p><img data-src=\"https://quasdo.oss-cn-hangzhou.aliyuncs.com/img/593F8D4DBCC2106DA87098122BA9DFD1.png\" alt=\"593F8D4DBCC2106DA87098122BA9DFD1\" /></p>\n<h4 id=\"系统顺序图\"><a class=\"anchor\" href=\"#系统顺序图\">#</a> 系统顺序图</h4>\n<p><img data-src=\"https://quasdo.oss-cn-hangzhou.aliyuncs.com/img/image-20230616110005374.png\" alt=\"image-20230616110005374\" /></p>\n<p>&lt;img src=&quot;<span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWFzZG8ub3NzLWNuLWhhbmd6aG91LmFsaXl1bmNzLmNvbS9pbWcvaW1hZ2UtMjAyMzA2MTcyMDI4MDc2MjgucG5n\">https://quasdo.oss-cn-hangzhou.aliyuncs.com/img/image-20230617202807628.png</span>&quot; alt=&quot;image-20230617202807628&quot; style=&quot;zoom: 33%;&quot; /&gt;</p>\n<h4 id=\"状态图\"><a class=\"anchor\" href=\"#状态图\">#</a> 状态图</h4>\n<p><img data-src=\"https://quasdo.oss-cn-hangzhou.aliyuncs.com/img/image-20230617202834984.png\" alt=\"image-20230617202834984\" /></p>\n<p><img data-src=\"https://quasdo.oss-cn-hangzhou.aliyuncs.com/img/image-20230617203052895.png\" alt=\"image-20230617203052895\" /></p>\n<h3 id=\"题型\"><a class=\"anchor\" href=\"#题型\">#</a> 题型</h3>\n<p><img data-src=\"https://quasdo.oss-cn-hangzhou.aliyuncs.com/img/image-20230617144921876.png\" alt=\"image-20230617144921876\" /></p>\n<h4 id=\"为什么需要需求规格文档结合实验说明\"><a class=\"anchor\" href=\"#为什么需要需求规格文档结合实验说明\">#</a> 为什么需要需求规格文档？结合实验说明</h4>\n<ol>\n<li><strong>方便交流</strong>：软件开发过程中，<strong>子任务与人员</strong>之间存在错综复杂的关系，存在大量的沟通和交流，所以要编写软件开发中要编写不同类型的文档，每种文档都是针对项目中需要广泛交流的内容。因为<strong>软件需求</strong>需要进行<strong>广泛交流</strong>，所以要把需求文档化。</li>\n<li><strong>跟踪和度量</strong>：需求规格说明是在<strong>软件产品的角度以系统级需求列表的方式</strong>描述软件系统解决方案，书写需求规格说明，可以建立管理控制的基线，方便任务分配，制定工作计划，进行跟踪和度量。</li>\n<li><strong>过程管理</strong>：在实验中，需求规格的重要性不只体现在结果上，还包括中间过程，在书写需求规格过程中，才真正把问题域的问题和分析模型的成果转化为系统级需求，方便小组成员真正明确需求，个人认为在这个阶段包含一部分的需求在发现和完整化。</li>\n</ol>\n<h4 id=\"需求示例修改\"><a class=\"anchor\" href=\"#需求示例修改\">#</a> 需求示例修改</h4>\n<h5 id=\"用例选择错误\"><a class=\"anchor\" href=\"#用例选择错误\">#</a> 用例选择错误</h5>\n<ol>\n<li>用例粒度\n<ol>\n<li>不要将用例细化为单个操作，如将用户管理细化为增加、修改和删除，需要联合才能体现业务价值</li>\n<li>不要将同一个业务目标细化为不同用例，比如特价策略制定和赠送策略制定，合并为销售策略制定</li>\n<li>将明显不同的业务事件分开，如会员管理用例应该细化为发展会员和礼品赠送</li>\n</ol>\n</li>\n<li>用例价值\n<ol>\n<li>登录、数据验证、连接数据库没有价值，不作为用例</li>\n</ol>\n</li>\n<li>是否和系统产生交互\n<ol>\n<li>顾客不是参与者，不与系统产生交互</li>\n</ol>\n</li>\n</ol>\n<h5 id=\"技术文档撰写错误\"><a class=\"anchor\" href=\"#技术文档撰写错误\">#</a> 技术文档撰写错误</h5>\n<ol>\n<li>技术文档写作要点（简洁，精确，易读，易修改）\n<ol>\n<li>简洁：动词名词 + 辅助词，不要使用复杂长句、形容词和副词。</li>\n<li>精确：避免歧义。</li>\n<li>易读（查询）：有效使用引言、目录、索引等能够增强文档易读性的方法，使用系统化的方式组织内容信息，提供文档内容的可读性。</li>\n<li>易修改：使用相同的语句格式组织相关联或相似的信息；使用列表组织独立、并列的信息；使用编号表达繁杂信息之间的关系。引用而不是重复</li>\n</ol>\n</li>\n<li>需求书写要点（使用用户术语，可验证，可行性）</li>\n<li>需求规格说明文档书写要点（充分利用标准的文档模板，保持所以内容位置得当；保持文档内的需求集具有完备性和一致性；为需求划分优先级）</li>\n</ol>\n<p>&lt;img src=&quot;<span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWFzZG8ub3NzLWNuLWhhbmd6aG91LmFsaXl1bmNzLmNvbS9pbWcvaW1hZ2UtMjAyMzA2MTgyMzA4MzIwMzMucG5n\">https://quasdo.oss-cn-hangzhou.aliyuncs.com/img/image-20230618230832033.png</span>&quot; alt=&quot;image-20230618230832033&quot; style=&quot;zoom: 50%;&quot; /&gt;</p>\n<h4 id=\"设计功能测试用例\"><a class=\"anchor\" href=\"#设计功能测试用例\">#</a> 设计功能测试用例</h4>\n<p>以需求为线索，开发测试用例套件，确定输入 / 输出，开发测试用例。</p>\n<p>&lt;img src=&quot;<span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWFzZG8ub3NzLWNuLWhhbmd6aG91LmFsaXl1bmNzLmNvbS9pbWcvaW1hZ2UtMjAyMzA2MTgyMzEwMzk5NTQucG5n\">https://quasdo.oss-cn-hangzhou.aliyuncs.com/img/image-20230618231039954.png</span>&quot; alt=&quot;image-20230618231039954&quot; style=&quot;zoom: 50%;&quot; /&gt;</p>\n<h3 id=\"例题-2\"><a class=\"anchor\" href=\"#例题-2\">#</a> 例题</h3>\n<p><img data-src=\"https://quasdo.oss-cn-hangzhou.aliyuncs.com/img/image-20230617144900733.png\" alt=\"image-20230617144900733\" /></p>\n<p>画用例图</p>\n<p><img data-src=\"https://quasdo.oss-cn-hangzhou.aliyuncs.com/img/image-20230617144909928.png\" alt=\"image-20230617144909928\" /></p>\n<p>&lt;img src=&quot;<span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWFzZG8ub3NzLWNuLWhhbmd6aG91LmFsaXl1bmNzLmNvbS9pbWcvaW1hZ2UtMjAyMzA2MTkyMTM3MTU4MjUucG5n\">https://quasdo.oss-cn-hangzhou.aliyuncs.com/img/image-20230619213715825.png</span>&quot; alt=&quot;image-20230619213715825&quot; style=&quot;zoom: 33%;&quot; /&gt;</p>\n<p><img data-src=\"https://quasdo.oss-cn-hangzhou.aliyuncs.com/img/image-20230617194537437.png\" alt=\"image-20230617194537437\" /></p>\n<h2 id=\"软件设计\"><a class=\"anchor\" href=\"#软件设计\">#</a> 软件设计</h2>\n<h3 id=\"软件设计的核心思想\"><a class=\"anchor\" href=\"#软件设计的核心思想\">#</a> 软件设计的核心思想</h3>\n<p>&lt;img src=&quot;<span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWFzZG8ub3NzLWNuLWhhbmd6aG91LmFsaXl1bmNzLmNvbS9pbWcvaW1hZ2UtMjAyMzA2MTkxODA5MTY4MzEucG5n\">https://quasdo.oss-cn-hangzhou.aliyuncs.com/img/image-20230619180916831.png</span>&quot; alt=&quot;image-20230619180916831&quot; style=&quot;zoom:50%;&quot; /&gt;</p>\n<p><strong>抽象</strong>：横向上将系统分解为几个相对简单的子系统以及各子系统之间的关系</p>\n<p><strong>分解</strong>：纵向上聚焦各子系统的接口（区别于实现，各子系统之间交互的契约），可以分离接口和实现，使得人们更好地关注软件系统本质，降低复杂度</p>\n<h3 id=\"软件工程有哪三个层次各层的主要思想是什么\"><a class=\"anchor\" href=\"#软件工程有哪三个层次各层的主要思想是什么\">#</a> 软件工程有哪三个层次？各层的主要思想是什么？</h3>\n<p><img data-src=\"https://quasdo.oss-cn-hangzhou.aliyuncs.com/img/image-20230619180923023.png\" alt=\"image-20230619180923023\" /></p>\n<p><strong>高层设计</strong>：基于反映软件高层抽象的构建层次，描述系统的高层结构、关注点和设计决策</p>\n<p><strong>中层设计</strong>：更加关注组成构件的模块的划分、导入 / 导出、过程之间的调用关系或者类之间的协作</p>\n<p><strong>低层设计</strong>：深入模块和类的内部，关注具体的数据结构、算法、类型、语句和控制结构等体系结构</p>\n<h3 id=\"体系结构风格的优缺点\"><a class=\"anchor\" href=\"#体系结构风格的优缺点\">#</a> 体系结构风格的优缺点</h3>\n<h4 id=\"主程序子程序\"><a class=\"anchor\" href=\"#主程序子程序\">#</a> 主程序子程序</h4>\n<p>&lt;img src=&quot;<span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWFzZG8ub3NzLWNuLWhhbmd6aG91LmFsaXl1bmNzLmNvbS9pbWcvaW1hZ2UtMjAyMzA2MTkxODA5NDQ1NzAucG5n\">https://quasdo.oss-cn-hangzhou.aliyuncs.com/img/image-20230619180944570.png</span>&quot; alt=&quot;image-20230619180944570&quot; style=&quot;zoom: 33%;&quot; /&gt;</p>\n<p>优点：</p>\n<ol>\n<li>流程清晰，易于理解</li>\n<li>强控制性</li>\n</ol>\n<p>缺点：</p>\n<ol>\n<li>程序调用是一种<strong>强耦合的连接方式</strong>，非常依赖交互方的接口规格，这会使得系统难以修改和复用</li>\n<li>程序调用的连接方式<strong>限制了各部件之间的数据交互</strong>，可能会使得不同部件使用隐含的共享数据交流，产生不必要的公共耦合，进而破坏它的 “正确性” 控制能力</li>\n</ol>\n<p>应用：</p>\n<ol>\n<li>系统功能依层次分解为多个顺序执行步骤的系统</li>\n<li>结构化分析（自顶向下或自底向上）建立的软件系统</li>\n</ol>\n<h4 id=\"面向对象\"><a class=\"anchor\" href=\"#面向对象\">#</a> 面向对象</h4>\n<p>&lt;img src=&quot;<span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWFzZG8ub3NzLWNuLWhhbmd6aG91LmFsaXl1bmNzLmNvbS9pbWcvaW1hZ2UtMjAyMzA2MTkxODA5NTU4MTAucG5n\">https://quasdo.oss-cn-hangzhou.aliyuncs.com/img/image-20230619180955810.png</span>&quot; alt=&quot;image-20230619180955810&quot; style=&quot;zoom:33%;&quot; /&gt;</p>\n<p>优点：</p>\n<ol>\n<li>内部实现的可修改性</li>\n<li>易开发、易理解、易复用的结构组织</li>\n</ol>\n<p>缺点：</p>\n<ol>\n<li>接口的耦合性</li>\n<li>标识的耦合性</li>\n<li>副作用 P155\n<ol>\n<li>对象的重入问题</li>\n<li>A\\B 均使用 C，B 对 C 的修改可能产生对 A 未预期的影响</li>\n</ol>\n</li>\n</ol>\n<p>应用：</p>\n<ol>\n<li>基于数据分解和组织的软件系统</li>\n<li>基于抽象类型建立起来的软件系统</li>\n</ol>\n<h4 id=\"分层\"><a class=\"anchor\" href=\"#分层\">#</a> 分层</h4>\n<p>&lt;img src=&quot;<span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWFzZG8ub3NzLWNuLWhhbmd6aG91LmFsaXl1bmNzLmNvbS9pbWcvaW1hZ2UtMjAyMzA2MTkxODEwMjQwMTUucG5n\">https://quasdo.oss-cn-hangzhou.aliyuncs.com/img/image-20230619181024015.png</span>&quot; alt=&quot;image-20230619181024015&quot; style=&quot;zoom:33%;&quot; /&gt;</p>\n<p>优点：</p>\n<ol>\n<li>设计机制清晰，易于理解（网络通信协议的分层）</li>\n<li>支持并行开发</li>\n<li>更好的可复用性与内部可修改性</li>\n</ol>\n<p>缺点：</p>\n<ol>\n<li>交互协议难以修改</li>\n<li>性能损失</li>\n<li>难以确定层次数量和粒度</li>\n</ol>\n<p>应用：</p>\n<ol>\n<li>ISO 网络通信模型</li>\n<li>TCP/IP 网络通信模型</li>\n</ol>\n<h4 id=\"mvc\"><a class=\"anchor\" href=\"#mvc\">#</a> MVC</h4>\n<p>&lt;img src=&quot;<span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWFzZG8ub3NzLWNuLWhhbmd6aG91LmFsaXl1bmNzLmNvbS9pbWcvaW1hZ2UtMjAyMzA2MTkxODEwMzE3MTYucG5n\">https://quasdo.oss-cn-hangzhou.aliyuncs.com/img/image-20230619181031716.png</span>&quot; alt=&quot;image-20230619181031716&quot; style=&quot;zoom:33%;&quot; /&gt;</p>\n<p>模型、视图、控制分别是业务逻辑、表现、控制的三种不同内容抽象<br />\n优点：</p>\n<p>1）易开发性</p>\n<p>2）视图和控制的可修改性</p>\n<p>3）适宜于网络系统开发的特征</p>\n<p>缺点：</p>\n<p>1）复杂性</p>\n<p>2）模型修改困难</p>\n<h3 id=\"包的原则\"><a class=\"anchor\" href=\"#包的原则\">#</a> 包的原则</h3>\n<p><strong>内聚</strong></p>\n<ol>\n<li>\n<p>重用发布等价原则 (REP)：</p>\n<p>重用的粒度就是发布的粒度</p>\n<p>相关联的包一起发布，几个协作类组成一个包</p>\n</li>\n<li>\n<p>共同封闭原则 (CCP)</p>\n<ol>\n<li>包中所有类对于同一类性质的变化应该是共同封闭的，一个变化若对一个包产生影响，则对该包中的所有类产生影响，而对于其他包不造成任何影响。</li>\n<li>包尽可能大，和 CRP 互斥</li>\n</ol>\n</li>\n<li>\n<p>共同重用原理 (CRP)</p>\n<ol>\n<li>一个包中的所有类应该是能够共同重用（用到）的</li>\n</ol>\n</li>\n</ol>\n<p><strong>耦合</strong></p>\n<ol>\n<li>\n<p>无环依赖原则 (ADP): 在包的依赖关系图中不能存在环。必须是有向无环图。</p>\n<p>修改方式：</p>\n<ol>\n<li>DIP，依赖接口，实现接口</li>\n<li>分离包</li>\n</ol>\n</li>\n<li>\n<p>稳定依赖原则 (SDP): 朝着稳定 (别人的修改不影响我) 的方向进行依赖</p>\n<ol>\n<li>尽可能减少对别人的依赖</li>\n</ol>\n<p>&lt;img src=&quot;<span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWFzZG8ub3NzLWNuLWhhbmd6aG91LmFsaXl1bmNzLmNvbS9pbWcvaW1hZ2UtMjAyMzA2MTkwMDAzNDcyNTMucG5n\">https://quasdo.oss-cn-hangzhou.aliyuncs.com/img/image-20230619000347253.png</span>&quot; alt=&quot;image-20230619000347253&quot; style=&quot;zoom: 25%;&quot; /&gt;</p>\n</li>\n<li>\n<p>稳定抽象原则 (SAP): 包的抽象程度应该和其稳定程度一致</p>\n<p>（再根据图理解）</p>\n</li>\n</ol>\n<h3 id=\"体系结构开发集成测试用例\"><a class=\"anchor\" href=\"#体系结构开发集成测试用例\">#</a> 体系结构开发集成测试用例</h3>\n<ol>\n<li>大爆炸式集成</li>\n<li>增量式\n<ol>\n<li>自顶向下集成</li>\n<li>自底向上集成</li>\n<li>三明治式</li>\n<li>持续集成\n<ol>\n<li>尽早集成</li>\n<li>频繁集成</li>\n</ol>\n</li>\n</ol>\n</li>\n</ol>\n<ul>\n<li>持续集成需要用到版本控制工具和持续集成工具</li>\n</ul>\n<p><strong>桩模仿的是下层模块，用来测试上层；</strong></p>\n<p><strong>而驱动则模仿的是上层模块，用来测试下层。</strong></p>\n<p>所以，驱动需要利用下层提供的接口，来实现其模仿的模块的功能</p>\n<h3 id=\"包图\"><a class=\"anchor\" href=\"#包图\">#</a> 包图</h3>\n<p>分层风格，分为 presentation, logic, data 三层</p>\n<p>&lt;img src=&quot;<span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWFzZG8ub3NzLWNuLWhhbmd6aG91LmFsaXl1bmNzLmNvbS9pbWcvaW1hZ2UtMjAyMzA2MTcyMTA5MDQ1NDMucG5n\">https://quasdo.oss-cn-hangzhou.aliyuncs.com/img/image-20230617210904543.png</span>&quot; alt=&quot;image-20230617210904543&quot; style=&quot;zoom:33%;&quot; /&gt;</p>\n<h4 id=\"逻辑设计\"><a class=\"anchor\" href=\"#逻辑设计\">#</a> 逻辑设计</h4>\n<p>&lt;img src=&quot;<span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWFzZG8ub3NzLWNuLWhhbmd6aG91LmFsaXl1bmNzLmNvbS9pbWcvaW1hZ2UtMjAyMzA2MTcyMTA2NDQ0NDAucG5n\">https://quasdo.oss-cn-hangzhou.aliyuncs.com/img/image-20230617210644440.png</span>&quot; alt=&quot;image-20230617210644440&quot; style=&quot;zoom: 33%;&quot; /&gt;</p>\n<p>增加登录 logicController</p>\n<p>增加 RMI，分离服务端和客户端</p>\n<p>&lt;img src=&quot;<span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWFzZG8ub3NzLWNuLWhhbmd6aG91LmFsaXl1bmNzLmNvbS9pbWcvaW1hZ2UtMjAyMzA2MTcyMTA5NTEzMzcucG5n\">https://quasdo.oss-cn-hangzhou.aliyuncs.com/img/image-20230617210951337.png</span>&quot; alt=&quot;image-20230617210951337&quot; style=&quot;zoom:33%;&quot; /&gt;</p>\n<h4 id=\"物理设计\"><a class=\"anchor\" href=\"#物理设计\">#</a> 物理设计</h4>\n<ul>\n<li>presentation\n<ul>\n<li>建立界面\n<ul>\n<li>界面类库包</li>\n</ul>\n</li>\n<li>跳转逻辑\n<ul>\n<li><code>mainui</code>  包</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>logic\n<ul>\n<li>不希望高层直接依赖低层\n<ul>\n<li>增加 <code>businesslogicservice</code>  包：ui 和 logic 都会依赖，前者调用，后者实现</li>\n</ul>\n</li>\n<li>一些初始化与业务逻辑层上下文工作\n<ul>\n<li>增加 <code>utilitybl</code>  包，其他 bl 包均会依赖</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>data\n<ul>\n<li>持久化，会导致重复代码\n<ul>\n<li>增加 <code>databaseutility</code>  包，依赖 <code>JDBC</code>  类库包或 <code>IO</code>  类库包</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>层间\n<ul>\n<li>logic 与 data\n<ul>\n<li>数据问题：将 data 分为<strong>客户端</strong>的 <code>daraservice</code>  与<strong>服务器端</strong>的 <code>data</code> ，都依赖于 <code>RMI</code>  类库包</li>\n<li>传递问题： <code>PO</code>  包， persistent object</li>\n</ul>\n</li>\n<li>presentation 与 logic\n<ul>\n<li>传递问题： <code>VO</code>  包， value object</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>无环依赖原则\n<ul>\n<li>消除互环\n<ul>\n<li>实现接口和调用：将 commodity 和 member 的抽象接口放入 sales</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<p><img data-src=\"https://quasdo.oss-cn-hangzhou.aliyuncs.com/img/image-20230617211817834.png\" alt=\"image-20230617211817834\" /></p>\n<p><img data-src=\"https://quasdo.oss-cn-hangzhou.aliyuncs.com/img/image-20230617211833346.png\" alt=\"image-20230617211833346\" /></p>\n<p><img data-src=\"https://quasdo.oss-cn-hangzhou.aliyuncs.com/img/image-20230617212617519.png\" alt=\"image-20230617212617519\" /></p>\n<h3 id=\"进程图\"><a class=\"anchor\" href=\"#进程图\">#</a> 进程图</h3>\n<p><img data-src=\"https://quasdo.oss-cn-hangzhou.aliyuncs.com/img/image-20230617212557635.png\" alt=\"image-20230617212557635\" /></p>\n<h3 id=\"关键类图\"><a class=\"anchor\" href=\"#关键类图\">#</a> 关键类图</h3>\n<p>&lt;img src=&quot;<span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWFzZG8ub3NzLWNuLWhhbmd6aG91LmFsaXl1bmNzLmNvbS9pbWcvaW1hZ2UtMjAyMzA2MTcyMTI1Mzg4ODUucG5n\">https://quasdo.oss-cn-hangzhou.aliyuncs.com/img/image-20230617212538885.png</span>&quot; alt=&quot;image-20230617212538885&quot; style=&quot;zoom: 25%;&quot; /&gt;</p>\n<h3 id=\"持久化po\"><a class=\"anchor\" href=\"#持久化po\">#</a> 持久化 PO</h3>\n<p>&lt;img src=&quot;<span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWFzZG8ub3NzLWNuLWhhbmd6aG91LmFsaXl1bmNzLmNvbS9pbWcvaW1hZ2UtMjAyMzA2MTcyMTI2Mzk4MzQucG5n\">https://quasdo.oss-cn-hangzhou.aliyuncs.com/img/image-20230617212639834.png</span>&quot; alt=&quot;image-20230617212639834&quot; style=&quot;zoom: 33%;&quot; /&gt;</p>\n<h3 id=\"接口\"><a class=\"anchor\" href=\"#接口\">#</a> 接口</h3>\n<p>&lt;img src=&quot;<span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWFzZG8ub3NzLWNuLWhhbmd6aG91LmFsaXl1bmNzLmNvbS9pbWcvaW1hZ2UtMjAyMzA2MTcyMTI2Mjk0OTYucG5n\">https://quasdo.oss-cn-hangzhou.aliyuncs.com/img/image-20230617212629496.png</span>&quot; alt=&quot;image-20230617212629496&quot; style=&quot;zoom:33%;&quot; /&gt;</p>\n<p>&lt;img src=&quot;<span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWFzZG8ub3NzLWNuLWhhbmd6aG91LmFsaXl1bmNzLmNvbS9pbWcvaW1hZ2UtMjAyMzA2MTkwMDI1NTE4MTkucG5n\">https://quasdo.oss-cn-hangzhou.aliyuncs.com/img/image-20230619002551819.png</span>&quot; alt=&quot;image-20230619002551819&quot; style=&quot;zoom:33%;&quot; /&gt;</p>\n<p>&lt;img src=&quot;<span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWFzZG8ub3NzLWNuLWhhbmd6aG91LmFsaXl1bmNzLmNvbS9pbWcvaW1hZ2UtMjAyMzA2MTkwMDI2MTY0NzIucG5n\">https://quasdo.oss-cn-hangzhou.aliyuncs.com/img/image-20230619002616472.png</span>&quot; alt=&quot;image-20230619002616472&quot; style=&quot;zoom:33%;&quot; /&gt;</p>\n<p>&lt;img src=&quot;<span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWFzZG8ub3NzLWNuLWhhbmd6aG91LmFsaXl1bmNzLmNvbS9pbWcvaW1hZ2UtMjAyMzA2MTcyMTI4MTU1MjMucG5n\">https://quasdo.oss-cn-hangzhou.aliyuncs.com/img/image-20230617212815523.png</span>&quot; alt=&quot;image-20230617212815523&quot; style=&quot;zoom:33%;&quot; /&gt;</p>\n<p>&lt;img src=&quot;<span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWFzZG8ub3NzLWNuLWhhbmd6aG91LmFsaXl1bmNzLmNvbS9pbWcvaW1hZ2UtMjAyMzA2MTkwMDE5NDgyMzQucG5n\">https://quasdo.oss-cn-hangzhou.aliyuncs.com/img/image-20230619001948234.png</span>&quot; alt=&quot;image-20230619001948234&quot; style=&quot;zoom: 33%;&quot; /&gt;</p>\n<p>&lt;img src=&quot;<span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWFzZG8ub3NzLWNuLWhhbmd6aG91LmFsaXl1bmNzLmNvbS9pbWcvaW1hZ2UtMjAyMzA2MTkwMDIwMTk3MTMucG5n\">https://quasdo.oss-cn-hangzhou.aliyuncs.com/img/image-20230619002019713.png</span>&quot; alt=&quot;image-20230619002019713&quot; style=&quot;zoom:33%;&quot; /&gt;</p>\n<h3 id=\"题型-2\"><a class=\"anchor\" href=\"#题型-2\">#</a> 题型</h3>\n<p><img data-src=\"https://quasdo.oss-cn-hangzhou.aliyuncs.com/img/image-20230618235532418.png\" alt=\"image-20230618235532418\" /></p>\n<h3 id=\"例题-3\"><a class=\"anchor\" href=\"#例题-3\">#</a> 例题</h3>\n<p><img data-src=\"https://quasdo.oss-cn-hangzhou.aliyuncs.com/img/image-20230617145000599.png\" alt=\"image-20230617145000599\" /></p>\n<p>&lt;img src=&quot;<span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWFzZG8ub3NzLWNuLWhhbmd6aG91LmFsaXl1bmNzLmNvbS9pbWcvQjY1NjAyMzNFMEVDMjg0MDEwRDE1RkJFMDk1OEU2NTkucG5n\">https://quasdo.oss-cn-hangzhou.aliyuncs.com/img/B6560233E0EC284010D15FBE0958E659.png</span>&quot; alt=&quot;B6560233E0EC284010D15FBE0958E659&quot; style=&quot;zoom:33%;&quot; /&gt;</p>\n<p>&lt;img src=&quot;<span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWFzZG8ub3NzLWNuLWhhbmd6aG91LmFsaXl1bmNzLmNvbS9pbWcvMjI4RkNFNDUxNjE4QkU0OUFBMjRCQTY0RDE3NjNDMjcucG5n\">https://quasdo.oss-cn-hangzhou.aliyuncs.com/img/228FCE451618BE49AA24BA64D1763C27.png</span>&quot; alt=&quot;228FCE451618BE49AA24BA64D1763C27&quot; style=&quot;zoom:33%;&quot; /&gt;</p>\n<p>&lt;img src=&quot;<span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWFzZG8ub3NzLWNuLWhhbmd6aG91LmFsaXl1bmNzLmNvbS9pbWcvN0VBRDRBQjhFMjk2MDg2Njk0NDNBNTMyNURGQ0E5QjQucG5n\">https://quasdo.oss-cn-hangzhou.aliyuncs.com/img/7EAD4AB8E29608669443A5325DFCA9B4.png</span>&quot; alt=&quot;7EAD4AB8E29608669443A5325DFCA9B4&quot; style=&quot;zoom: 50%;&quot; /&gt;</p>\n<p>展示层和逻辑层的数据交互用 VO，函数名诸如 <code>addXXXX</code>   <code>getXXXXbyId</code></p>\n<p>逻辑层和数据层的交互用 PO，函数名诸如 <code>get</code> 、 <code>insert</code> 、 <code>find</code></p>\n<p>（都是我猜的）</p>\n<h2 id=\"人机交互界面设计\"><a class=\"anchor\" href=\"#人机交互界面设计\">#</a> 人机交互（界面设计）</h2>\n<h3 id=\"知识点-2\"><a class=\"anchor\" href=\"#知识点-2\">#</a> 知识点</h3>\n<ol>\n<li>\n<p><strong>简洁设计</strong>：</p>\n<ol>\n<li>7+-2 原则</li>\n<li>不在一个窗口展示过多信息，功能清晰明确</li>\n<li>摘要图片优于文字描述</li>\n<li>不要大菜单，不要过多的信息类别，不要太多的颜色和字体</li>\n</ol>\n</li>\n<li>\n<p><strong>一致性设计</strong>：</p>\n<ol>\n<li>依据<strong>精神模型</strong>，让系统中相似的任务有一致的交互机制（按钮位置等等）</li>\n</ol>\n</li>\n<li>\n<p><strong>低出错率设计</strong>：</p>\n<ol>\n<li>\n<p>避免犯错</p>\n<p>数值域不可输入字符</p>\n</li>\n<li>\n<p>友好建议：</p>\n<p>提供简洁的指导帮助⽤户消除错误，用户输入错误信息，系统会标注出来，而不是让用户重写整段代码</p>\n<p>语言清晰，表达准确，建设性帮助，友好，不应责备</p>\n</li>\n</ol>\n</li>\n<li>\n<p><strong>易记性</strong></p>\n<ol>\n<li>减少用户的记忆负担</li>\n<li>使用逐层递进的范式展示信息</li>\n<li>使用直观的快捷方式</li>\n<li>设置有意义的默认值</li>\n</ol>\n</li>\n<li>\n<p><strong>所见即所得</strong></p>\n</li>\n<li>\n<p><strong>使用导航</strong></p>\n<ol>\n<li>\n<p>导航的目的就是为用户提供一个很好的完成<strong>任务的入口</strong>，好的导航会让这个入口非常符合人的精神模型</p>\n</li>\n<li>\n<p>全局导航控件包括窗口、菜单、列表、快捷方式、热键等等。</p>\n<p>局部导航通过安排布局细节，制造视觉上的线索来提供导航。</p>\n</li>\n</ol>\n</li>\n<li>\n<p><strong>反馈</strong></p>\n<p>按钮点击等在视觉（声音）上给用户反馈，让用户意识到<strong>行为的结果</strong></p>\n<p>反馈的目的是提示用户交互行为的结果，但不能打断用户工作时的意识流。对用户思考和反应时间的把握。</p>\n</li>\n<li>\n<p><strong>协作式设计</strong></p>\n<p>人和计算机是人机交互的两方，其中人的因素是比较固定的，一定时期内不会发生大的变化，所以要让两者交互顺畅，就需要让计算机更多地适应人的因素，这也是人机交互设计以用户为中心的根本原因。这种<strong>调整计算机因素以更好地适应并帮助用户的设计方式</strong>被称作为协作式设计。</p>\n</li>\n<li>\n<p>** 精神模型：** 就是用户进行人机交互时头脑中的任务模型。人机交互设计需要依据精神模型进行隐喻设计，依据隐喻将控件功能与已知的熟悉事物联系起来，实现界面视觉提示和系统功能之间的知觉联系</p>\n</li>\n<li>\n<p><strong>差异性</strong>：对不同用户群体的任务模型是有差异的，所以对他们的人机交互设计也要有差异。按照用户群体自身的特点，可以将其划分为新手用户、专家用户和熟练用户</p>\n</li>\n</ol>\n<h3 id=\"题型-3\"><a class=\"anchor\" href=\"#题型-3\">#</a> 题型</h3>\n<ul>\n<li>\n<p>能够列出 5 个界面设计的注意事项，并加以解释</p>\n</li>\n<li>\n<p>例子违反了哪些条界面设计原则</p>\n</li>\n<li>\n<p>分析上图，它们分别体现（或违反）了哪些人机交互设计原则？请详细解释这些原则（10 分）</p>\n</li>\n</ul>\n<h3 id=\"例子\"><a class=\"anchor\" href=\"#例子\">#</a> 例子</h3>\n<p><img data-src=\"https://quasdo.oss-cn-hangzhou.aliyuncs.com/img/image-20230617144952956.png\" alt=\"image-20230617144952956\" /></p>\n<p>对左图：</p>\n<ol>\n<li>违反了简洁设计，交互信息过多，摘要图片比描述文字更清晰</li>\n<li>违反了一致性原则，按钮位置不一致，如 cancel 和 ok 的位置，不符合精神模型（已存在相似系统）</li>\n<li>违反了低出错率原则，选择的进度条不明显</li>\n<li>违反了易记性原则，没有清晰的导航或直观的快捷方式，没有减少记忆负担，将所有 certificate 列出，用户不容易记住</li>\n</ol>\n<p><img data-src=\"https://quasdo.oss-cn-hangzhou.aliyuncs.com/img/image-20230617155938257.png\" alt=\"image-20230617155938257\" /></p>\n<p><img data-src=\"https://quasdo.oss-cn-hangzhou.aliyuncs.com/img/image-20230617170644993.png\" alt=\"image-20230617170644993\" /></p>\n<ol>\n<li>符合简洁设计原则，模块结构清晰，没有提供过多的信息，符合 7+2 的原则，颜色简单</li>\n<li>符合一致性原则，符合用户的精神模型，与已有类似的界面相似</li>\n<li>符合易用性原则，递进式地展示菜单，使用直观的快捷方式，减轻用户的记忆负担</li>\n<li>所见即所得</li>\n</ol>\n<h2 id=\"详细设计\"><a class=\"anchor\" href=\"#详细设计\">#</a> 详细设计</h2>\n<p><img data-src=\"https://quasdo.oss-cn-hangzhou.aliyuncs.com/img/image-20230617170624416.png\" alt=\"image-20230617170624416\" /></p>\n<h3 id=\"知识点-3\"><a class=\"anchor\" href=\"#知识点-3\">#</a> 知识点</h3>\n<h4 id=\"详细设计的出发点\"><a class=\"anchor\" href=\"#详细设计的出发点\">#</a> 详细设计的出发点</h4>\n<p>软件详细设计是在软件体系结构设计之后进行，<strong>以需求开发的结果</strong> (需求规格说明和需求分析模型) 和<strong>软件体系结构的结果</strong> (软件体系结构设计方案与原型) 为出发点。</p>\n<h4 id=\"职责分配\"><a class=\"anchor\" href=\"#职责分配\">#</a> 职责分配</h4>\n<p>职责是执行任务（操作职责）或维护某些数据（数据职责）的义务。</p>\n<ol>\n<li>行为职责通常由方法来履行。</li>\n<li>数据职责通常由属性来完成。</li>\n<li>可能会涉及到类之间的协作。</li>\n</ol>\n<p>职责分类</p>\n<ol>\n<li>属性职责：对象的状态</li>\n<li>行为职责：对象的行为</li>\n</ol>\n<p>通过职责建立<strong>静态设计模型</strong></p>\n<p>职责分配可以从不同的抽象层次开始：职责是可以被分解的，职责分解是组件分解的基础<br />\n职责分配可以帮助实现高内聚，低耦合，确保不同模块职责没有重合，当且仅当数据和方法有利于模块职责时才添加。</p>\n<p>（关系）依赖 &lt; 关联 &lt; 聚合 &lt; 组合 &lt; 继承</p>\n<h4 id=\"grasp一般职责分配软件模式\"><a class=\"anchor\" href=\"#grasp一般职责分配软件模式\">#</a> GRASP 一般职责分配软件模式</h4>\n<ol>\n<li>特点：\n<ol>\n<li>低耦合：分配一个职责要保证低耦合度</li>\n<li>高聚合：分配一个职责的时候要保持类的高聚合度</li>\n<li>信息专家：将一个职责分配给专家 - 拥有履行职责所必须的信息的类</li>\n<li>创建者：创建规则在后面</li>\n<li>控制者：控制规则在后面（避免大多数信息由一个类发出、组件相对较小、行为职责和数据绑定、职责单一）</li>\n</ol>\n</li>\n<li>拇指原则：当有替代设计选择时，请仔细研究替代方案的内聚和耦合影响，以及未来可能对替代方案的演变压力。选择具有良好内聚性、耦合性和稳定性的替代方案。</li>\n<li>信息专家：统一提供对外的接口，而不是某一个具体的接口，数据和行为不要分开</li>\n<li>创建规则：如果有以下情况，则由创建者分配 B 类创建 A 类实例的职责：\n<ol>\n<li>B 聚合了 A 对象</li>\n<li>B 包含了 A 对象</li>\n<li>B 记录了 A 的实例</li>\n<li>B 要经常使用 A 对象</li>\n<li>当 A 的实例被创建，B 具有传递给 A 的初始化数据（也就是 B 是创建 A 的实例这项任务的信息专家）</li>\n<li>在有选择的地方，更喜欢 B 聚合或包含 A 对象</li>\n</ol>\n</li>\n</ol>\n<h4 id=\"协作\"><a class=\"anchor\" href=\"#协作\">#</a> 协作</h4>\n<p>从小到大，将对象的小职责聚合成大职责</p>\n<p>从大到小，将大职责分配给每个小对象</p>\n<p>同时运用这两种方法，共同来完成对协作的抽象</p>\n<p>绘制顺序图</p>\n<p>表达软件的动态模型</p>\n<h4 id=\"控制风格\"><a class=\"anchor\" href=\"#控制风格\">#</a> 控制风格</h4>\n<ol>\n<li>集中式控制风格：做决策的只有一个对象</li>\n<li>委托式控制风格：做出决策的对象不只有一个，<strong>职责的分解决定了控制对象的层次</strong>。</li>\n<li>分散式控制风格：无明确的控制对象，每个对象只承担想对较小的职责，完全靠各个对象自治的方式来实现大的职责</li>\n</ol>\n<p>可查看书上类图</p>\n<p><img data-src=\"https://quasdo.oss-cn-hangzhou.aliyuncs.com/img/image-20230619180139238.png\" alt=\"image-20230619180139238\" /></p>\n<h4 id=\"协作的测试\"><a class=\"anchor\" href=\"#协作的测试\">#</a> 协作的测试</h4>\n<ul>\n<li>Mock Object：类间协作的桩程序</li>\n<li>与体系结构集成的 stub 类型桩程序不同，Mock Object 要求自身的测试代码更简单，不用测试就能保证正确性</li>\n</ul>\n<h4 id=\"设计类图\"><a class=\"anchor\" href=\"#设计类图\">#</a> 设计类图</h4>\n<p>&lt;img src=&quot;<span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWFzZG8ub3NzLWNuLWhhbmd6aG91LmFsaXl1bmNzLmNvbS9pbWcvaW1hZ2UtMjAyMzA2MTkwMDIzMDQ1NDYucG5n\">https://quasdo.oss-cn-hangzhou.aliyuncs.com/img/image-20230619002304546.png</span>&quot; alt=&quot;image-20230619002304546&quot; style=&quot;zoom: 33%;&quot; /&gt;</p>\n<h4 id=\"详细顺序图\"><a class=\"anchor\" href=\"#详细顺序图\">#</a> 详细顺序图</h4>\n<p><img data-src=\"https://quasdo.oss-cn-hangzhou.aliyuncs.com/img/image-20230619185109209.png\" alt=\"image-20230619185109209\" /></p>\n<p><img data-src=\"https://quasdo.oss-cn-hangzhou.aliyuncs.com/img/46232BBCC2798A511945CAF26C596D3C.jpg\" alt=\"46232BBCC2798A511945CAF26C596D3C\" /></p>\n<h3 id=\"例题-4\"><a class=\"anchor\" href=\"#例题-4\">#</a> 例题</h3>\n<h2 id=\"耦合内聚\"><a class=\"anchor\" href=\"#耦合内聚\">#</a> 耦合 / 内聚</h2>\n<h3 id=\"知识点-4\"><a class=\"anchor\" href=\"#知识点-4\">#</a> 知识点</h3>\n<p><img data-src=\"https://quasdo.oss-cn-hangzhou.aliyuncs.com/img/image-20230617144725911.png\" alt=\"image-20230617144725911\" /></p>\n<p><img data-src=\"https://quasdo.oss-cn-hangzhou.aliyuncs.com/img/image-20230617144738739.png\" alt=\"image-20230617144738739\" /></p>\n<p>判断是哪种耦合 / 内聚，可以接受吗？如何修改？</p>\n<p>耦合：内容、公共、重复不可接受，控制、印记可以接受，数据最理想</p>\n<p>内聚：偶然和逻辑不可接受，时间、过程、通信可以接受且不可避免，功能和信息最理想</p>\n<h3 id=\"例子-2\"><a class=\"anchor\" href=\"#例子-2\">#</a> 例子</h3>\n<h4 id=\"内聚\"><a class=\"anchor\" href=\"#内聚\">#</a> 内聚</h4>\n<p>偶然内聚：完全不相关</p>\n<p>&lt;img src=&quot;<span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWFzZG8ub3NzLWNuLWhhbmd6aG91LmFsaXl1bmNzLmNvbS9pbWcvaW1hZ2UtMjAyMzA2MTcxNTA2MDQyNzgucG5n\">https://quasdo.oss-cn-hangzhou.aliyuncs.com/img/image-20230617150604278.png</span>&quot; alt=&quot;image-20230617150604278&quot; style=&quot;zoom:33%;&quot; /&gt;</p>\n<p>逻辑内聚：执行一系列操作，具体操作交给具体模块（如 swtich），解决控制耦合的方法</p>\n<p>&lt;img src=&quot;<span class=\"exturl\" data-url=\"aHR0cHM6Ly9lYWdsZWJlYXIyMDAyLmdpdGh1Yi5pby8yMDIyU3ByaW5nLSVFOCVCRCVBRiVFNCVCQiVCNiVFNSVCNyVBNSVFNyVBOCU4QiVFNCVCOCU4RSVFOCVBRSVBMSVFNyVBRSU5N0lJLyVFOCVCRCVBRiVFNCVCQiVCNiVFNSVCNyVBNSVFNyVBOCU4QiVFNCVCOCU4RSVFOCVBRSVBMSVFNyVBRSU5N0lJLTI0LSVFNSVBNCU4RCVFNCVCOSVBMCVFNiU4RiU5MCVFNyVCQSVCMi8zNi0xNjU0ODcyMDQ5MzY3Ny5wbmc=\">https://eaglebear2002.github.io/2022Spring - 软件工程与计算 II / 软件工程与计算 II-24 - 复习提纲 / 36-16548720493677.png</span>&quot; alt=&quot;img&quot; style=&quot;zoom: 50%;&quot; /&gt;</p>\n<p>时间内聚：执行一系列和时间有关的操作，比如构造方法和析构方法</p>\n<p>&lt;img src=&quot;<span class=\"exturl\" data-url=\"aHR0cHM6Ly9lYWdsZWJlYXIyMDAyLmdpdGh1Yi5pby8yMDIyU3ByaW5nLSVFOCVCRCVBRiVFNCVCQiVCNiVFNSVCNyVBNSVFNyVBOCU4QiVFNCVCOCU4RSVFOCVBRSVBMSVFNyVBRSU5N0lJLyVFOCVCRCVBRiVFNCVCQiVCNiVFNSVCNyVBNSVFNyVBOCU4QiVFNCVCOCU4RSVFOCVBRSVBMSVFNyVBRSU5N0lJLTI0LSVFNSVBNCU4RCVFNCVCOSVBMCVFNiU4RiU5MCVFNyVCQSVCMi8zNy0xNjU0ODcyMDQ5MzY3OC5wbmc=\">https://eaglebear2002.github.io/2022Spring - 软件工程与计算 II / 软件工程与计算 II-24 - 复习提纲 / 37-16548720493678.png</span>&quot; alt=&quot;img&quot; style=&quot;zoom: 67%;&quot; /&gt;</p>\n<p>过程内聚：执行一系列与步骤顺序有关的操作</p>\n<p>&lt;img src=&quot;<span class=\"exturl\" data-url=\"aHR0cHM6Ly9lYWdsZWJlYXIyMDAyLmdpdGh1Yi5pby8yMDIyU3ByaW5nLSVFOCVCRCVBRiVFNCVCQiVCNiVFNSVCNyVBNSVFNyVBOCU4QiVFNCVCOCU4RSVFOCVBRSVBMSVFNyVBRSU5N0lJLyVFOCVCRCVBRiVFNCVCQiVCNiVFNSVCNyVBNSVFNyVBOCU4QiVFNCVCOCU4RSVFOCVBRSVBMSVFNyVBRSU5N0lJLTI0LSVFNSVBNCU4RCVFNCVCOSVBMCVFNiU4RiU5MCVFNyVCQSVCMi8zOC0xNjc2NTI5NDk0ODUwLTIyMTQucG5n\">https://eaglebear2002.github.io/2022Spring - 软件工程与计算 II / 软件工程与计算 II-24 - 复习提纲 / 38-1676529494850-2214.png</span>&quot; alt=&quot;img&quot; style=&quot;zoom: 80%;&quot; /&gt;</p>\n<p>通信内聚：执行一系列与步骤顺序有关的操作，并且这些操作是在相同的数据结构上。</p>\n<p>&lt;img src=&quot;<span class=\"exturl\" data-url=\"aHR0cHM6Ly9lYWdsZWJlYXIyMDAyLmdpdGh1Yi5pby8yMDIyU3ByaW5nLSVFOCVCRCVBRiVFNCVCQiVCNiVFNSVCNyVBNSVFNyVBOCU4QiVFNCVCOCU4RSVFOCVBRSVBMSVFNyVBRSU5N0lJLyVFOCVCRCVBRiVFNCVCQiVCNiVFNSVCNyVBNSVFNyVBOCU4QiVFNCVCOCU4RSVFOCVBRSVBMSVFNyVBRSU5N0lJLTI0LSVFNSVBNCU4RCVFNCVCOSVBMCVFNiU4RiU5MCVFNyVCQSVCMi8zOS0xNjc2NTI5NDk0ODUwLTIyMTUucG5n\">https://eaglebear2002.github.io/2022Spring - 软件工程与计算 II / 软件工程与计算 II-24 - 复习提纲 / 39-1676529494850-2215.png</span>&quot; alt=&quot;img&quot; style=&quot;zoom:50%;&quot; /&gt;</p>\n<p>功能内聚：模块只执行一个操作或达到一个单一目的</p>\n<p>&lt;img src=&quot;<span class=\"exturl\" data-url=\"aHR0cHM6Ly9lYWdsZWJlYXIyMDAyLmdpdGh1Yi5pby8yMDIyU3ByaW5nLSVFOCVCRCVBRiVFNCVCQiVCNiVFNSVCNyVBNSVFNyVBOCU4QiVFNCVCOCU4RSVFOCVBRSVBMSVFNyVBRSU5N0lJLyVFOCVCRCVBRiVFNCVCQiVCNiVFNSVCNyVBNSVFNyVBOCU4QiVFNCVCOCU4RSVFOCVBRSVBMSVFNyVBRSU5N0lJLTI0LSVFNSVBNCU4RCVFNCVCOSVBMCVFNiU4RiU5MCVFNyVCQSVCMi80MC0xNjU0ODcyMDQ5MzY4OS5wbmc=\">https://eaglebear2002.github.io/2022Spring - 软件工程与计算 II / 软件工程与计算 II-24 - 复习提纲 / 40-16548720493689.png</span>&quot; alt=&quot;img&quot; style=&quot;zoom:50%;&quot; /&gt;</p>\n<p>信息内聚：模块进行许多操作，各自有各自的入口，相互独立，且在相同的数据结构上完成操作。</p>\n<p>&lt;img src=&quot;<span class=\"exturl\" data-url=\"aHR0cHM6Ly9lYWdsZWJlYXIyMDAyLmdpdGh1Yi5pby8yMDIyU3ByaW5nLSVFOCVCRCVBRiVFNCVCQiVCNiVFNSVCNyVBNSVFNyVBOCU4QiVFNCVCOCU4RSVFOCVBRSVBMSVFNyVBRSU5N0lJLyVFOCVCRCVBRiVFNCVCQiVCNiVFNSVCNyVBNSVFNyVBOCU4QiVFNCVCOCU4RSVFOCVBRSVBMSVFNyVBRSU5N0lJLTI0LSVFNSVBNCU4RCVFNCVCOSVBMCVFNiU4RiU5MCVFNyVCQSVCMi80MS0xNjU0ODcyMDQ5MzY4MTAucG5n\">https://eaglebear2002.github.io/2022Spring - 软件工程与计算 II / 软件工程与计算 II-24 - 复习提纲 / 41-165487204936810.png</span>&quot; alt=&quot;img&quot; style=&quot;zoom:50%;&quot; /&gt;</p>\n<h4 id=\"耦合\"><a class=\"anchor\" href=\"#耦合\">#</a> 耦合</h4>\n<p>数据耦合：两个模块的所有参数是同类型的数据项（发送正好）</p>\n<p>&lt;img src=&quot;<span class=\"exturl\" data-url=\"aHR0cHM6Ly9lYWdsZWJlYXIyMDAyLmdpdGh1Yi5pby8yMDIyU3ByaW5nLSVFOCVCRCVBRiVFNCVCQiVCNiVFNSVCNyVBNSVFNyVBOCU4QiVFNCVCOCU4RSVFOCVBRSVBMSVFNyVBRSU5N0lJLyVFOCVCRCVBRiVFNCVCQiVCNiVFNSVCNyVBNSVFNyVBOCU4QiVFNCVCOCU4RSVFOCVBRSVBMSVFNyVBRSU5N0lJLTI0LSVFNSVBNCU4RCVFNCVCOSVBMCVFNiU4RiU5MCVFNyVCQSVCMi80NS0xNjc2NTI5NDk0ODUwLTIyMTYucG5n\">https://eaglebear2002.github.io/2022Spring - 软件工程与计算 II / 软件工程与计算 II-24 - 复习提纲 / 45-1676529494850-2216.png</span>&quot; alt=&quot;img&quot; style=&quot;zoom:50%;&quot; /&gt;</p>\n<p>印记耦合：两个模块共享一个数据结构，但是只用了其中一个部分（发送多了）</p>\n<p>&lt;img src=&quot;<span class=\"exturl\" data-url=\"aHR0cHM6Ly9lYWdsZWJlYXIyMDAyLmdpdGh1Yi5pby8yMDIyU3ByaW5nLSVFOCVCRCVBRiVFNCVCQiVCNiVFNSVCNyVBNSVFNyVBOCU4QiVFNCVCOCU4RSVFOCVBRSVBMSVFNyVBRSU5N0lJLyVFOCVCRCVBRiVFNCVCQiVCNiVFNSVCNyVBNSVFNyVBOCU4QiVFNCVCOCU4RSVFOCVBRSVBMSVFNyVBRSU5N0lJLTI0LSVFNSVBNCU4RCVFNCVCOSVBMCVFNiU4RiU5MCVFNyVCQSVCMi8yOS0xNjU0ODcyMDQ5MzY5MTEucG5n\">https://eaglebear2002.github.io/2022Spring - 软件工程与计算 II / 软件工程与计算 II-24 - 复习提纲 / 29-165487204936911.png</span>&quot; alt=&quot;img&quot; style=&quot;zoom: 67%;&quot; /&gt;</p>\n<p>&lt;img src=&quot;<span class=\"exturl\" data-url=\"aHR0cHM6Ly9lYWdsZWJlYXIyMDAyLmdpdGh1Yi5pby8yMDIyU3ByaW5nLSVFOCVCRCVBRiVFNCVCQiVCNiVFNSVCNyVBNSVFNyVBOCU4QiVFNCVCOCU4RSVFOCVBRSVBMSVFNyVBRSU5N0lJLyVFOCVCRCVBRiVFNCVCQiVCNiVFNSVCNyVBNSVFNyVBOCU4QiVFNCVCOCU4RSVFOCVBRSVBMSVFNyVBRSU5N0lJLTI0LSVFNSVBNCU4RCVFNCVCOSVBMCVFNiU4RiU5MCVFNyVCQSVCMi8zMC0xNjc2NTI5NDk0ODUxLTIyMTcucG5n\">https://eaglebear2002.github.io/2022Spring - 软件工程与计算 II / 软件工程与计算 II-24 - 复习提纲 / 30-1676529494851-2217.png</span>&quot; alt=&quot;img&quot; style=&quot;zoom:67%;&quot; /&gt;</p>\n<p>&lt;img src=&quot;<span class=\"exturl\" data-url=\"aHR0cHM6Ly9lYWdsZWJlYXIyMDAyLmdpdGh1Yi5pby8yMDIyU3ByaW5nLSVFOCVCRCVBRiVFNCVCQiVCNiVFNSVCNyVBNSVFNyVBOCU4QiVFNCVCOCU4RSVFOCVBRSVBMSVFNyVBRSU5N0lJLyVFOCVCRCVBRiVFNCVCQiVCNiVFNSVCNyVBNSVFNyVBOCU4QiVFNCVCOCU4RSVFOCVBRSVBMSVFNyVBRSU5N0lJLTI0LSVFNSVBNCU4RCVFNCVCOSVBMCVFNiU4RiU5MCVFNyVCQSVCMi80NC0xNjc2NTI5NDk0ODUxLTIyMTgucG5n\">https://eaglebear2002.github.io/2022Spring - 软件工程与计算 II / 软件工程与计算 II-24 - 复习提纲 / 44-1676529494851-2218.png</span>&quot; alt=&quot;img&quot; style=&quot;zoom:50%;&quot; /&gt;</p>\n<p>控制耦合：一个模块给另一个模块传递了控制信息（除了数据还有控制信号，并且违反了单一职责原则）</p>\n<ol>\n<li>主要是 case 中不应该出现具体实现的代码，应该抽象成方法</li>\n</ol>\n<p><img data-src=\"https://eaglebear2002.github.io/2022Spring-%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E4%B8%8E%E8%AE%A1%E7%AE%97II/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E4%B8%8E%E8%AE%A1%E7%AE%97II-24-%E5%A4%8D%E4%B9%A0%E6%8F%90%E7%BA%B2/31-165487204937012.png\" alt=\"img\" /></p>\n<p>&lt;img src=&quot;<span class=\"exturl\" data-url=\"aHR0cHM6Ly9lYWdsZWJlYXIyMDAyLmdpdGh1Yi5pby8yMDIyU3ByaW5nLSVFOCVCRCVBRiVFNCVCQiVCNiVFNSVCNyVBNSVFNyVBOCU4QiVFNCVCOCU4RSVFOCVBRSVBMSVFNyVBRSU5N0lJLyVFOCVCRCVBRiVFNCVCQiVCNiVFNSVCNyVBNSVFNyVBOCU4QiVFNCVCOCU4RSVFOCVBRSVBMSVFNyVBRSU5N0lJLTI0LSVFNSVBNCU4RCVFNCVCOSVBMCVFNiU4RiU5MCVFNyVCQSVCMi80My0xNjc2NTI5NDk0ODUxLTIyMTkucG5n\">https://eaglebear2002.github.io/2022Spring - 软件工程与计算 II / 软件工程与计算 II-24 - 复习提纲 / 43-1676529494851-2219.png</span>&quot; alt=&quot;img&quot; style=&quot;zoom:50%;&quot; /&gt;</p>\n<p>重复耦合：一个模块有逻辑上相同的重复代码</p>\n<p><img data-src=\"https://eaglebear2002.github.io/2022Spring-%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E4%B8%8E%E8%AE%A1%E7%AE%97II/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E4%B8%8E%E8%AE%A1%E7%AE%97II-24-%E5%A4%8D%E4%B9%A0%E6%8F%90%E7%BA%B2/34-1676529494851-2220.png\" alt=\"img\" /></p>\n<p>公共耦合：模块之间共享全局数据结构</p>\n<p>&lt;img src=&quot;<span class=\"exturl\" data-url=\"aHR0cHM6Ly9lYWdsZWJlYXIyMDAyLmdpdGh1Yi5pby8yMDIyU3ByaW5nLSVFOCVCRCVBRiVFNCVCQiVCNiVFNSVCNyVBNSVFNyVBOCU4QiVFNCVCOCU4RSVFOCVBRSVBMSVFNyVBRSU5N0lJLyVFOCVCRCVBRiVFNCVCQiVCNiVFNSVCNyVBNSVFNyVBOCU4QiVFNCVCOCU4RSVFOCVBRSVBMSVFNyVBRSU5N0lJLTI0LSVFNSVBNCU4RCVFNCVCOSVBMCVFNiU4RiU5MCVFNyVCQSVCMi8zMi0xNjU0ODcyMDQ5MzcwMTMucG5n\">https://eaglebear2002.github.io/2022Spring - 软件工程与计算 II / 软件工程与计算 II-24 - 复习提纲 / 32-165487204937013.png</span>&quot; alt=&quot;img&quot; style=&quot;zoom:50%;&quot; /&gt;</p>\n<p>&lt;img src=&quot;<span class=\"exturl\" data-url=\"aHR0cHM6Ly9lYWdsZWJlYXIyMDAyLmdpdGh1Yi5pby8yMDIyU3ByaW5nLSVFOCVCRCVBRiVFNCVCQiVCNiVFNSVCNyVBNSVFNyVBOCU4QiVFNCVCOCU4RSVFOCVBRSVBMSVFNyVBRSU5N0lJLyVFOCVCRCVBRiVFNCVCQiVCNiVFNSVCNyVBNSVFNyVBOCU4QiVFNCVCOCU4RSVFOCVBRSVBMSVFNyVBRSU5N0lJLTI0LSVFNSVBNCU4RCVFNCVCOSVBMCVFNiU4RiU5MCVFNyVCQSVCMi80Ni0xNjc2NTI5NDk0ODUxLTIyMjEucG5n\">https://eaglebear2002.github.io/2022Spring - 软件工程与计算 II / 软件工程与计算 II-24 - 复习提纲 / 46-1676529494851-2221.png</span>&quot; alt=&quot;img&quot; style=&quot;zoom:50%;&quot; /&gt;</p>\n<p>内容耦合：一个模块直接修改另一个模块的内容（成员变量、函数等）</p>\n<h3 id=\"p226-227习题\"><a class=\"anchor\" href=\"#p226-227习题\">#</a> p226-227 习题</h3>\n<ol start=\"6\">\n<li>\n<p>功能内聚</p>\n</li>\n<li>\n<p>印记耦合，（通信内聚？）</p>\n</li>\n<li>\n<p>通信内聚，数据耦合</p>\n</li>\n<li>\n<p>控制耦合</p>\n</li>\n<li>\n<p>时间内聚，拆成三个函数，在 init 当中调用</p>\n<p><img data-src=\"https://quasdo.oss-cn-hangzhou.aliyuncs.com/img/image-20230617161725358.png\" alt=\"image-20230617161725358\" /></p>\n<p><img data-src=\"https://quasdo.oss-cn-hangzhou.aliyuncs.com/img/fbeacb1eb626519ad68930d40346622.png\" alt=\"fbeacb1eb626519ad68930d40346622\" /></p>\n</li>\n</ol>\n<h2 id=\"信息隐藏\"><a class=\"anchor\" href=\"#信息隐藏\">#</a> 信息隐藏</h2>\n<h3 id=\"基本思想\"><a class=\"anchor\" href=\"#基本思想\">#</a> 基本思想</h3>\n<p>每个模块都隐藏了重要设计决策的实现，因此只有该模块的组成部分才知道详细信息：特别是如果存在所有可能的设计更改的列表，则隐藏假设列表</p>\n<h3 id=\"两种常见的信息隐藏决策\"><a class=\"anchor\" href=\"#两种常见的信息隐藏决策\">#</a> 两种常见的信息隐藏决策</h3>\n<ol>\n<li><strong>按职责分解</strong> - 根据需求分配的职责，因为实践表明，需求是经常变化的，频率和幅度都很大；</li>\n<li><strong>按算法分解</strong> - 内部实现机制，常见的变化主题包括硬件依赖，输入输出形式，非标准语言特征和库，负责的设计和实现，复杂的数据结构，复杂的逻辑，全局变量。数据大小限制等。</li>\n</ol>\n<h3 id=\"对例子说明其信息隐藏程度的好坏\"><a class=\"anchor\" href=\"#对例子说明其信息隐藏程度的好坏\">#</a> 对例子 ***，说明其信息隐藏程度的好坏</h3>\n<ol>\n<li>封装数据和行为</li>\n<li>封装内部结构</li>\n<li>封装对象的引用</li>\n<li>委托隐藏了与其他对象的协作</li>\n<li>封装类型信息</li>\n<li>封装可能存在的变更</li>\n</ol>\n<p><img data-src=\"https://quasdo.oss-cn-hangzhou.aliyuncs.com/img/RM@ESVVEG_%60$_6KDF7$B7QG.JPG\" alt=\"RM@ESVVEG_B7QG\" /></p>\n<p><img data-src=\"https://quasdo.oss-cn-hangzhou.aliyuncs.com/img/image-20230620002654223.png\" alt=\"image-20230620002654223\" /></p>\n<p><img data-src=\"https://quasdo.oss-cn-hangzhou.aliyuncs.com/img/image-20230620002711981.png\" alt=\"image-20230620002711981\" /></p>\n<h3 id=\"题型-4\"><a class=\"anchor\" href=\"#题型-4\">#</a> 题型</h3>\n<p><img data-src=\"https://quasdo.oss-cn-hangzhou.aliyuncs.com/img/image-20230619005242633.png\" alt=\"image-20230619005242633\" /></p>\n<h3 id=\"例题-5\"><a class=\"anchor\" href=\"#例题-5\">#</a> 例题</h3>\n<p><img data-src=\"https://quasdo.oss-cn-hangzhou.aliyuncs.com/img/AgAABYrp6Svfn23qG8RFnZ9oI5VWkE5E.png\" alt=\"img\" /></p>\n<p>View 负责了展示，Logic 负责了统计求和。Data 负责各个数据的存储。</p>\n<h2 id=\"设计规则\"><a class=\"anchor\" href=\"#设计规则\">#</a> 设计规则</h2>\n<h3 id=\"规则罗列及详解\"><a class=\"anchor\" href=\"#规则罗列及详解\">#</a> 规则罗列及详解</h3>\n<p><img data-src=\"https://quasdo.oss-cn-hangzhou.aliyuncs.com/img/image-20230617232303090.png\" alt=\"image-20230617232303090\" /></p>\n<h4 id=\"降低隐式耦合\"><a class=\"anchor\" href=\"#降低隐式耦合\">#</a> 降低隐式耦合</h4>\n<ol>\n<li><strong>全局变量是有害的</strong></li>\n<li><strong>简洁</strong></li>\n<li><strong>不要有代码重复</strong></li>\n</ol>\n<h4 id=\"降低访问耦合\"><a class=\"anchor\" href=\"#降低访问耦合\">#</a> 降低访问耦合</h4>\n<ol>\n<li>\n<p><strong>面对接口编程</strong></p>\n</li>\n<li>\n<p><strong>接口分离原则（ISP)/ 也叫接口最小化原则</strong></p>\n<ol>\n<li>\n<p>将大的接口拆解成几个小的接口。</p>\n</li>\n<li>\n<p>这样可以有效避免出现不必要的依赖。</p>\n<p>&lt;img src=&quot;<span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWFzZG8ub3NzLWNuLWhhbmd6aG91LmFsaXl1bmNzLmNvbS9pbWcvaW1hZ2UtMjAyMzA2MTkyMzI2MDYxOTMucG5n\">https://quasdo.oss-cn-hangzhou.aliyuncs.com/img/image-20230619232606193.png</span>&quot; alt=&quot;image-20230619232606193&quot; style=&quot;zoom: 25%;&quot; /&gt;</p>\n<p>&lt;img src=&quot;<span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWFzZG8ub3NzLWNuLWhhbmd6aG91LmFsaXl1bmNzLmNvbS9pbWcvaW1hZ2UtMjAyMzA2MTkyMzI2MjQ4NzIucG5n\">https://quasdo.oss-cn-hangzhou.aliyuncs.com/img/image-20230619232624872.png</span>&quot; alt=&quot;image-20230619232624872&quot; style=&quot;zoom:25%;&quot; /&gt;</p>\n</li>\n</ol>\n</li>\n<li>\n<p><strong>迪米特法则</strong></p>\n<p>​\t&lt;img src=&quot;<span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWFzZG8ub3NzLWNuLWhhbmd6aG91LmFsaXl1bmNzLmNvbS9pbWcvaW1hZ2UtMjAyMzA2MTkyMzI2NDkyOTcucG5n\">https://quasdo.oss-cn-hangzhou.aliyuncs.com/img/image-20230619232649297.png</span>&quot; alt=&quot;image-20230619232649297&quot; style=&quot;zoom: 25%;&quot; /&gt;&lt;img src=&quot;<span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWFzZG8ub3NzLWNuLWhhbmd6aG91LmFsaXl1bmNzLmNvbS9pbWcvaW1hZ2UtMjAyMzA2MTkyMzI4MTE3MTgucG5n\">https://quasdo.oss-cn-hangzhou.aliyuncs.com/img/image-20230619232811718.png</span>&quot; alt=&quot;image-20230619232811718&quot; style=&quot;zoom:25%;&quot; /&gt;</p>\n</li>\n</ol>\n<h4 id=\"降低继承耦合\"><a class=\"anchor\" href=\"#降低继承耦合\">#</a> 降低继承耦合</h4>\n<ol>\n<li>\n<p><strong>LSP 里氏替换原则</strong></p>\n<p>子类型必须能够替换掉基类型而起同样的作用。</p>\n<p>保持父类的方法接口不变；保持父类方法的实现语义不变；（不能用 vector 实现 stack）</p>\n<p>只要调用一个接口，不论哪种子类或者父类本身，都可以完成相同语义的工作</p>\n<p>解决方案：在父类中添加方法或者函数，或者拆分接口</p>\n</li>\n<li>\n<p><strong>使用组合代替继承</strong></p>\n</li>\n</ol>\n<h4 id=\"提高内聚\"><a class=\"anchor\" href=\"#提高内聚\">#</a> 提高内聚</h4>\n<ol>\n<li><strong>集中信息和行为</strong></li>\n<li><strong>单一职责原则</strong></li>\n</ol>\n<p>&lt;img src=&quot;C:/Users/QUAS/AppData/Roaming/Typora/typora-user-images/image-20230620083444560.png&quot; alt=&quot;image-20230620083444560&quot; style=&quot;zoom:33%;&quot; /&gt;</p>\n<h4 id=\"其他\"><a class=\"anchor\" href=\"#其他\">#</a> 其他</h4>\n<ol>\n<li>\n<p>封装 —— 分离接口与实现</p>\n<p>含义：</p>\n<ol>\n<li>将数据和行为同时包含在类中</li>\n<li>分离对外接口与内部实现</li>\n</ol>\n<p>实现细节：</p>\n<ol>\n<li>封装数据和行为（不要每个私有数据都有 getter 和 setter，也不要暴露存储数据和推导数据 calculateAge）</li>\n<li>封装内部结构（public Position getPosition 代替 public Position [] getPositions）</li>\n<li>封装其他对象的引用（新对象的引用返回）</li>\n<li>封装类型信息（隐藏子类，只知道共性类别）</li>\n<li>封装潜在变更</li>\n</ol>\n</li>\n<li>\n<p><strong>OCP 开闭原则</strong></p>\n<p>对扩展开放，对修改关闭，添加新的代码而不需要修改原来的代码就能实现变更</p>\n<p><strong>只要是发生了需求变更需要修改原有代码，则违反此原则</strong></p>\n</li>\n<li>\n<p><strong>DIP 依赖倒置</strong></p>\n<p>高级模块不应该依赖于低级模块，两者都应该依赖于抽象</p>\n<p><strong>为具体类建立抽象接口并分离该接口</strong>是中实现 DIP 的基本手段</p>\n</li>\n</ol>\n<h3 id=\"例题-6\"><a class=\"anchor\" href=\"#例题-6\">#</a> 例题</h3>\n<p>对给定的示例，发现其所违反的原则，并进行修正</p>\n<h4 id=\"里氏替换\"><a class=\"anchor\" href=\"#里氏替换\">#</a> 里氏替换</h4>\n<p><img data-src=\"https://quasdo.oss-cn-hangzhou.aliyuncs.com/img/image-20230616110140558.png\" alt=\"image-20230616110140558\" /></p>\n<p>里氏替换原则例题<br />\n（1）指出两个关于继承的设计是否合理？是否违反设计原则？<br />\n（2）对两段代码，如果合理，请解释其合理性，如果违反，请解释该原则，并修改</p>\n<p>第一个不合理，栈不能继承向量，向量很多方法栈用不到</p>\n<p>第二个合理，雇员继承人</p>\n<h2 id=\"设计模式\"><a class=\"anchor\" href=\"#设计模式\">#</a> 设计模式</h2>\n<h3 id=\"如何实现可修改性-可扩展性-灵活性\"><a class=\"anchor\" href=\"#如何实现可修改性-可扩展性-灵活性\">#</a> 如何实现可修改性、可扩展性、灵活性</h3>\n<ol>\n<li>实现的<strong>可修改性</strong>：涉及到大的场景的修改\n<ol>\n<li>对已有实现的修改</li>\n<li>例如：修改现有促销策略</li>\n</ol>\n</li>\n<li>实现的<strong>可扩展性</strong>（DIP &amp; OCP）\n<ol>\n<li>对新的实现的扩展</li>\n<li>例如：增加一条新的促销策略（策略模式）</li>\n</ol>\n</li>\n<li>实现的<strong>灵活性</strong>\n<ol>\n<li>对实现的动态配置</li>\n<li>例如：动态修改更改某商品对应促销策略</li>\n</ol>\n</li>\n</ol>\n<p>将接口和实现分离的实现方法：</p>\n<ol>\n<li>通过接口和实现该接口的类完成接口与实现的分离</li>\n<li>通过子类继承父类，将父类的接口和子类的实现分离</li>\n</ol>\n<p>&lt;img src=&quot;<span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWFzZG8ub3NzLWNuLWhhbmd6aG91LmFsaXl1bmNzLmNvbS9pbWcvaW1hZ2UtMjAyMzA2MTkyMTM4MzQ0OTcucG5n\">https://quasdo.oss-cn-hangzhou.aliyuncs.com/img/image-20230619213834497.png</span>&quot; alt=&quot;image-20230619213834497&quot; style=&quot;zoom: 25%;&quot; /&gt;</p>\n<h3 id=\"模式体现的设计原则\"><a class=\"anchor\" href=\"#模式体现的设计原则\">#</a> 模式体现的设计原则</h3>\n<p><img data-src=\"https://quasdo.oss-cn-hangzhou.aliyuncs.com/img/image-20230616110233164.png\" alt=\"image-20230616110233164\" /></p>\n<p>策略模式：</p>\n<ul>\n<li><strong>减少耦合</strong> - 减少策略的使用类和策略的实现类的直接的耦合</li>\n<li><strong>依赖倒置</strong> - 策略的使用类依赖的是策略的接口，而非策略的实现类</li>\n</ul>\n<p>迭代器：</p>\n<ul>\n<li><strong>减少耦合</strong> - 减少遍历的使用类和遍历的实现类直接的耦合</li>\n<li><strong>依赖倒置</strong> - 遍历的使用类依赖的是策略的接口，而非遍历的实现类</li>\n</ul>\n<h3 id=\"策略模式\"><a class=\"anchor\" href=\"#策略模式\">#</a> 策略模式</h3>\n<p>p266</p>\n<p><img data-src=\"https://quasdo.oss-cn-hangzhou.aliyuncs.com/img/image-20230617220043789.png\" alt=\"image-20230617220043789\" /></p>\n<p><img data-src=\"https://quasdo.oss-cn-hangzhou.aliyuncs.com/img/image-20230617220107422.png\" alt=\"image-20230617220107422\" /></p>\n<p><img data-src=\"https://quasdo.oss-cn-hangzhou.aliyuncs.com/img/image-20230617220423371.png\" alt=\"image-20230617220423371\" /></p>\n<p><img data-src=\"https://quasdo.oss-cn-hangzhou.aliyuncs.com/img/image-20230617220512228.png\" alt=\"image-20230617220512228\" /></p>\n<p><img data-src=\"https://quasdo.oss-cn-hangzhou.aliyuncs.com/img/image-20230617220533526.png\" alt=\"image-20230617220533526\" /></p>\n<h3 id=\"抽象工厂模式\"><a class=\"anchor\" href=\"#抽象工厂模式\">#</a> 抽象工厂模式</h3>\n<p>&lt;img src=&quot;<span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWFzZG8ub3NzLWNuLWhhbmd6aG91LmFsaXl1bmNzLmNvbS9pbWcvaW1hZ2UtMjAyMzA2MjAwODEwMTUzNzAucG5n\">https://quasdo.oss-cn-hangzhou.aliyuncs.com/img/image-20230620081015370.png</span>&quot; alt=&quot;image-20230620081015370&quot; style=&quot;zoom:33%;&quot; /&gt;</p>\n<h3 id=\"单件模式\"><a class=\"anchor\" href=\"#单件模式\">#</a> 单件模式</h3>\n<h3 id=\"迭代器模式\"><a class=\"anchor\" href=\"#迭代器模式\">#</a> 迭代器模式</h3>\n<p><img data-src=\"https://quasdo.oss-cn-hangzhou.aliyuncs.com/img/image-20230617220719437.png\" alt=\"image-20230617220719437\" /></p>\n<p><img data-src=\"https://quasdo.oss-cn-hangzhou.aliyuncs.com/img/image-20230617220949398.png\" alt=\"image-20230617220949398\" /></p>\n<h2 id=\"构造\"><a class=\"anchor\" href=\"#构造\">#</a> 构造</h2>\n<h3 id=\"构造包含的活动\"><a class=\"anchor\" href=\"#构造包含的活动\">#</a> 构造包含的活动</h3>\n<p>详细设计、编程、测试、调试、代码评审、集成与构建、构造管理</p>\n<p>&lt;img src=&quot;<span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWFzZG8ub3NzLWNuLWhhbmd6aG91LmFsaXl1bmNzLmNvbS9pbWcvaW1hZ2UtMjAyMzA2MTkxNzQ4MjY2MDgucG5n\">https://quasdo.oss-cn-hangzhou.aliyuncs.com/img/image-20230619174826608.png</span>&quot; alt=&quot;image-20230619174826608&quot; style=&quot;zoom:25%;&quot; /&gt;</p>\n<h3 id=\"契约式编程\"><a class=\"anchor\" href=\"#契约式编程\">#</a> 契约式编程</h3>\n<p>如果一个函数或方法，在前置条件满足的情况下开始执行，完成后能够满足后置条件。</p>\n<p>异常和断言</p>\n<h3 id=\"防御式编程\"><a class=\"anchor\" href=\"#防御式编程\">#</a> 防御式编程</h3>\n<p>当一个方法与其他方法、操作系统、硬件等外界环境发生交互时，不能保证外界环境都是正确的，外界发生错误时，保护方法内部不受损害。</p>\n<p>异常和断言</p>\n<p>常见问题有：</p>\n<ol>\n<li>输入参数</li>\n<li>其他对象初始化</li>\n<li>是否为 null</li>\n<li>网络连接是否正常</li>\n</ol>\n<h3 id=\"表驱动\"><a class=\"anchor\" href=\"#表驱动\">#</a> 表驱动</h3>\n<ul>\n<li>数据的保存一定要能够<strong>节省计算（核心思想）</strong>，用空间换取时间</li>\n<li>eg：包括所得税中的速算</li>\n<li>声明多个一维数组，存储系列同类型的边界条件</li>\n<li>然后通过 for 循环，统一用一个下标 i 访问所有数组的值</li>\n</ul>\n<p>&lt;img src=&quot;<span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWFzZG8ub3NzLWNuLWhhbmd6aG91LmFsaXl1bmNzLmNvbS9pbWcvaW1hZ2UtMjAyMzA2MTcyMzQ3NTk1NjgucG5n\">https://quasdo.oss-cn-hangzhou.aliyuncs.com/img/image-20230617234759568.png</span>&quot; alt=&quot;image-20230617234759568&quot; style=&quot;zoom:33%;&quot; /&gt;</p>\n<p><img data-src=\"https://quasdo.oss-cn-hangzhou.aliyuncs.com/img/image-20230617234851170.png\" alt=\"image-20230617234851170\" /></p>\n<h3 id=\"代码问题\"><a class=\"anchor\" href=\"#代码问题\">#</a> 代码问题</h3>\n<p><img data-src=\"https://quasdo.oss-cn-hangzhou.aliyuncs.com/img/image-20230617235717836.png\" alt=\"image-20230617235717836\" /></p>\n<p><strong>易维护性</strong>：</p>\n<ol>\n<li>缩进表达逻辑结构</li>\n<li>将相关逻辑组织在一起</li>\n<li>用<strong>空行</strong>分割逻辑</li>\n<li>语句分行</li>\n<li><strong>命名</strong>要规范要有意义</li>\n<li>要有<strong>注释</strong></li>\n<li><strong>不要硬编码</strong></li>\n<li><strong>减少重复代码</strong></li>\n</ol>\n<p><strong>可靠的代码</strong>：</p>\n<ol start=\"7\">\n<li>\n<p>小型任务分解</p>\n</li>\n<li>\n<p><strong>复杂决策</strong>的转化</p>\n<p>- 使用新的布尔变量简化复杂决策</p>\n</li>\n</ol>\n<p>&lt;img src=&quot;<span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWFzZG8ub3NzLWNuLWhhbmd6aG91LmFsaXl1bmNzLmNvbS9pbWcvaW1hZ2UtMjAyMzA2MjAwMDExMjAyMDIucG5n\">https://quasdo.oss-cn-hangzhou.aliyuncs.com/img/image-20230620001120202.png</span>&quot; alt=&quot;image-20230620001120202&quot; style=&quot;zoom:25%;&quot; /&gt;</p>\n<p>- 使用有意义的名词简化复杂决策 （抽象成判断的函数）</p>\n<p>&lt;img src=&quot;<span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWFzZG8ub3NzLWNuLWhhbmd6aG91LmFsaXl1bmNzLmNvbS9pbWcvaW1hZ2UtMjAyMzA2MjAwMDExNDU4MTcucG5n\">https://quasdo.oss-cn-hangzhou.aliyuncs.com/img/image-20230620001145817.png</span>&quot; alt=&quot;image-20230620001145817&quot; style=&quot;zoom: 25%;&quot; /&gt;</p>\n<p>- 表驱动</p>\n<ol start=\"9\">\n<li>\n<p>数据使用</p>\n<p>- 变量与命名相符、单变量单目的、限制全局变量、不要用突兀的数字</p>\n</li>\n<li>\n<p>明确依赖关系（可以写到注释里面 @see）</p>\n</li>\n</ol>\n<h3 id=\"例题-7\"><a class=\"anchor\" href=\"#例题-7\">#</a> 例题</h3>\n<p>&lt;img src=&quot;<span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWFzZG8ub3NzLWNuLWhhbmd6aG91LmFsaXl1bmNzLmNvbS9pbWcvaW1hZ2UtMjAyMzA2MTkxNzQwNDUwODYucG5n\">https://quasdo.oss-cn-hangzhou.aliyuncs.com/img/image-20230619174045086.png</span>&quot; alt=&quot;image-20230619174045086&quot; style=&quot;zoom: 25%;&quot; /&gt;</p>\n<p>&lt;img src=&quot;<span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWFzZG8ub3NzLWNuLWhhbmd6aG91LmFsaXl1bmNzLmNvbS9pbWcvaW1hZ2UtMjAyMzA2MTkxNzQyMjQ5ODEucG5n\">https://quasdo.oss-cn-hangzhou.aliyuncs.com/img/image-20230619174224981.png</span>&quot; alt=&quot;image-20230619174224981&quot; style=&quot;zoom: 50%;&quot; /&gt;</p>\n<p>&lt;img src=&quot;<span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWFzZG8ub3NzLWNuLWhhbmd6aG91LmFsaXl1bmNzLmNvbS9pbWcvaW1hZ2UtMjAyMzA2MTkxNzQyNTUyMDAucG5n\">https://quasdo.oss-cn-hangzhou.aliyuncs.com/img/image-20230619174255200.png</span>&quot; alt=&quot;image-20230619174255200&quot; style=&quot;zoom: 25%;&quot; /&gt;</p>\n<p>&lt;img src=&quot;<span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWFzZG8ub3NzLWNuLWhhbmd6aG91LmFsaXl1bmNzLmNvbS9pbWcvQWdBQUJZcnA2U3V3R0RucWZXOURqS3B3ZDhoNnluM0oucG5n\">https://quasdo.oss-cn-hangzhou.aliyuncs.com/img/AgAABYrp6SuwGDnqfW9DjKpwd8h6yn3J.png</span>&quot; alt=&quot;AgAABYrp6SuwGDnqfW9DjKpwd8h6yn3J&quot; style=&quot;zoom:50%;&quot; /&gt;</p>\n<p>代码缺点：</p>\n<ol>\n<li>直接通过字符串来返回结果，硬编码不利于修改，复用。</li>\n<li>即使使用字符串是合理，也应该在 ifelse 中设置 output 的值。再统一调用 writer.print (output)。</li>\n</ol>\n<h2 id=\"测试\"><a class=\"anchor\" href=\"#测试\">#</a> 测试</h2>\n<p><img data-src=\"https://quasdo.oss-cn-hangzhou.aliyuncs.com/img/image-20230616110350978.png\" alt=\"image-20230616110350978\" /></p>\n<p><strong>书写格式：ID 输入 输出</strong></p>\n<h3 id=\"黑盒测试\"><a class=\"anchor\" href=\"#黑盒测试\">#</a> 黑盒测试</h3>\n<ol>\n<li>\n<p>等价类</p>\n<ul>\n<li>分为若干子集，选取少量具有代表性的数据作为测试用例</li>\n</ul>\n</li>\n<li>\n<p>边界值</p>\n<ul>\n<li>错误往往发生在等价类的边界</li>\n</ul>\n</li>\n<li>\n<p>决策表</p>\n</li>\n<li>\n<p>状态转换</p>\n<p>根据状态转换图，建立测试对象的转换表，状态转换的每一类都应该被设计为测试用例</p>\n<ul>\n<li>输入：方法 + 当前状态</li>\n<li>输出</li>\n</ul>\n</li>\n</ol>\n<h3 id=\"黑白盒比较\"><a class=\"anchor\" href=\"#黑白盒比较\">#</a> 黑白盒比较</h3>\n<p>白盒优点：覆盖率高；发现的缺陷较多<br />\n白盒缺点：测试开销大；不能检验需求规格<br />\n黑盒优点：测试效率高；可以检验需求规格<br />\n黑盒缺点：覆盖率低：发现的缺陷少</p>\n<h3 id=\"白盒测试-分支覆盖的测试用例设计\"><a class=\"anchor\" href=\"#白盒测试-分支覆盖的测试用例设计\">#</a> 白盒测试 - 分支覆盖的测试用例设计</h3>\n<p>&lt;img src=&quot;<span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWFzZG8ub3NzLWNuLWhhbmd6aG91LmFsaXl1bmNzLmNvbS9pbWcvaW1hZ2UtMjAyMzA2MTgwMDAzNDcwOTQucG5n\">https://quasdo.oss-cn-hangzhou.aliyuncs.com/img/image-20230618000347094.png</span>&quot; alt=&quot;image-20230618000347094&quot; style=&quot;zoom: 25%;&quot; /&gt;</p>\n<p>&lt;img src=&quot;<span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWFzZG8ub3NzLWNuLWhhbmd6aG91LmFsaXl1bmNzLmNvbS9pbWcvaW1hZ2UtMjAyMzA2MTcyMjEzMjA2MjEucG5n\">https://quasdo.oss-cn-hangzhou.aliyuncs.com/img/image-20230617221320621.png</span>&quot; alt=&quot;image-20230617221320621&quot; style=&quot;zoom: 80%;&quot; /&gt;</p>\n<h4 id=\"语句覆盖\"><a class=\"anchor\" href=\"#语句覆盖\">#</a> 语句覆盖</h4>\n<p>确保测试用例的每一行代码都被覆盖到</p>\n<h4 id=\"条件覆盖\"><a class=\"anchor\" href=\"#条件覆盖\">#</a> 条件覆盖</h4>\n<p>每个判断的每个结果都被至少满足一次</p>\n<h4 id=\"路径覆盖\"><a class=\"anchor\" href=\"#路径覆盖\">#</a> 路径覆盖</h4>\n<p>确保程序每条独立的路径都被执行一次</p>\n<h3 id=\"圈复杂度计算\"><a class=\"anchor\" href=\"#圈复杂度计算\">#</a> 圈复杂度计算</h3>\n<p>p316</p>\n<p>&lt;img src=&quot;<span class=\"exturl\" data-url=\"aHR0cHM6Ly9xdWFzZG8ub3NzLWNuLWhhbmd6aG91LmFsaXl1bmNzLmNvbS9pbWcvaW1hZ2UtMjAyMzA2MTcyMzQ1NDgwMDIucG5n\">https://quasdo.oss-cn-hangzhou.aliyuncs.com/img/image-20230617234548002.png</span>&quot; alt=&quot;image-20230617234548002&quot; style=&quot;zoom:33%;&quot; /&gt;</p>\n<p>法一：</p>\n<p><img data-src=\"https://quasdo.oss-cn-hangzhou.aliyuncs.com/img/image-20230617234341854.png\" alt=\"image-20230617234341854\" /></p>\n<p>法二：</p>\n<p><img data-src=\"https://quasdo.oss-cn-hangzhou.aliyuncs.com/img/image-20230617234353586.png\" alt=\"image-20230617234353586\" /></p>\n<p>评判：</p>\n<ol>\n<li>0-5：子程序还不错</li>\n<li>6-10：简化子程序</li>\n<li>大于 10：拆分子程序并调用<img data-src=\"https://quasdo.oss-cn-hangzhou.aliyuncs.com/img/image-20230619010607697.png\" alt=\"image-20230619010607697\" /></li>\n</ol>\n<p><img data-src=\"https://quasdo.oss-cn-hangzhou.aliyuncs.com/img/image-20230619010616555.png\" alt=\"image-20230619010616555\" /></p>\n<h3 id=\"例题-8\"><a class=\"anchor\" href=\"#例题-8\">#</a> 例题</h3>\n<h2 id=\"软件生命周期模型\"><a class=\"anchor\" href=\"#软件生命周期模型\">#</a> 软件生命周期模型</h2>\n<h3 id=\"知识点-5\"><a class=\"anchor\" href=\"#知识点-5\">#</a> 知识点</h3>\n<h4 id=\"瀑布模型\"><a class=\"anchor\" href=\"#瀑布模型\">#</a> 瀑布模型</h4>\n<p><img data-src=\"https://quasdo.oss-cn-hangzhou.aliyuncs.com/img/image-20230619010913052.png\" alt=\"image-20230619010913052\" /></p>\n<p><strong>瀑布模型</strong>是按照软件生命周期模型将软件开发活动组织为<strong>需求开发、软件设计、软件实现、软件测试、软件交付和软件维护</strong>等活动，并且规定了它们自上而下、相互邻接的次序。</p>\n<p>优点：为软件开发活动定义了<strong>清晰的阶段划分</strong>（包括输入 / 输出、主要工作及其关注点），这让开发者能够以关注点分离的方式更好地进行那些复杂度超越个人能力的软件项目的开发活动。</p>\n<p>缺点：</p>\n<ol>\n<li>对文档的过高的期望具有局限性</li>\n<li>对开发活动的线性顺序假设具有局限性</li>\n<li>客户、用户的参与具有局限性：成功的项目开发需要客户、用户从始至终的参与，而不仅仅是一个阶段。</li>\n<li>里程碑粒度具有局限性：里程碑粒度过粗，基本丧失了 “早发现缺陷早修复” 这一思想</li>\n</ol>\n<p>适用于比较成熟，没有技术难点的软件</p>\n<h4 id=\"增量迭代模型\"><a class=\"anchor\" href=\"#增量迭代模型\">#</a> 增量迭代模型</h4>\n<p><img data-src=\"https://quasdo.oss-cn-hangzhou.aliyuncs.com/img/image-20230619011020595.png\" alt=\"image-20230619011020595\" /></p>\n<p>增量迭代模型是在项目开始时，通过<strong>系统需求开发和核心体系结构设计活动</strong>完成项目对前景和范围的界定，然后再将后续开发活动组织为<strong>多个迭代、并行的瀑布式开发模型</strong>。</p>\n<p>少量的不确定性和影响不大的需求变更通过迭代的方式加以解决。</p>\n<p>优点：</p>\n<ol>\n<li>迭代式开发更加符合软件开发的实践情况，具有更好的适用性；</li>\n<li>并行开发可以帮助缩短软件产品的开发时间；</li>\n<li>渐进交付可以加强用户反馈，降低开发风险。</li>\n</ol>\n<p>缺点：</p>\n<ol>\n<li>由于各个构件是逐渐并入已有的软件体系结构中的，所以加入构件必须不破坏已构造好的系统部分，这需要软件具备开放式的体系结构。</li>\n<li>增量交付模型需要一个完备、清晰的项目前景和范围以进行并发开发规划，但是在一些不稳定的领域，不确定性太多或者需求变化非常频繁，很难在项目开始就确定前景和范围。</li>\n</ol>\n<p>适用范围：适用于大规模软件系统的开发。</p>\n<h4 id=\"演化模型\"><a class=\"anchor\" href=\"#演化模型\">#</a> 演化模型</h4>\n<p><img data-src=\"https://quasdo.oss-cn-hangzhou.aliyuncs.com/img/image-20230619011031067.png\" alt=\"image-20230619011031067\" /></p>\n<p>演化模型将软件开发活动组织为<strong>多个迭代、并行的瀑布式开发活动</strong>。演化模型能够更好地应对需求变更，更适用于需求变更比较频繁或不确定性较多的领域。</p>\n<p>优点：</p>\n<ol>\n<li><strong>使用了迭代式开发，具有更好的适用性</strong>，尤其是其演化式迭代安排能够适用于那些需求变更比较频繁或不确定性较多的软件系统的开发；</li>\n<li>并行开发可以帮助<strong>缩短</strong>软件产品的开发时间；</li>\n<li>渐进交付可以<strong>加强用户反馈</strong>，降低开发风险。</li>\n</ol>\n<p>缺点：</p>\n<ol>\n<li>无法在项目早期阶段建立项目范围，所以项目的整体计划、进度调度、尤其是商务协商事宜无法准确把握；</li>\n<li>后续迭代的开发活动是在前导迭代基础上进行修改和扩展的，这容易让后续迭代忽略设计分析与设计工作，蜕变为构建 - 修复方式。</li>\n</ol>\n<p>适用与不稳定领域的大规模软件系统开发</p>\n<h3 id=\"题型-5\"><a class=\"anchor\" href=\"#题型-5\">#</a> 题型</h3>\n<p><img data-src=\"https://quasdo.oss-cn-hangzhou.aliyuncs.com/img/image-20230616110333210.png\" alt=\"image-20230616110333210\" /></p>\n<h3 id=\"例题-9\"><a class=\"anchor\" href=\"#例题-9\">#</a> 例题</h3>\n",
            "tags": [
                "NJUSE",
                "软件工程与计算二",
                "软件工程与计算二"
            ]
        }
    ]
}
{
    "version": "https://jsonfeed.org/version/1",
    "title": "Carpe diem",
    "subtitle": "pluck the day",
    "icon": "https://quas-modo.github.io/undergraduate/images/favicon.ico",
    "description": "notes/thoughts/nonsense",
    "home_page_url": "https://quas-modo.github.io/undergraduate",
    "items": [
        {
            "id": "https://quas-modo.github.io/undergraduate/2023/06/21/NJUSE/%E6%95%B0%E6%8D%AE%E7%AE%A1%E7%90%86%E5%9F%BA%E7%A1%80%E7%AE%80%E7%AD%94%E6%95%B4%E7%90%86/",
            "url": "https://quas-modo.github.io/undergraduate/2023/06/21/NJUSE/%E6%95%B0%E6%8D%AE%E7%AE%A1%E7%90%86%E5%9F%BA%E7%A1%80%E7%AE%80%E7%AD%94%E6%95%B4%E7%90%86/",
            "title": "数据管理基础简答整理",
            "date_published": "2023-06-21T06:49:06.000Z",
            "content_html": "<p>数据库简答题押题整理，主要来源是课后习题。</p>\n<p><span id=\"more\"></span></p>\n<h2 id=\"数据管理基础简答题整理\"><a class=\"anchor\" href=\"#数据管理基础简答题整理\">#</a> 《数据管理基础》简答题整理</h2>\n<h3 id=\"第一章\"><a class=\"anchor\" href=\"#第一章\">#</a> 第一章</h3>\n<h4 id=\"什么是数据库有什么基本特点\"><a class=\"anchor\" href=\"#什么是数据库有什么基本特点\">#</a> 什么是数据库，有什么基本特点</h4>\n<p>数据库是长期储存在计算机内、有组织的、可共享的大量数据的集合。</p>\n<ul>\n<li><strong>基本特点</strong>\n<ul>\n<li>\n<p>数据结构化</p>\n<ul>\n<li>数据内部结构化</li>\n<li>数据之间具有联系，整体是结构化的</li>\n</ul>\n</li>\n<li>\n<p>数据的共享性高，冗余度低且易扩充</p>\n</li>\n<li>\n<p>数据独立性高</p>\n<ul>\n<li>数据和程序相互不依赖</li>\n<li>物理独立性\n<ul>\n<li>数据库存储结构（物理结构）改变，管理员对模式 / 内模式映像作改变，可以使模式不变、外模式不变</li>\n</ul>\n</li>\n<li>逻辑独立性\n<ul>\n<li>模式（逻辑结构）改变，管理员对各个外模式 / 模式的映像作相应改变，可以使外模式保持不变，应用程序不变。</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<p>数据由数据管理系统（DBMS）统一管理和控制</p>\n<ul>\n<li>安全性保护</li>\n<li>完整性检查</li>\n<li>并发控制</li>\n<li>数据库恢复</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h4 id=\"为什么要使用数据库系统使用数据库系统的而好处\"><a class=\"anchor\" href=\"#为什么要使用数据库系统使用数据库系统的而好处\">#</a> 为什么要使用数据库系统？/ 使用数据库系统的而好处</h4>\n<p><img data-src=\"https://quasdo.oss-cn-hangzhou.aliyuncs.com/img/image-20230612194832083.png\" alt=\"image-20230612194832083\" /></p>\n<h4 id=\"跟人工管理和文件系统比较说明数据库管理数据的特点\"><a class=\"anchor\" href=\"#跟人工管理和文件系统比较说明数据库管理数据的特点\">#</a> 跟人工管理和文件系统比较，说明数据库管理数据的特点。</h4>\n<p><img data-src=\"https://peng-img.oss-cn-shanghai.aliyuncs.com/markdown-img/image-20220618151823240.png\" alt=\"image-20220618151823240\" /></p>\n<p><img data-src=\"https://quasdo.oss-cn-hangzhou.aliyuncs.com/img/image-20220618151837106.png\" alt=\"image-20220618151837106\" /></p>\n<h4 id=\"逻辑模型的分类-特点以及优缺点\"><a class=\"anchor\" href=\"#逻辑模型的分类-特点以及优缺点\">#</a> 逻辑模型的分类、特点以及优缺点</h4>\n<ol>\n<li>\n<p>层次模型</p>\n<p><img data-src=\"https://quasdo.oss-cn-hangzhou.aliyuncs.com/img/image-20230612200708933.png\" alt=\"image-20230612200708933\" /></p>\n<p><img data-src=\"https://quasdo.oss-cn-hangzhou.aliyuncs.com/img/image-20230612200848830.png\" alt=\"image-20230612200848830\" /></p>\n</li>\n<li>\n<p>网状模型</p>\n<p><img data-src=\"https://quasdo.oss-cn-hangzhou.aliyuncs.com/img/image-20230612200735665.png\" alt=\"image-20230612200735665\" /></p>\n<p><img data-src=\"https://quasdo.oss-cn-hangzhou.aliyuncs.com/img/image-20230612200909254.png\" alt=\"image-20230612200909254\" /></p>\n</li>\n<li>\n<p>关系模型</p>\n<p>关系模型必须是规范化的：比如，关系的每个分量必须是一个不可分的数据项</p>\n<p><img data-src=\"https://quasdo.oss-cn-hangzhou.aliyuncs.com/img/image-20230612201155877.png\" alt=\"image-20230612201155877\" /></p>\n<p><strong>关系模型的优缺点</strong></p>\n<p>（要知道，可能会考简答，后面的 nosql 跟关系型数据库的对比也提到了这个知识点）</p>\n<p><img data-src=\"https://quasdo.oss-cn-hangzhou.aliyuncs.com/img/image-20230612201118327.png\" alt=\"image-20230612201118327\" /></p>\n</li>\n</ol>\n<h4 id=\"简述数据库三级模式和两级映像的作用和地位\"><a class=\"anchor\" href=\"#简述数据库三级模式和两级映像的作用和地位\">#</a> 简述数据库三级模式和两级映像的作用和地位。</h4>\n<p><img data-src=\"https://quasdo.oss-cn-hangzhou.aliyuncs.com/img/image-20230613155433985.png\" alt=\"image-20230613155433985\" /></p>\n<p>分别阐释意思，且强调保证了逻辑独立性和物理独立性，外模式保证了一定的数据库安全性。</p>\n<h4 id=\"数据库系统组成\"><a class=\"anchor\" href=\"#数据库系统组成\">#</a> 数据库系统组成</h4>\n<p><img data-src=\"https://quasdo.oss-cn-hangzhou.aliyuncs.com/img/image-20230613160301035.png\" alt=\"image-20230613160301035\" /></p>\n<h3 id=\"第二章\"><a class=\"anchor\" href=\"#第二章\">#</a> 第二章</h3>\n<h4 id=\"关系模型的三个组成部分\"><a class=\"anchor\" href=\"#关系模型的三个组成部分\">#</a> 关系模型的三个组成部分</h4>\n<ol>\n<li>关系数据结构</li>\n<li>关系操作集合</li>\n<li>关系完整性约束</li>\n</ol>\n<h4 id=\"关系的5种基本操作是什么表示其他运算\"><a class=\"anchor\" href=\"#关系的5种基本操作是什么表示其他运算\">#</a> 关系的 5 种基本操作是什么，表示其他运算</h4>\n<p>选择、投影、并、差、笛卡尔积</p>\n<p><img data-src=\"https://quasdo.oss-cn-hangzhou.aliyuncs.com/img/image-20230613161848201.png\" alt=\"image-20230613161848201\" /></p>\n<h4 id=\"关系模型的完整性约束\"><a class=\"anchor\" href=\"#关系模型的完整性约束\">#</a> 关系模型的完整性约束</h4>\n<p><img data-src=\"https://quasdo.oss-cn-hangzhou.aliyuncs.com/img/image-20230613161727700.png\" alt=\"image-20230613161727700\" /></p>\n<h4 id=\"等值连接与自然连接的区别与联系\"><a class=\"anchor\" href=\"#等值连接与自然连接的区别与联系\">#</a> 等值连接与自然连接的区别与联系</h4>\n<p><img data-src=\"https://quasdo.oss-cn-hangzhou.aliyuncs.com/img/image-20230613161822008.png\" alt=\"image-20230613161822008\" /></p>\n<h3 id=\"第三章\"><a class=\"anchor\" href=\"#第三章\">#</a> 第三章</h3>\n<h4 id=\"什么是基本表什么是视图两者的区别与联系\"><a class=\"anchor\" href=\"#什么是基本表什么是视图两者的区别与联系\">#</a> 什么是基本表，什么是视图，两者的区别与联系</h4>\n<p><img data-src=\"https://quasdo.oss-cn-hangzhou.aliyuncs.com/img/image-20230613161253604.png\" alt=\"image-20230613161253604\" /></p>\n<h4 id=\"restrictcascade\"><a class=\"anchor\" href=\"#restrictcascade\">#</a> RESTRICT/CASCADE</h4>\n<p><img data-src=\"https://quasdo.oss-cn-hangzhou.aliyuncs.com/img/image-20230613161329718.png\" alt=\"image-20230613161329718\" /></p>\n<h4 id=\"视图有什么作用\"><a class=\"anchor\" href=\"#视图有什么作用\">#</a> 视图有什么作用</h4>\n<ol>\n<li>视图能简化用户的操作</li>\n<li>视图使用户能以多种视角看待同一数据</li>\n<li>视图对重构数据库提供了一定程度的逻辑独立性</li>\n<li>视图能够对机密数据提供安全保护</li>\n<li>适当的利用视图可以更清晰地表达查询</li>\n</ol>\n<h4 id=\"哪些视图可以被更新\"><a class=\"anchor\" href=\"#哪些视图可以被更新\">#</a> 哪些视图可以被更新</h4>\n<p><img data-src=\"https://quasdo.oss-cn-hangzhou.aliyuncs.com/img/image-20230613161355686.png\" alt=\"image-20230613161355686\" /></p>\n<h3 id=\"第四章\"><a class=\"anchor\" href=\"#第四章\">#</a> 第四章</h3>\n<h4 id=\"实现数据库安全性的常用技术和方法\"><a class=\"anchor\" href=\"#实现数据库安全性的常用技术和方法\">#</a> 实现数据库安全性的常用技术和方法</h4>\n<p><img data-src=\"https://quasdo.oss-cn-hangzhou.aliyuncs.com/img/image-20230613160948885.png\" alt=\"image-20230613160948885\" /></p>\n<h4 id=\"什么是数据库的自主存取控制方法dac-discretionary-access-control和强制存取控制方法mac\"><a class=\"anchor\" href=\"#什么是数据库的自主存取控制方法dac-discretionary-access-control和强制存取控制方法mac\">#</a> 什么是数据库的自主存取控制方法（DAC Discretionary Access Control）和强制存取控制方法 MAC</h4>\n<p><img data-src=\"https://quasdo.oss-cn-hangzhou.aliyuncs.com/img/image-20230621145015033.png\" alt=\"image-20230621145015033\" /></p>\n<h4 id=\"解释mac机制中的主体-客体-敏感度标记\"><a class=\"anchor\" href=\"#解释mac机制中的主体-客体-敏感度标记\">#</a> 解释 MAC 机制中的主体、客体、敏感度标记</h4>\n<p><img data-src=\"https://quasdo.oss-cn-hangzhou.aliyuncs.com/img/image-20230613161044991.png\" alt=\"image-20230613161044991\" /></p>\n<h4 id=\"什么是数据库的审计功能为什么要提供审计功能\"><a class=\"anchor\" href=\"#什么是数据库的审计功能为什么要提供审计功能\">#</a> 什么是数据库的审计功能，为什么要提供审计功能</h4>\n<p><img data-src=\"https://quasdo.oss-cn-hangzhou.aliyuncs.com/img/image-20230621145028463.png\" alt=\"image-20230621145028463\" /></p>\n<h3 id=\"第五章\"><a class=\"anchor\" href=\"#第五章\">#</a> 第五章</h3>\n<h4 id=\"安全性vs完整性\"><a class=\"anchor\" href=\"#安全性vs完整性\">#</a> 安全性 vs 完整性</h4>\n<p><img data-src=\"https://quasdo.oss-cn-hangzhou.aliyuncs.com/img/image-20230613162228256.png\" alt=\"image-20230613162228256\" /></p>\n<p><img data-src=\"https://quasdo.oss-cn-hangzhou.aliyuncs.com/img/image-20230613162233873.png\" alt=\"image-20230613162233873\" /></p>\n<h4 id=\"dbms完整性控制体现在哪三个方面\"><a class=\"anchor\" href=\"#dbms完整性控制体现在哪三个方面\">#</a> DBMS 完整性控制体现在哪三个方面</h4>\n<p><img data-src=\"https://quasdo.oss-cn-hangzhou.aliyuncs.com/img/image-20230613162255287.png\" alt=\"image-20230613162255287\" /></p>\n<p><img data-src=\"https://quasdo.oss-cn-hangzhou.aliyuncs.com/img/image-20230613162310887.png\" alt=\"image-20230613162310887\" /></p>\n<h3 id=\"第六章\"><a class=\"anchor\" href=\"#第六章\">#</a> 第六章</h3>\n<h4 id=\"简述规范化理论对数据库设计的指导意义\"><a class=\"anchor\" href=\"#简述规范化理论对数据库设计的指导意义\">#</a> 简述规范化理论对数据库设计的指导意义</h4>\n<p><strong>习题解答</strong>：规范化理论为数据库设计人员判断关系模式优劣提供了理论标准，可用以指导关系数据模型的优化，用来预测模式可能出现的问题，为设计人员提供了自动产生各种模式的算法工具，使数据库设计工作有了严格的理论基础。</p>\n<ol>\n<li>\n<p>在数据分析阶段，用数据依赖的概念分析和表示各项数据项之间的关系；</p>\n</li>\n<li>\n<p>在设计概念结构阶段，用规范化理论消除初步 E-R 图冗余的联系。</p>\n</li>\n<li>\n<p>在 E-R 图向数据模型转化阶段，用模式分解的概念和方法指导设计。</p>\n</li>\n</ol>\n<h3 id=\"第七章-数据库设计\"><a class=\"anchor\" href=\"#第七章-数据库设计\">#</a> 第七章 数据库设计</h3>\n<h4 id=\"简要描述数据库设计的6个阶段\"><a class=\"anchor\" href=\"#简要描述数据库设计的6个阶段\">#</a> 简要描述数据库设计的 6 个阶段</h4>\n<p><img data-src=\"https://quasdo.oss-cn-hangzhou.aliyuncs.com/img/image-20220613220014932.png\" alt=\"image-20220613220014932\" /></p>\n<ol>\n<li>\n<p>需求分析</p>\n</li>\n<li>\n<p>概念结构设计</p>\n<p><img data-src=\"https://quasdo.oss-cn-hangzhou.aliyuncs.com/img/image-20230613162629829.png\" alt=\"image-20230613162629829\" /></p>\n</li>\n<li>\n<p>逻辑结构设计</p>\n<p><img data-src=\"https://quasdo.oss-cn-hangzhou.aliyuncs.com/img/image-20230613162657428.png\" alt=\"image-20230613162657428\" /></p>\n</li>\n<li>\n<p>物理结构设计</p>\n<p><img data-src=\"https://quasdo.oss-cn-hangzhou.aliyuncs.com/img/image-20230613162711134.png\" alt=\"image-20230613162711134\" /></p>\n</li>\n<li>\n<p>数据库实施</p>\n</li>\n<li>\n<p>数据库运行和维护</p>\n</li>\n</ol>\n<h4 id=\"尝试叙述数据库设计过程中形成的数据库模式\"><a class=\"anchor\" href=\"#尝试叙述数据库设计过程中形成的数据库模式\">#</a> 尝试叙述数据库设计过程中形成的数据库模式</h4>\n<p><img data-src=\"https://quasdo.oss-cn-hangzhou.aliyuncs.com/img/image-20220615194236256.png\" alt=\"img\" /></p>\n<p><img data-src=\"https://quasdo.oss-cn-hangzhou.aliyuncs.com/img/image-20230613162454170.png\" alt=\"image-20230613162454170\" /></p>\n<h4 id=\"简述逻辑模型设计中水平分解和垂直分解的原理\"><a class=\"anchor\" href=\"#简述逻辑模型设计中水平分解和垂直分解的原理\">#</a> 简述逻辑模型设计中，水平分解和垂直分解的原理。</h4>\n<p>水平分解</p>\n<ul>\n<li>把（基本）关系的元组分为若干子集合，定义每个子集合为一个子关系</li>\n<li>对符合”80/20“原则的，把经常被使用的数据分解出来，形成一个子关系</li>\n<li>水平分解为若干子关系，使每个事务存取的数据对应于一个子关系</li>\n</ul>\n<p>垂直分解</p>\n<ul>\n<li>经常在一起使用的属性从 R 中分解出来形成一个子关系模式</li>\n<li>优点：提高某些事物的效率</li>\n<li>缺点：连接操作可能降低效率</li>\n</ul>\n<h4 id=\"数据字典中都存放了哪些内容需求分析阶段\"><a class=\"anchor\" href=\"#数据字典中都存放了哪些内容需求分析阶段\">#</a> 数据字典中都存放了哪些内容（需求分析阶段）</h4>\n<ol>\n<li>数据项</li>\n<li>数据结构</li>\n<li>数据流</li>\n<li>数据存储</li>\n<li>处理过程</li>\n</ol>\n<p><img data-src=\"https://quasdo.oss-cn-hangzhou.aliyuncs.com/img/image-20230613162606339.png\" alt=\"image-20230613162606339\" /></p>\n<h4 id=\"数据库的再组织和重构造\"><a class=\"anchor\" href=\"#数据库的再组织和重构造\">#</a> 数据库的再组织和重构造</h4>\n<p><img data-src=\"https://quasdo.oss-cn-hangzhou.aliyuncs.com/img/image-20230613162919785.png\" alt=\"image-20230613162919785\" /></p>\n<h3 id=\"第十章-数据库恢复技术\"><a class=\"anchor\" href=\"#第十章-数据库恢复技术\">#</a> 第十章 数据库恢复技术</h3>\n<h4 id=\"什么是事务的acid特性\"><a class=\"anchor\" href=\"#什么是事务的acid特性\">#</a> 什么是事务的 ACID 特性</h4>\n<ol>\n<li>原子性 (Atomicity)</li>\n<li>一致性 (Consistency)</li>\n<li>隔离性 (Isolation)</li>\n<li>持续性 (Durability)</li>\n</ol>\n<p>故障恢复可以保证事物的原子性和持续性</p>\n<p><img data-src=\"https://quasdo.oss-cn-hangzhou.aliyuncs.com/img/image-20230613163046626.png\" alt=\"image-20230613163046626\" /></p>\n<h4 id=\"什么是日志文件有什么用途\"><a class=\"anchor\" href=\"#什么是日志文件有什么用途\">#</a> 什么是日志文件，有什么用途</h4>\n<p>日志文件是用来记录事务对数据库更新操作的文件</p>\n<p>用途：</p>\n<ol>\n<li>进行事务故障恢复</li>\n<li>进行系统故障恢复</li>\n<li>协助后备副本进行介质故障恢复</li>\n</ol>\n<h4 id=\"登记日志文件时为什么要先写日志文件再写数据库\"><a class=\"anchor\" href=\"#登记日志文件时为什么要先写日志文件再写数据库\">#</a> 登记日志文件时，为什么要先写日志文件再写数据库</h4>\n<p><img data-src=\"https://quasdo.oss-cn-hangzhou.aliyuncs.com/img/image-20230613163154594.png\" alt=\"image-20230613163154594\" /></p>\n<ul>\n<li>写数据库和写日志文件是两个不同的操作</li>\n<li>在这两个操作之间可能发生故障</li>\n<li>如果先写了数据库修改，而在日志文件中没有登记下这个修改，则以后就无法恢复这个修改了</li>\n<li>如果先写日志，但没有修改数据库，按日志文件恢复时只不过多执行了一次不必要的 UNDO 操作，并不会影响数据库的正确性</li>\n</ul>\n<h4 id=\"针对不同的故障试给出恢复的策略和方法\"><a class=\"anchor\" href=\"#针对不同的故障试给出恢复的策略和方法\">#</a> 针对不同的故障，试给出恢复的策略和方法</h4>\n<p><img data-src=\"https://quasdo.oss-cn-hangzhou.aliyuncs.com/img/image-20230621145111957.png\" alt=\"image-20230621145111957\" /></p>\n<h4 id=\"什么是检查点记录\"><a class=\"anchor\" href=\"#什么是检查点记录\">#</a> 什么是检查点记录</h4>\n<p><img data-src=\"https://quasdo.oss-cn-hangzhou.aliyuncs.com/img/image-20230613163233337.png\" alt=\"image-20230613163233337\" /></p>\n<p><img data-src=\"https://quasdo.oss-cn-hangzhou.aliyuncs.com/img/image-20230613163240311.png\" alt=\"image-20230613163240311\" /></p>\n<p><img data-src=\"https://quasdo.oss-cn-hangzhou.aliyuncs.com/img/image-20230614090130363.png\" alt=\"image-20230614090130363\" /></p>\n<h4 id=\"具有检查点的恢复技术有什么优点\"><a class=\"anchor\" href=\"#具有检查点的恢复技术有什么优点\">#</a> 具有检查点的恢复技术有什么优点</h4>\n<p><img data-src=\"https://quasdo.oss-cn-hangzhou.aliyuncs.com/img/image-20230613163258781.png\" alt=\"image-20230613163258781\" /></p>\n<h4 id=\"试述使用检查点方法进行恢复的步骤\"><a class=\"anchor\" href=\"#试述使用检查点方法进行恢复的步骤\">#</a> 试述使用检查点方法进行恢复的步骤</h4>\n<p><img data-src=\"https://quasdo.oss-cn-hangzhou.aliyuncs.com/img/image-20230613163328204.png\" alt=\"image-20230613163328204\" /></p>\n<p><img data-src=\"https://quasdo.oss-cn-hangzhou.aliyuncs.com/img/image-20230613163338578.png\" alt=\"image-20230613163338578\" /></p>\n<h4 id=\"什么是数据库镜像它有什么用途\"><a class=\"anchor\" href=\"#什么是数据库镜像它有什么用途\">#</a> 什么是数据库镜像？它有什么用途？</h4>\n<p><img data-src=\"https://quasdo.oss-cn-hangzhou.aliyuncs.com/img/image-20230613163400447.png\" alt=\"image-20230613163400447\" /></p>\n<h3 id=\"第十一章-并发控制\"><a class=\"anchor\" href=\"#第十一章-并发控制\">#</a> 第十一章 并发控制</h3>\n<h4 id=\"为什么要并发控制并发控制技术能保证事物的哪些特性\"><a class=\"anchor\" href=\"#为什么要并发控制并发控制技术能保证事物的哪些特性\">#</a> 为什么要并发控制？并发控制技术能保证事物的哪些特性？</h4>\n<p><img data-src=\"https://quasdo.oss-cn-hangzhou.aliyuncs.com/img/image-20230613163524111.png\" alt=\"image-20230613163524111\" /></p>\n<h4 id=\"并发导致哪几种数据不一致如何避免\"><a class=\"anchor\" href=\"#并发导致哪几种数据不一致如何避免\">#</a> 并发导致哪几种数据不一致？如何避免？</h4>\n<p><img data-src=\"https://quasdo.oss-cn-hangzhou.aliyuncs.com/img/image-20230613163601955.png\" alt=\"image-20230613163601955\" /></p>\n<h4 id=\"什么是封锁锁的类型有哪几种\"><a class=\"anchor\" href=\"#什么是封锁锁的类型有哪几种\">#</a> 什么是封锁？锁的类型有哪几种？</h4>\n<p><img data-src=\"https://quasdo.oss-cn-hangzhou.aliyuncs.com/img/image-20230613163648322.png\" alt=\"image-20230613163648322\" /></p>\n<p><img data-src=\"https://quasdo.oss-cn-hangzhou.aliyuncs.com/img/image-20230613163652599.png\" alt=\"image-20230613163652599\" /></p>\n<h4 id=\"什么是活锁试述活锁的产生原因和解决方法\"><a class=\"anchor\" href=\"#什么是活锁试述活锁的产生原因和解决方法\">#</a> 什么是活锁？试述活锁的产生原因和解决方法</h4>\n<p><img data-src=\"https://quasdo.oss-cn-hangzhou.aliyuncs.com/img/image-20230613202022484.png\" alt=\"image-20230613202022484\" /></p>\n<p><img data-src=\"https://quasdo.oss-cn-hangzhou.aliyuncs.com/img/image-20230613202034971.png\" alt=\"image-20230613202034971\" /></p>\n<h4 id=\"什么是死锁请给出预防死锁的若干方法\"><a class=\"anchor\" href=\"#什么是死锁请给出预防死锁的若干方法\">#</a> 什么是死锁？请给出预防死锁的若干方法</h4>\n<p><img data-src=\"https://quasdo.oss-cn-hangzhou.aliyuncs.com/img/image-20230613202106810.png\" alt=\"image-20230613202106810\" /></p>\n<h4 id=\"请给出检测死锁的一种方法当发生死锁后如何解除死锁\"><a class=\"anchor\" href=\"#请给出检测死锁的一种方法当发生死锁后如何解除死锁\">#</a> 请给出检测死锁的一种方法，当发生死锁后如何解除死锁？</h4>\n<p><img data-src=\"https://quasdo.oss-cn-hangzhou.aliyuncs.com/img/image-20230613202151951.png\" alt=\"image-20230613202151951\" /></p>\n<p><img data-src=\"https://quasdo.oss-cn-hangzhou.aliyuncs.com/img/image-20230613202159150.png\" alt=\"image-20230613202159150\" /></p>\n<h4 id=\"什么样的并发调度是正确的调度\"><a class=\"anchor\" href=\"#什么样的并发调度是正确的调度\">#</a> 什么样的并发调度是正确的调度？</h4>\n<p><img data-src=\"https://quasdo.oss-cn-hangzhou.aliyuncs.com/img/image-20230613202227437.png\" alt=\"image-20230613202227437\" /></p>\n<h4 id=\"为什么要引进意向锁意向锁的含义是什么\"><a class=\"anchor\" href=\"#为什么要引进意向锁意向锁的含义是什么\">#</a> 为什么要引进意向锁？意向锁的含义是什么</h4>\n<p><img data-src=\"https://quasdo.oss-cn-hangzhou.aliyuncs.com/img/image-20230621145153220.png\" alt=\"image-20230621145153220\" /></p>\n<h4 id=\"常用意向锁及相容矩阵\"><a class=\"anchor\" href=\"#常用意向锁及相容矩阵\">#</a> 常用意向锁及相容矩阵</h4>\n<p><img data-src=\"https://quasdo.oss-cn-hangzhou.aliyuncs.com/img/image-20230613163812552.png\" alt=\"image-20230613163812552\" /></p>\n<h3 id=\"nosql相关\"><a class=\"anchor\" href=\"#nosql相关\">#</a> nosql 相关</h3>\n<h4 id=\"关系型数据库的优缺点\"><a class=\"anchor\" href=\"#关系型数据库的优缺点\">#</a> 关系型数据库的优缺点</h4>\n<p>ppt62</p>\n<p>优点：</p>\n<ol>\n<li>建立在严格的数学概念的基础上</li>\n<li>概念单一\n<ol>\n<li>实体和各类联系都用关系来表示</li>\n<li>对数据的检索结果也是关系</li>\n</ol>\n</li>\n<li>关系模型的存取路径对用户透明\n<ol>\n<li>具有更高的数据独立性，更好的安全保密性</li>\n<li>简化了程序员的工作和数据库开发建立的工作</li>\n</ol>\n</li>\n<li>获取持久化数据\n<ul>\n<li>持久存储大量数据</li>\n</ul>\n</li>\n<li>集成\n<ul>\n<li>并能<strong>共享数据库集成</strong>，<strong>多个应用程序都将数据保存在同一个数据库中</strong>。这样一来，所有应用程序很容易就能使用彼此的数据了</li>\n</ul>\n</li>\n<li>并发\n<ul>\n<li>在面对并发操作时，关系型数据库<strong>提供了 “事务” 机制来控制对其数据的访问</strong></li>\n<li><strong>事务在处理错误时也起到作用</strong>。比如如果事务中途出错，可以通过回滚保证数据不受破坏</li>\n</ul>\n</li>\n<li>近乎标准的模型\n<ul>\n<li>关系型数据库以<strong>近乎标准的方式</strong>提供了<strong>数据模型</strong>。规定了模式，具有更高的数据独立性和安全保密性。</li>\n</ul>\n</li>\n</ol>\n<p>缺点：</p>\n<ol>\n<li>存取路径对用户透明，查询效率往往不如格式化数据模型（NoSQL）</li>\n<li>为提高性能，必须对用户的查询请求进行优化，增加了开发 DBMS 的难度</li>\n</ol>\n<h4 id=\"为什么要引入nosqlnosql的由来\"><a class=\"anchor\" href=\"#为什么要引入nosqlnosql的由来\">#</a> 为什么要引入 NoSQL/NoSQL 的由来</h4>\n<ol>\n<li>NoSQL 在集群问题上，让用户自行决定可用性和一致性的平衡\n<ul>\n<li>关系型数据库使用 ACID 事务来保持整个数据库的一致性，而这种方式本身与集群环境相冲突</li>\n<li>NoSQL 数据库为处理并发及分布问题提供了众多选项。</li>\n</ul>\n</li>\n<li>NoSQL 是无模式的，不需要预先定义值和型，不会发生阻抗失谐的问题\n<ul>\n<li>使用的数据组织形式比 “关系” 更丰富，可包括 &quot;嵌套记录&quot; 或列表等</li>\n<li>阻抗失谐：内存中的数据结构和关系型数据不匹配，每次处理的过程很麻烦</li>\n</ul>\n</li>\n<li>NoSQL 是应用数据库，MySQL 是集成数据库\n<ul>\n<li>应用数据库：内容只由一个应用数据代码库直接访问，可直接管理数据库，与外部通信服务解耦</li>\n<li>集成数据库：集成多个应用程序，操作内容一致的持久数据，需要相互协调，更新数据由数据库负责</li>\n</ul>\n</li>\n</ol>\n<h4 id=\"各种nosql数据库的共同特性\"><a class=\"anchor\" href=\"#各种nosql数据库的共同特性\">#</a> 各种 NoSQL 数据库的共同特性</h4>\n<ol>\n<li>开源分布式的非关系型数据库</li>\n<li>不使用关系模型</li>\n<li>在集群中运行良好</li>\n<li>适用于 21 世纪的互联网公司</li>\n<li>无模式\n<ul>\n<li>不用事先修改结构定义，即可自由添加字段了</li>\n<li>这在处理不规则数据和自定义字段时 非常有用</li>\n</ul>\n</li>\n</ol>\n<h4 id=\"key-value数据库\"><a class=\"anchor\" href=\"#key-value数据库\">#</a> key-value 数据库</h4>\n<ul>\n<li>数据库是如何完成基本存放的想法 / 数据库存放的是什么东西，怎么存的\n<ul>\n<li>是一张简单的哈希表，数据库访问均通过主键来操作</li>\n<li>将聚合看做不透明的整体，只能通过键来查出整个聚合</li>\n</ul>\n</li>\n<li>特点：性能较高，易于扩展</li>\n<li>适合做什么，不适合做什么\n<ul>\n<li>非常适合\n<ul>\n<li>保存会话 (用会话 ID 作为键)</li>\n<li>购物车数据（用 userid 绑定）</li>\n<li>用户配置等信息（本质是因为键值数据库可以存放任意数据结构的数据）</li>\n</ul>\n</li>\n<li>不适合\n<ul>\n<li>数据间（建立）关系</li>\n<li>含有多项操作的事务（kv 数据库不擅长回滚恢复等操作）</li>\n<li>查询数据（无法搜索 value）</li>\n<li>操作关键字集合（一次只能操作一个键）</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h4 id=\"文档数据库\"><a class=\"anchor\" href=\"#文档数据库\">#</a> 文档数据库</h4>\n<ul>\n<li>\n<p>文档格式：XML、JSON、BSON</p>\n</li>\n<li>\n<p>具有自述性、分层的树状数据结构</p>\n</li>\n<li>\n<p>文档彼此相似，但不必完全相同。文档数据库所存放的文档，就相当于键值数据库所存放的 “值”。</p>\n</li>\n<li>\n<p>文档数据库可视为其值可查的键值数据库。</p>\n</li>\n<li>\n<p>特点：性能高，灵活性高</p>\n</li>\n<li>\n<p>适合做什么，不适合做什么</p>\n<ul>\n<li>适用：\n<ul>\n<li>事件记录（数据结构灵活）</li>\n<li>内容管理系统及博客平台（数据结构灵活，支持 JSON）</li>\n<li>网站分析与实时分析（可以只更新部分数据，方便保存浏览量等信息）</li>\n<li>电子商务应用程序（适应较为灵活的模式）</li>\n</ul>\n</li>\n<li>不适用：\n<ul>\n<li>包含多项操作的复杂事务（不适合执行跨文档的原子操作）</li>\n<li>查询持续变化的聚合结构</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h4 id=\"列族数据库\"><a class=\"anchor\" href=\"#列族数据库\">#</a> 列族数据库</h4>\n<ul>\n<li>\n<p>列族数据库，可以存储关键字及其映射值，并且可以把值分成多个列族，让每个列族代表一张数据映射表 (map of data)。</p>\n</li>\n<li>\n<p>每个键值对都占据一列，并且都存有一个 “时间戳” 值。</p>\n</li>\n<li>\n<p>列族数据库的各行不一定要具备完全相同的列，并且可以随意向其中某行加入一列，而不用把它添加到其他行中。</p>\n</li>\n<li>\n<p>特点：易于扩展，易于访问</p>\n</li>\n<li>\n<p>适合做什么，不适合做什么</p>\n<ul>\n<li>适合：事件记录、内容管理系统与博客平台、计数器、限期（利用时间戳 TTL）</li>\n<li>不适合：\n<ul>\n<li><strong>需要以 “ACID 事务” 执行写入及读取操作的系统。</strong></li>\n<li><strong>根据查询结果聚合数据（需要把每一行读到客户端，成本高）</strong></li>\n<li><strong>开发早期或试探某个技术方案（改变查询模式成本高）</strong></li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h4 id=\"图数据库\"><a class=\"anchor\" href=\"#图数据库\">#</a> 图数据库</h4>\n<ul>\n<li>\n<p>数据库是如何完成基本存放的想法</p>\n<ul>\n<li>图数据库可存放实体及实体间关系。</li>\n</ul>\n</li>\n<li>\n<p>数据库存放的是什么东西，怎么存的</p>\n<ul>\n<li>实体也叫 “节点”(node)，它们具有属性 (property)。可将节点视为应用程序中某对象的实例。</li>\n<li>关系又叫 “边”(edge)，它们也有属性，有类型。边具备方向性 ( directional significance)，而节点则按关系组织起来，以便在其中查找所需模式。</li>\n<li>实体和实体间关系组成的有向图（实体作为结点，实体间关系作为边）</li>\n</ul>\n</li>\n<li>\n<p>特点：支持复杂的图形算法，可用于构建复杂的关系图谱</p>\n</li>\n<li>\n<p>适合做什么，不适合做什么</p>\n<ul>\n<li>适合：\n<ul>\n<li>互联数据</li>\n<li>安排运输路线</li>\n<li>分派货物和基于位置的服务</li>\n<li>推荐引擎（结点间关系）</li>\n</ul>\n</li>\n<li>不适合：\n<ul>\n<li>更新全部或某子集内的实体</li>\n<li>图数据库可能没有办法处理数据量过大的场合，即便模型适合</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n",
            "tags": [
                "NJUSE",
                "数据管理基础",
                "数据管理基础"
            ]
        },
        {
            "id": "https://quas-modo.github.io/undergraduate/2023/06/14/NJUSE/%E6%95%B0%E6%8D%AE%E7%AE%A1%E7%90%86%E5%9F%BA%E7%A1%80%E6%9C%9F%E6%9C%AB%E5%A4%8D%E4%B9%A0/",
            "url": "https://quas-modo.github.io/undergraduate/2023/06/14/NJUSE/%E6%95%B0%E6%8D%AE%E7%AE%A1%E7%90%86%E5%9F%BA%E7%A1%80%E6%9C%9F%E6%9C%AB%E5%A4%8D%E4%B9%A0/",
            "title": "数据管理基础期末复习",
            "date_published": "2023-06-14T12:14:57.000Z",
            "content_html": "<p>结合 pjz 学长的笔记做了一些删改。</p>\n<p><span id=\"more\"></span></p>\n<h1 id=\"第1章-绪论\"><a class=\"anchor\" href=\"#第1章-绪论\">#</a> 第 1 章 绪论</h1>\n<blockquote>\n<p>ppt 01-07</p>\n</blockquote>\n<h2 id=\"11-数据库系统概述\"><a class=\"anchor\" href=\"#11-数据库系统概述\">#</a> 1.1 数据库系统概述</h2>\n<h3 id=\"基本概念\"><a class=\"anchor\" href=\"#基本概念\">#</a> 基本概念</h3>\n<ul>\n<li>\n<p>数据 data</p>\n<ul>\n<li><strong>数据库中存储的基本对象</strong>，是描述事物的<strong>符号记录</strong>。</li>\n<li>数据的含义称为语义 **，数据与其语义是不可分的。**\n<ul>\n<li>98 是一个数据</li>\n<li>可能是我的体重、数据库的分数，等等</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<p>数据库 database</p>\n<ul>\n<li>简称 DB</li>\n<li>是<strong>长期储存</strong>在计算机内、<strong>有组织的</strong>、<strong>可共享的</strong>大量数据的集合。</li>\n<li>基本特点\n<ul>\n<li>数<strong>据按一定的数据模型组织、描述和储存</strong></li>\n<li>具有较小的冗余度（redundancy）</li>\n<li>较高的数据独立性（data independency）</li>\n<li>易扩展性（scalability）</li>\n<li>可为各种用户共享</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<p>数据库管理系统 DataBase Management System DBMS</p>\n<ul>\n<li>\n<p>DBMS 的功能（可能出选择）</p>\n<ul>\n<li>定义</li>\n<li>组织、存储和管理</li>\n<li>操纵</li>\n<li>管理事务和运行管理</li>\n<li>建立和维护</li>\n<li>其他，如不同数据库之间的互访和互操作功能</li>\n</ul>\n</li>\n</ul>\n<p><img data-src=\"https://peng-img.oss-cn-shanghai.aliyuncs.com/markdown-img/image-20220618152757727.png\" alt=\"image-20220618152757727\" /></p>\n<p><img data-src=\"https://peng-img.oss-cn-shanghai.aliyuncs.com/markdown-img/image-20220618152804060.png\" alt=\"image-20220618152804060\" /></p>\n<p><img data-src=\"https://peng-img.oss-cn-shanghai.aliyuncs.com/markdown-img/image-20220618152812590.png\" alt=\"image-20220618152812590\" /></p>\n</li>\n<li>\n<p>数据库系统 DataBase System DBS</p>\n<ul>\n<li>\n<p>数据库系统的构成：</p>\n<ul>\n<li>数据库</li>\n<li>数据库管理系统（DBMS，及其应用开发工具）</li>\n<li>应用程序</li>\n<li>数据库管理员（DBA）</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<p><img data-src=\"https://quasdo.oss-cn-hangzhou.aliyuncs.com/img/image-20230606100430739.png\" alt=\"image-20230606100430739\" /></p>\n<h3 id=\"数据库基本特征简答\"><a class=\"anchor\" href=\"#数据库基本特征简答\">#</a> 数据库基本特征【简答】</h3>\n<ol>\n<li>\n<p>数据结构化</p>\n<ul>\n<li>数据内部结构化</li>\n<li>数据之间具有联系，整体是结构化的</li>\n</ul>\n</li>\n<li>\n<p>数据的共享性高，冗余度低且易扩充</p>\n</li>\n<li>\n<p>数据独立性高</p>\n<ul>\n<li>数据和程序相互不依赖</li>\n<li>物理独立性\n<ul>\n<li>数据库存储结构（物理结构）改变，管理员对模式 / 内模式映像作改变，可以使模式不变、外模式不变</li>\n</ul>\n</li>\n<li>逻辑独立性\n<ul>\n<li>模式（逻辑结构）改变，管理员对各个外模式 / 模式的映像作相应改变，可以使外模式保持不变，应用程序不变。</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<p>数据由数据管理系统（DBMS）统一管理和控制</p>\n<ul>\n<li>安全性保护</li>\n<li>完整性检查</li>\n<li>并发控制</li>\n<li>数据库恢复</li>\n</ul>\n</li>\n</ol>\n<h3 id=\"使用数据库系统有什么好处\"><a class=\"anchor\" href=\"#使用数据库系统有什么好处\">#</a> 使用数据库系统有什么好处？</h3>\n<p><img data-src=\"https://quasdo.oss-cn-hangzhou.aliyuncs.com/img/image-20230612194832083.png\" alt=\"image-20230612194832083\" /></p>\n<h3 id=\"数据管理方式对比简答\"><a class=\"anchor\" href=\"#数据管理方式对比简答\">#</a> 数据管理方式对比【简答】</h3>\n<p><img data-src=\"https://peng-img.oss-cn-shanghai.aliyuncs.com/markdown-img/image-20220618151823240.png\" alt=\"image-20220618151823240\" /></p>\n<p><img data-src=\"https://peng-img.oss-cn-shanghai.aliyuncs.com/markdown-img/image-20220618151837106.png\" alt=\"image-20220618151837106\" /></p>\n<h2 id=\"12-数据模型\"><a class=\"anchor\" href=\"#12-数据模型\">#</a> 1.2 数据模型</h2>\n<p><strong>概念</strong>：数据模型是<strong>对现实世界数据特征的抽象，用以抽象、表示和处理现实世界中的数据和信息。</strong></p>\n<p><strong>数据模型的组成要素</strong>：</p>\n<ol>\n<li>数据结构</li>\n<li>数据操作</li>\n<li>数据的完整性约束条件</li>\n</ol>\n<p><strong>分类</strong>：</p>\n<ul>\n<li>概念模型\n<ul>\n<li>按用户的观点来对数据和信息建模，用于数据库设计</li>\n<li>关系和实体</li>\n</ul>\n</li>\n<li>逻辑模型\n<ul>\n<li>按计算机系统的观点对数据建模，用于 DBMS 实现</li>\n<li>主要包括网状模型、层次模型、关系模型、面向对象数据模型、对象关系数据模型、半结构化数据模型等。</li>\n<li>表、索引、逻辑</li>\n</ul>\n</li>\n<li>物理模型\n<ul>\n<li>是对数据最底层的抽象，描述数据在系统内部的表示方式和存取方法。</li>\n<li>mysql 结构，物理设计</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"概念模型\"><a class=\"anchor\" href=\"#概念模型\">#</a> 概念模型</h3>\n<p>用于数据库设计， 用 E-R 图来描述现实世界的概念模型。</p>\n<p>概念：</p>\n<ol>\n<li><strong>实体</strong>\n<ul>\n<li>客观存在并可相互区别的事物称为实体。</li>\n<li>可以是具体的人、事、物或抽象的概念。</li>\n</ul>\n</li>\n<li><strong>属性</strong>\n<ul>\n<li>实体所具有的某一特性称为属性。</li>\n<li>一个实体可以由若干个属性来刻画。</li>\n</ul>\n</li>\n<li><strong>码</strong>\n<ul>\n<li>唯一标识实体的属性集称为码</li>\n</ul>\n</li>\n<li>实体型</li>\n<li>实体集</li>\n<li>联系\n<ul>\n<li>一对一、一对多、多对多</li>\n</ul>\n</li>\n</ol>\n<h4 id=\"概念模型-e-r-图\"><a class=\"anchor\" href=\"#概念模型-e-r-图\">#</a> 概念模型 (<strong>E-R 图</strong>)</h4>\n<p><img data-src=\"https://peng-img.oss-cn-shanghai.aliyuncs.com/markdown-img/image-20220613141148229.png\" alt=\"image-20220613141148229\" /></p>\n<p>当然也有内部的联系<img data-src=\"https://peng-img.oss-cn-shanghai.aliyuncs.com/markdown-img/image-20220618153337416.png\" alt=\"image-20220618153337416\" /></p>\n<p><img data-src=\"https://peng-img.oss-cn-shanghai.aliyuncs.com/markdown-img/image-20220613141227087.png\" alt=\"image-20220613141227087\" /></p>\n<ul>\n<li>联系也可以有属性</li>\n</ul>\n<p><img data-src=\"https://peng-img.oss-cn-shanghai.aliyuncs.com/markdown-img/image-20220619205929354.png\" alt=\"image-20220619205929354\" /></p>\n<ul>\n<li>实例</li>\n</ul>\n<p>&lt;img src=&quot;<span class=\"exturl\" data-url=\"aHR0cHM6Ly9wZW5nLWltZy5vc3MtY24tc2hhbmdoYWkuYWxpeXVuY3MuY29tL21hcmtkb3duLWltZy9pbWFnZS0yMDIyMDYxOTIxMDAxMjQ4OS5wbmc=\">https://peng-img.oss-cn-shanghai.aliyuncs.com/markdown-img/image-20220619210012489.png</span>&quot; alt=&quot;image-20220619210012489&quot;  /&gt;&lt;img src=&quot;<span class=\"exturl\" data-url=\"aHR0cHM6Ly9wZW5nLWltZy5vc3MtY24tc2hhbmdoYWkuYWxpeXVuY3MuY29tL21hcmtkb3duLWltZy9pbWFnZS0yMDIyMDYxOTIxMDAyNjkzMS5wbmc=\">https://peng-img.oss-cn-shanghai.aliyuncs.com/markdown-img/image-20220619210026931.png</span>&quot; alt=&quot;image-20220619210026931&quot;  /&gt;</p>\n<p><img data-src=\"https://peng-img.oss-cn-shanghai.aliyuncs.com/markdown-img/image-20220619210045777.png\" alt=\"image-20220619210045777\" /></p>\n<ul>\n<li>IS-A 联系（考试可能会考）</li>\n</ul>\n<p><img data-src=\"https://peng-img.oss-cn-shanghai.aliyuncs.com/markdown-img/image-20220619210102615.png\" alt=\"image-20220619210102615\" /></p>\n<p><img data-src=\"https://peng-img.oss-cn-shanghai.aliyuncs.com/markdown-img/image-20220619210139138.png\" alt=\"image-20220619210139138\" /></p>\n<p><img data-src=\"https://peng-img.oss-cn-shanghai.aliyuncs.com/markdown-img/image-20220619210155620.png\" alt=\"image-20220619210155620\" /></p>\n<ul>\n<li>Part-of / 独占 / 弱实体</li>\n</ul>\n<p><img data-src=\"https://peng-img.oss-cn-shanghai.aliyuncs.com/markdown-img/image-20220619210343391.png\" alt=\"image-20220619210343391\" /></p>\n<p><img data-src=\"https://peng-img.oss-cn-shanghai.aliyuncs.com/markdown-img/image-20220619210444963.png\" alt=\"image-20220619210444963\" /></p>\n<h3 id=\"逻辑模型\"><a class=\"anchor\" href=\"#逻辑模型\">#</a> 逻辑模型</h3>\n<p><strong>分类</strong>：</p>\n<ol>\n<li>\n<p>层次模型</p>\n<p><img data-src=\"https://quasdo.oss-cn-hangzhou.aliyuncs.com/img/image-20230612200708933.png\" alt=\"image-20230612200708933\" /></p>\n<p><img data-src=\"https://quasdo.oss-cn-hangzhou.aliyuncs.com/img/image-20230612200848830.png\" alt=\"image-20230612200848830\" /></p>\n</li>\n<li>\n<p>网状模型</p>\n<p><img data-src=\"https://quasdo.oss-cn-hangzhou.aliyuncs.com/img/image-20230612200735665.png\" alt=\"image-20230612200735665\" /></p>\n<p><img data-src=\"https://quasdo.oss-cn-hangzhou.aliyuncs.com/img/image-20230612200909254.png\" alt=\"image-20230612200909254\" /></p>\n</li>\n<li>\n<p>关系模型</p>\n<p>关系模型必须是规范化的：比如，关系的每个分量必须是一个不可分的数据项</p>\n<p><img data-src=\"https://quasdo.oss-cn-hangzhou.aliyuncs.com/img/image-20230612201155877.png\" alt=\"image-20230612201155877\" /></p>\n<p><strong>关系模型的优缺点</strong></p>\n<p>（要知道，可能会考简答，后面的 nosql 跟关系型数据库的对比也提到了这个知识点）</p>\n<p><img data-src=\"https://quasdo.oss-cn-hangzhou.aliyuncs.com/img/image-20230612201118327.png\" alt=\"image-20230612201118327\" /></p>\n</li>\n<li>\n<p>面向对象数据模型</p>\n</li>\n</ol>\n<h2 id=\"13-数据库系统的结构\"><a class=\"anchor\" href=\"#13-数据库系统的结构\">#</a> 1.3 数据库系统的结构</h2>\n<p><img data-src=\"https://peng-img.oss-cn-shanghai.aliyuncs.com/markdown-img/image-20220613141759080.png\" alt=\"image-20220613141759080\" /></p>\n<p><img data-src=\"https://peng-img.oss-cn-shanghai.aliyuncs.com/markdown-img/image-20220613141936109.png\" alt=\"image-20220613141936109\" /></p>\n<h3 id=\"三级结构\"><a class=\"anchor\" href=\"#三级结构\">#</a> 三级结构</h3>\n<ul>\n<li>\n<p>三级模式是对数据的三个抽象级别</p>\n</li>\n<li>\n<p>外模式：数据库用户的数据视图，是与某一应用有关的局部数据的逻辑表示</p>\n<p>和模式类似于 VO 和 PO 的关系</p>\n<p><img data-src=\"https://peng-img.oss-cn-shanghai.aliyuncs.com/markdown-img/image-20220618154425091.png\" alt=\"image-20220618154425091\" /></p>\n</li>\n<li>\n<p>模式：数据库中全体数据的逻辑结构和特征的描述</p>\n<ul>\n<li>公共视图</li>\n</ul>\n<p><img data-src=\"https://peng-img.oss-cn-shanghai.aliyuncs.com/markdown-img/image-20220618154358659.png\" alt=\"image-20220618154358659\" /></p>\n</li>\n<li>\n<p>内模式：是数据在数据库内部的表示方式</p>\n<ul>\n<li>唯一</li>\n</ul>\n<p><img data-src=\"https://peng-img.oss-cn-shanghai.aliyuncs.com/markdown-img/image-20220618154349794.png\" alt=\"image-20220618154349794\" /></p>\n</li>\n</ul>\n<h3 id=\"二级映像\"><a class=\"anchor\" href=\"#二级映像\">#</a> 二级映像</h3>\n<h4 id=\"外模式模式映像\"><a class=\"anchor\" href=\"#外模式模式映像\">#</a> 外模式 / 模式映像:</h4>\n<ul>\n<li>一对多的关系</li>\n<li>每一个外模式，数据库系统都有一个外模式／模式映象，定义外模式与模式之间的对应关系</li>\n<li>当模式改变时，数据库管理员对外模式／模式映象作相应改变，使外模式保持不变。应用程序是依据数据的外模式编写的，应用程序不必修改，<strong>保证了数据与程序的逻辑独立性</strong>，简称数据的逻辑独立性。</li>\n</ul>\n<h4 id=\"模式内模式映像\"><a class=\"anchor\" href=\"#模式内模式映像\">#</a> 模式 / 内模式映像：</h4>\n<ul>\n<li>一对一的关系</li>\n<li>模式／内模式映象定义了数据全局逻辑结构与存储结构之间的对应关系。</li>\n<li>当数据库的存储结构改变了（例如选用了另一种存储结构），数据库管理员修改模式／内模式映象，使模式保持不变。应用程序不受影响，<strong>保证了数据与程序的物理独立性</strong>。</li>\n</ul>\n<p><img data-src=\"https://quasdo.oss-cn-hangzhou.aliyuncs.com/img/image-20230612201514043.png\" alt=\"image-20230612201514043\" /></p>\n<h2 id=\"14-数据库系统的组成\"><a class=\"anchor\" href=\"#14-数据库系统的组成\">#</a> 1.4 数据库系统的组成</h2>\n<p>看看就好</p>\n<ul>\n<li>\n<p>组成</p>\n<ul>\n<li>硬件、软件、人员</li>\n</ul>\n<p><img data-src=\"https://peng-img.oss-cn-shanghai.aliyuncs.com/markdown-img/image-20220613143304670.png\" alt=\"image-20220613143304670\" /></p>\n</li>\n</ul>\n<h1 id=\"第2章-关系数据库\"><a class=\"anchor\" href=\"#第2章-关系数据库\">#</a> 第 2 章 关系数据库</h1>\n<blockquote>\n<p>ppt 08-10</p>\n</blockquote>\n<h2 id=\"21-关系数据结构\"><a class=\"anchor\" href=\"#21-关系数据结构\">#</a> 2.1 关系数据结构</h2>\n<ul>\n<li>域</li>\n</ul>\n<p><img data-src=\"https://peng-img.oss-cn-shanghai.aliyuncs.com/markdown-img/image-20220613143856931.png\" alt=\"image-20220613143856931\" /></p>\n<p><img data-src=\"https://peng-img.oss-cn-shanghai.aliyuncs.com/markdown-img/image-20220613144149712.png\" alt=\"image-20220613144149712\" /></p>\n<ul>\n<li>\n<p>笛卡尔积</p>\n<p><img data-src=\"https://peng-img.oss-cn-shanghai.aliyuncs.com/markdown-img/image-20220613143948194.png\" alt=\"image-20220613143948194\" /></p>\n<p><img data-src=\"https://peng-img.oss-cn-shanghai.aliyuncs.com/markdown-img/image-20220613144028213.png\" alt=\"image-20220613144028213\" /></p>\n</li>\n<li>\n<p>关系</p>\n<p><img data-src=\"https://peng-img.oss-cn-shanghai.aliyuncs.com/markdown-img/image-20220618155133689.png\" alt=\"image-20220618155133689\" /></p>\n<ul>\n<li>\n<p>关系的类型：基本关系、查询表（查询结果对应的表）、视图表（虚表）</p>\n</li>\n<li>\n<p>基本关系的性质</p>\n<ul>\n<li>列是同质的：每一列中的分量是同一类型的数据，来自同一个域</li>\n<li>不同的列可出自同一个域，其中的每一列称为一个属性</li>\n<li>列和行的顺序无所谓</li>\n<li>任意两个元组的候选码不能相同</li>\n<li>分量必须取原子值</li>\n</ul>\n<p><strong>关系的每一个分量必须是一个不可分割项</strong></p>\n</li>\n</ul>\n<p><img data-src=\"https://peng-img.oss-cn-shanghai.aliyuncs.com/markdown-img/image-20220613144012518.png\" alt=\"image-20220613144012518\" /></p>\n</li>\n<li>\n<p>码</p>\n</li>\n</ul>\n<p><img data-src=\"https://peng-img.oss-cn-shanghai.aliyuncs.com/markdown-img/image-20220618155103797.png\" alt=\"image-20220618155103797\" /></p>\n<p>​\t这两张表就是<strong>数据</strong><br />\n​\t 而单独的一张表就称为<strong>数据对象</strong>，即人员表是一个<strong>数据对象</strong>，课程表也是一个<strong>数据对象</strong><br />\n而每张表中的每一行就称为<strong>数据元素</strong><br />\n而姓名，性别，身高，课程代号，课程名就称为<strong>数据项</strong></p>\n<ul>\n<li>\n<p>关系模式（型）</p>\n<p><img data-src=\"https://peng-img.oss-cn-shanghai.aliyuncs.com/markdown-img/image-20220618155345995.png\" alt=\"image-20220618155345995\" /></p>\n<p>关系模式是静态的，关系是动态的。关系是关系模式在某一时刻的状态或内容。</p>\n<p><img data-src=\"https://peng-img.oss-cn-shanghai.aliyuncs.com/markdown-img/image-20220613145054448.png\" alt=\"image-20220613145054448\" /></p>\n</li>\n<li>\n<p>关系数据库：所有关系的集合构成一个关系数据库</p>\n<ul>\n<li>关系数据库的型：关系数据库模式，是对关系数据库的描述</li>\n<li>关系数据库的值：关系模式在某一时刻对应的关系的集合，通常称为关系数据库</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"2223-关系操作和完整性\"><a class=\"anchor\" href=\"#2223-关系操作和完整性\">#</a> 2.2&amp;2.3 关系操作和完整性</h2>\n<ul>\n<li>\n<p>查询</p>\n<ul>\n<li><strong>选择、投影、并、差、笛卡尔积</strong>是 5 种基本操作</li>\n</ul>\n</li>\n<li>\n<p>更新</p>\n<ul>\n<li>插入、修改、删除</li>\n</ul>\n</li>\n<li>\n<p><strong>实体完整性</strong>：primary key is <strong>NOT NULL</strong></p>\n<ul>\n<li>若属性（指一个或一组属性）A 是基本关系 R 的主属性，则 A 不能取空值（null value）</li>\n<li>空值就是 “不知道” 或 “不存在” 或 “无意义” 的值</li>\n<li>原因：如果取了空值，就说明存在某个不可标识的实体，即存在不可区分的实体。</li>\n</ul>\n</li>\n<li>\n<p>外码：Foreign Key</p>\n<ul>\n<li>R(K<sub>R</sub>,F, ... ) -&gt; S(K<sub>s</sub>, ...)</li>\n<li><img data-src=\"https://quasdo.oss-cn-hangzhou.aliyuncs.com/img/image-20230609145205507.png\" alt=\"image-20230609145205507\" /></li>\n</ul>\n</li>\n<li>\n<p><strong>参照完整性</strong>: The value of foreign key is <strong>either</strong> NULL <strong>or</strong> in the referenced column<img data-src=\"https://peng-img.oss-cn-shanghai.aliyuncs.com/markdown-img/image-20220618155633343.png\" alt=\"image-20220618155633343\" /></p>\n<ul>\n<li>四种可能被破坏的情况\n<ul>\n<li>SC 表中增加一个元组，该元组的 Sno 属性的值在表 Student 中找不到一个元组，其 Sno 属性的值与之相等。</li>\n<li>修改 SC 表中的一个元组，修改后该元组的 Sno 属性的值在表 Student 中找不到一个元组，其 Sno 属性的值与之相等。</li>\n<li>从 Student 表中删除一个元组，造成 SC 表中某些元组的 Sno 属性的值在表 Student 中找不到一个元组，其 Sno 属性的值与之相等。</li>\n<li>修改 Student 表中一个元组的 Sno 属性，造成 SC 表中某些元组的 Sno 属性的值在表 Student 中找不到一个元组，其 Sno 属性的值与之相等 。</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<p><img data-src=\"https://peng-img.oss-cn-shanghai.aliyuncs.com/markdown-img/image-20220618171654106.png\" alt=\"image-20220618171654106\" /></p>\n<ul>\n<li><strong>用户定义的完整性</strong>：应用领域需要遵循的约束条件，体现了<strong>具体领域中的语义约束</strong>（就是字面意思）\n<ul>\n<li>比如学生不能没有姓名</li>\n<li>成绩的取值范围定义在 0-100 之间</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"24-关系代数重点\"><a class=\"anchor\" href=\"#24-关系代数重点\">#</a> 2.4 关系代数（重点）</h2>\n<p><em>见 ppt ch10 或第五版课本 P47，做往年题和课后题！</em></p>\n<p><img data-src=\"https://peng-img.oss-cn-shanghai.aliyuncs.com/markdown-img/image-20220618155915523.png\" alt=\"image-20220618155915523\" /></p>\n<ul>\n<li>\n<p><strong>选择、投影、并、差、笛卡尔积</strong>是 5 种基本操作</p>\n</li>\n<li>\n<p>集合运算符从行的角度看，专门的关系运算符可从行、列的角度看</p>\n</li>\n<li>\n<p>选择、差、交、并是从行的角度来看，投影是从列的角度来看</p>\n<ul>\n<li>差是减去相同的行</li>\n<li>投影包含<strong>去重</strong>操作</li>\n</ul>\n</li>\n<li>\n<p>除和自然连接是在行、列的角度上看</p>\n</li>\n<li>\n<p>连接绝大多数是自然连接</p>\n<ul>\n<li>自然连接：一种特殊的等值连接，两个关系中比较的分量必须是<strong>相同的属性组</strong>，且在结果中把重复的属性去掉（<strong>去掉重复列</strong>）</li>\n</ul>\n</li>\n<li>\n<p>悬浮元组</p>\n<ul>\n<li>两个关系 R 和 S 在做自然连接时，关系 R 中某些元组有可能在 S 中不存在公共属性上值相等的元组，从而造成 R 中这些元组在操作时被舍弃了，这些被舍弃的元组称为悬浮元组。</li>\n</ul>\n</li>\n<li>\n<p>外连接</p>\n<ul>\n<li>如果把悬浮元组也保存在结果关系中，而在其他属性上填空值 (Null)，就叫做外连接</li>\n<li>左外连接 (LEFT OUTER JOIN 或 LEFT JOIN)\n<ul>\n<li>只保留左边关系 R 中的悬浮元组</li>\n</ul>\n</li>\n<li>右外连接 (RIGHT OUTER JOIN 或 RIGHT JOIN)\n<ul>\n<li>只保留右边关系 S 中的悬浮元组</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<p>&lt;img src=&quot;<span class=\"exturl\" data-url=\"aHR0cHM6Ly9wZW5nLWltZy5vc3MtY24tc2hhbmdoYWkuYWxpeXVuY3MuY29tL21hcmtkb3duLWltZy9pbWFnZS0yMDIyMDYxODE2MDM1ODg4MS5wbmc=\">https://peng-img.oss-cn-shanghai.aliyuncs.com/markdown-img/image-20220618160358881.png</span>&quot; alt=&quot;image-20220618160358881&quot; style=&quot;zoom:50%;&quot; /&gt;&lt;img src=&quot;<span class=\"exturl\" data-url=\"aHR0cHM6Ly9wZW5nLWltZy5vc3MtY24tc2hhbmdoYWkuYWxpeXVuY3MuY29tL21hcmtkb3duLWltZy9pbWFnZS0yMDIyMDYxODE2MDQyODk2OC5wbmc=\">https://peng-img.oss-cn-shanghai.aliyuncs.com/markdown-img/image-20220618160428968.png</span>&quot; alt=&quot;image-20220618160428968&quot; style=&quot;zoom:50%;&quot; /&gt;</p>\n<ul>\n<li>除运算</li>\n</ul>\n<p>&lt;img src=&quot;<span class=\"exturl\" data-url=\"aHR0cHM6Ly9wZW5nLWltZy5vc3MtY24tc2hhbmdoYWkuYWxpeXVuY3MuY29tL21hcmtkb3duLWltZy9pbWFnZS0yMDIyMDYxODE2MDcyNTAxMi5wbmc=\">https://peng-img.oss-cn-shanghai.aliyuncs.com/markdown-img/image-20220618160725012.png</span>&quot; alt=&quot;image-20220618160725012&quot; style=&quot;zoom:50%;&quot; /&gt;&lt;img src=&quot;<span class=\"exturl\" data-url=\"aHR0cHM6Ly9wZW5nLWltZy5vc3MtY24tc2hhbmdoYWkuYWxpeXVuY3MuY29tL21hcmtkb3duLWltZy9pbWFnZS0yMDIyMDYxODE2MDgxMDkwMS5wbmc=\">https://peng-img.oss-cn-shanghai.aliyuncs.com/markdown-img/image-20220618160810901.png</span>&quot; alt=&quot;image-20220618160810901&quot; style=&quot;zoom:50%;&quot; /&gt;</p>\n<h1 id=\"第3章-关系数据库语言sql\"><a class=\"anchor\" href=\"#第3章-关系数据库语言sql\">#</a> 第 3 章 关系数据库语言 SQL</h1>\n<blockquote>\n<p>ppt 11-22</p>\n</blockquote>\n<h2 id=\"31-33-概述和数据定义操作直接看书\"><a class=\"anchor\" href=\"#31-33-概述和数据定义操作直接看书\">#</a> 3.1 - 3.3 概述和数据定义（操作直接看书）</h2>\n<ul>\n<li>\n<p>SQL Structured Query Language 结构化查询语言</p>\n</li>\n<li>\n<p>SQL 特点</p>\n<ul>\n<li><strong>综合统一</strong></li>\n<li><strong>高度非过程化</strong></li>\n<li><strong>面向集合的操作方式</strong></li>\n<li>以一种语法结构提供多种使用方式</li>\n<li>语言间接，易学易用</li>\n</ul>\n</li>\n<li>\n<table>\n<thead>\n<tr>\n<th>SQL 功能</th>\n<th>动词</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>数据查询</td>\n<td>SELECT</td>\n</tr>\n<tr>\n<td>数据定义</td>\n<td>CREATE, DROP, ALTER</td>\n</tr>\n<tr>\n<td>数据操纵</td>\n<td>INSERT, UPDATE, DELETE</td>\n</tr>\n<tr>\n<td>数据控制</td>\n<td>GRANT, REVOKE</td>\n</tr>\n</tbody>\n</table>\n<p><img data-src=\"https://quasdo.oss-cn-hangzhou.aliyuncs.com/img/image-20230609171534179.png\" alt=\"image-20230609171534179\" /></p>\n</li>\n<li>\n<p><img data-src=\"https://quasdo.oss-cn-hangzhou.aliyuncs.com/img/image-20230609171423158.png\" alt=\"image-20230609171423158\" /></p>\n</li>\n<li>\n<p>层次化的数据库对象命名机制</p>\n</li>\n</ul>\n<p><img data-src=\"https://peng-img.oss-cn-shanghai.aliyuncs.com/markdown-img/image-20220618161355132.png\" alt=\"image-20220618161355132\" /></p>\n<ul>\n<li>Drop 的 Restrict 和 Cascade</li>\n</ul>\n<p><img data-src=\"https://peng-img.oss-cn-shanghai.aliyuncs.com/markdown-img/image-20220618161502660.png\" alt=\"image-20220618161502660\" /></p>\n<ul>\n<li>数据字典</li>\n</ul>\n<p><img data-src=\"https://peng-img.oss-cn-shanghai.aliyuncs.com/markdown-img/image-20220618161618365.png\" alt=\"image-20220618161618365\" /></p>\n<h2 id=\"34-数据查询必考\"><a class=\"anchor\" href=\"#34-数据查询必考\">#</a> 3.4 数据查询（必考）</h2>\n<ul>\n<li>基本语法</li>\n</ul>\n<p><img data-src=\"https://peng-img.oss-cn-shanghai.aliyuncs.com/markdown-img/image-20220618161829326.png\" alt=\"image-20220618161829326\" /></p>\n<ul>\n<li>剩余见课后习题和往年卷！</li>\n</ul>\n<h3 id=\"单表查询\"><a class=\"anchor\" href=\"#单表查询\">#</a> 单表查询</h3>\n<p><img data-src=\"https://peng-img.oss-cn-shanghai.aliyuncs.com/markdown-img/image-20220613210755589.png\" alt=\"img\" /></p>\n<ul>\n<li>聚集、GROUP BY 要掌握</li>\n</ul>\n<p><img data-src=\"https://peng-img.oss-cn-shanghai.aliyuncs.com/markdown-img/image-20220620232055025.png\" alt=\"image-20220620232055025\" /></p>\n<ul>\n<li><em>一定会出一道写 sql 的题</em></li>\n</ul>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">SELECT</span> <span class=\"token punctuation\">[</span><span class=\"token keyword\">ALL</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">DISTINCT</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">&lt;</span>目标列表达式<span class=\"token operator\">></span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">,</span><span class=\"token operator\">&lt;</span>目标列表达式<span class=\"token operator\">></span><span class=\"token punctuation\">]</span> <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>\t<span class=\"token keyword\">FROM</span> <span class=\"token operator\">&lt;</span>tableName<span class=\"token operator\">></span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">,</span><span class=\"token operator\">&lt;</span>tableName<span class=\"token operator\">></span><span class=\"token punctuation\">]</span> <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">&lt;</span>select_caluse<span class=\"token operator\">></span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>\t<span class=\"token punctuation\">[</span><span class=\"token keyword\">AS</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">&lt;</span>alias<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>\t<span class=\"token punctuation\">[</span><span class=\"token keyword\">WHERE</span> <span class=\"token operator\">&lt;</span>conditional_expression<span class=\"token operator\">></span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>\t<span class=\"token punctuation\">[</span><span class=\"token keyword\">GROUP</span> <span class=\"token keyword\">BY</span> <span class=\"token operator\">&lt;</span>colName<span class=\"token operator\">></span> <span class=\"token punctuation\">[</span><span class=\"token keyword\">HAVING</span> <span class=\"token operator\">&lt;</span>conditional_expression<span class=\"token operator\">></span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>\t<span class=\"token punctuation\">[</span><span class=\"token keyword\">ORDER</span> <span class=\"token keyword\">BY</span> <span class=\"token operator\">&lt;</span>colName<span class=\"token operator\">></span><span class=\"token punctuation\">]</span> <span class=\"token punctuation\">[</span><span class=\"token keyword\">ASC</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">DESC</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token keyword\">SELECT</span> Sno<span class=\"token punctuation\">,</span> Sname <span class=\"token keyword\">FROM</span> Student<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token keyword\">SELECT</span> Sname<span class=\"token punctuation\">,</span> Sno<span class=\"token punctuation\">,</span> Sdept <span class=\"token keyword\">FROM</span> Student<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token keyword\">SELECT</span> Sno<span class=\"token punctuation\">,</span> Sname<span class=\"token punctuation\">,</span> Ssex<span class=\"token punctuation\">,</span> Sage<span class=\"token punctuation\">,</span> Sdept <span class=\"token keyword\">FROM</span> Student<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token keyword\">SELECT</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">FROM</span> Student<span class=\"token punctuation\">;</span> <span class=\"token comment\">/* 与上一行等价 */</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token keyword\">SELECT</span> Sname<span class=\"token punctuation\">,</span> <span class=\"token number\">2014</span><span class=\"token operator\">-</span>Sage <span class=\"token keyword\">FROM</span> Student<span class=\"token punctuation\">;</span> <span class=\"token comment\">/* 可以存在表达式 */</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token keyword\">SELECT</span> Sname<span class=\"token punctuation\">,</span> <span class=\"token string\">'Year of Birth: '</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2014</span><span class=\"token operator\">-</span>Sage<span class=\"token punctuation\">,</span> LOWER<span class=\"token punctuation\">(</span>Sdept<span class=\"token punctuation\">)</span> <span class=\"token keyword\">FROM</span> Student<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token keyword\">SELECT</span> Sname NAME<span class=\"token punctuation\">,</span><span class=\"token string\">'Year of Birth:'</span> BIRTH<span class=\"token punctuation\">,</span> <span class=\"token number\">2014</span><span class=\"token operator\">-</span>Sage BIRTHDAY<span class=\"token punctuation\">,</span> LOWER<span class=\"token punctuation\">(</span>Sdept<span class=\"token punctuation\">)</span> DEPARTMENT <span class=\"token keyword\">FROM</span> Student<span class=\"token punctuation\">;</span> <span class=\"token comment\">/* 查询结果表头为别名，要求用小写字母表示所在系 */</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token keyword\">SELECT</span> <span class=\"token keyword\">ALL</span> Sno <span class=\"token keyword\">FROM</span> SC<span class=\"token punctuation\">;</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">SELECT</span> Sno <span class=\"token keyword\">FROM</span> SC<span class=\"token punctuation\">;</span><span class=\"token comment\">/* 默认时 ALL*/</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token keyword\">SELECT</span> <span class=\"token keyword\">DISTINCT</span> Sno <span class=\"token keyword\">FROM</span> SC<span class=\"token punctuation\">;</span><span class=\"token comment\">/* 消除取值重复的行 */</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre></pre></td></tr><tr><td data-num=\"19\"></td><td><pre><span class=\"token comment\">/* 比较大小 */</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre><span class=\"token keyword\">SELECT</span> Sname <span class=\"token keyword\">FROM</span> Student</pre></td></tr><tr><td data-num=\"21\"></td><td><pre><span class=\"token keyword\">WHERE</span> Sdept<span class=\"token operator\">=</span>‘CS’<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre></pre></td></tr><tr><td data-num=\"23\"></td><td><pre><span class=\"token keyword\">SELECT</span> Sname<span class=\"token punctuation\">,</span> Sage <span class=\"token keyword\">FROM</span> Student</pre></td></tr><tr><td data-num=\"24\"></td><td><pre><span class=\"token keyword\">WHERE</span> Sage <span class=\"token operator\">&lt;</span> <span class=\"token number\">20</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre></pre></td></tr><tr><td data-num=\"26\"></td><td><pre><span class=\"token keyword\">SELECT</span> <span class=\"token keyword\">DISTINCT</span> Sn <span class=\"token keyword\">FROM</span> SC</pre></td></tr><tr><td data-num=\"27\"></td><td><pre><span class=\"token keyword\">WHERE</span> Grade <span class=\"token operator\">&lt;</span> <span class=\"token number\">60</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre></pre></td></tr><tr><td data-num=\"29\"></td><td><pre><span class=\"token comment\">/* 确定范围 */</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre><span class=\"token keyword\">SELECT</span> Sname<span class=\"token punctuation\">,</span> Sdept<span class=\"token punctuation\">,</span> Sage <span class=\"token keyword\">FROM</span> Student</pre></td></tr><tr><td data-num=\"31\"></td><td><pre><span class=\"token keyword\">WHERE</span> Sage <span class=\"token operator\">BETWEEN</span> <span class=\"token number\">20</span> <span class=\"token operator\">AND</span> <span class=\"token number\">23</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre></pre></td></tr><tr><td data-num=\"33\"></td><td><pre><span class=\"token keyword\">SELECT</span> Sname<span class=\"token punctuation\">,</span> Sdept<span class=\"token punctuation\">,</span> Sage <span class=\"token keyword\">FROM</span> Student</pre></td></tr><tr><td data-num=\"34\"></td><td><pre><span class=\"token keyword\">WHERE</span> Sage <span class=\"token operator\">NOT</span> <span class=\"token operator\">BETWEEN</span> <span class=\"token number\">20</span> <span class=\"token operator\">AND</span> <span class=\"token number\">23</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre></pre></td></tr><tr><td data-num=\"36\"></td><td><pre><span class=\"token comment\">/* 确定集合 */</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre><span class=\"token keyword\">SELECT</span> Sname<span class=\"token punctuation\">,</span> Ssex <span class=\"token keyword\">FROM</span> Student</pre></td></tr><tr><td data-num=\"38\"></td><td><pre><span class=\"token keyword\">WHERE</span> Sdept <span class=\"token operator\">IN</span> <span class=\"token punctuation\">(</span><span class=\"token string\">'CS'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'MA'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'IS'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>              </pre></td></tr><tr><td data-num=\"40\"></td><td><pre><span class=\"token keyword\">SELECT</span> Sname<span class=\"token punctuation\">,</span> Ssex <span class=\"token keyword\">FROM</span> Student</pre></td></tr><tr><td data-num=\"41\"></td><td><pre><span class=\"token keyword\">WHERE</span> Sdept <span class=\"token operator\">NOT</span> <span class=\"token operator\">IN</span> <span class=\"token punctuation\">(</span><span class=\"token string\">'IS'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'MA'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'CS'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre></pre></td></tr><tr><td data-num=\"43\"></td><td><pre><span class=\"token comment\">/* 字符匹配 */</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre><span class=\"token keyword\">SELECT</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">FROM</span> Student</pre></td></tr><tr><td data-num=\"45\"></td><td><pre><span class=\"token keyword\">WHERE</span> Sno <span class=\"token operator\">LIKE</span> <span class=\"token string\">'201215121'</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">/* 匹配固定字符串 */</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre></pre></td></tr><tr><td data-num=\"47\"></td><td><pre><span class=\"token comment\">/* 等价于 */</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre><span class=\"token keyword\">SELECT</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">FROM</span> Student</pre></td></tr><tr><td data-num=\"49\"></td><td><pre><span class=\"token keyword\">WHERE</span> Sno <span class=\"token operator\">=</span> <span class=\"token string\">'201215121'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre></pre></td></tr><tr><td data-num=\"51\"></td><td><pre><span class=\"token keyword\">SELECT</span> Sname<span class=\"token punctuation\">,</span> Sno<span class=\"token punctuation\">,</span> Ssex <span class=\"token keyword\">FROM</span> Student</pre></td></tr><tr><td data-num=\"52\"></td><td><pre><span class=\"token keyword\">WHERE</span> Sname <span class=\"token operator\">LIKE</span> <span class=\"token string\">'刘%'</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">/* % 匹配任意长度（长度可以为 0）字符串 */</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre></pre></td></tr><tr><td data-num=\"54\"></td><td><pre><span class=\"token keyword\">SELECT</span> Sname <span class=\"token keyword\">FROM</span> Student</pre></td></tr><tr><td data-num=\"55\"></td><td><pre><span class=\"token keyword\">WHERE</span> Sname <span class=\"token operator\">LIKE</span> <span class=\"token string\">'欧阳_'</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">/* _ 匹配任意单个字符 */</span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre></pre></td></tr><tr><td data-num=\"57\"></td><td><pre><span class=\"token keyword\">SELECT</span> Sname，Sno <span class=\"token keyword\">FROM</span> Student</pre></td></tr><tr><td data-num=\"58\"></td><td><pre><span class=\"token keyword\">WHERE</span> Sname <span class=\"token operator\">LIKE</span> <span class=\"token string\">'_阳%'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"59\"></td><td><pre></pre></td></tr><tr><td data-num=\"60\"></td><td><pre><span class=\"token keyword\">SELECT</span> Sname<span class=\"token punctuation\">,</span> Sno<span class=\"token punctuation\">,</span> Ssex <span class=\"token keyword\">FROM</span> Student</pre></td></tr><tr><td data-num=\"61\"></td><td><pre><span class=\"token keyword\">WHERE</span> Sname <span class=\"token operator\">NOT</span> <span class=\"token operator\">LIKE</span> <span class=\"token string\">'刘%'</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">/*  查询所有不姓刘的学生姓名、学号和性别。 */</span></pre></td></tr><tr><td data-num=\"62\"></td><td><pre></pre></td></tr><tr><td data-num=\"63\"></td><td><pre><span class=\"token keyword\">SELECT</span> Cno，Ccredit <span class=\"token keyword\">FROM</span> Course</pre></td></tr><tr><td data-num=\"64\"></td><td><pre><span class=\"token keyword\">WHERE</span> Cname <span class=\"token operator\">LIKE</span> <span class=\"token string\">'DB\\_Design'</span> <span class=\"token keyword\">ESCAPE</span> <span class=\"token string\">'\\ '</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">/* ESCAPE '＼' 表示 '＼' 为换码字符 */</span></pre></td></tr><tr><td data-num=\"65\"></td><td><pre></pre></td></tr><tr><td data-num=\"66\"></td><td><pre><span class=\"token keyword\">SELECT</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">FROM</span> Course</pre></td></tr><tr><td data-num=\"67\"></td><td><pre><span class=\"token keyword\">WHERE</span> Cname <span class=\"token operator\">LIKE</span> <span class=\"token string\">'DB\\_%i_ _'</span> <span class=\"token keyword\">ESCAPE</span> <span class=\"token string\">'\\ '</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"68\"></td><td><pre></pre></td></tr><tr><td data-num=\"69\"></td><td><pre><span class=\"token comment\">/* 涉及空值的计算 */</span></pre></td></tr><tr><td data-num=\"70\"></td><td><pre><span class=\"token keyword\">SELECT</span> Sno<span class=\"token punctuation\">,</span> Cno <span class=\"token keyword\">FROM</span> SC</pre></td></tr><tr><td data-num=\"71\"></td><td><pre><span class=\"token keyword\">WHERE</span> Grade <span class=\"token operator\">IS</span> <span class=\"token boolean\">NULL</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"72\"></td><td><pre></pre></td></tr><tr><td data-num=\"73\"></td><td><pre><span class=\"token keyword\">SELECT</span> Sno，Cno <span class=\"token keyword\">FROM</span> SC</pre></td></tr><tr><td data-num=\"74\"></td><td><pre><span class=\"token keyword\">WHERE</span> Grade <span class=\"token operator\">IS</span> <span class=\"token operator\">NOT</span> <span class=\"token boolean\">NULL</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">/* 涉及空值的查询：IS (NOT) NULL: IS 不可换成 = */</span></pre></td></tr><tr><td data-num=\"75\"></td><td><pre></pre></td></tr><tr><td data-num=\"76\"></td><td><pre><span class=\"token comment\">/* 多重条件查询 */</span></pre></td></tr><tr><td data-num=\"77\"></td><td><pre><span class=\"token comment\">/* AND 的优先级高于 OR 可以用括号改变优先级 */</span></pre></td></tr><tr><td data-num=\"78\"></td><td><pre><span class=\"token keyword\">SELECT</span> Sname <span class=\"token keyword\">FROM</span> Student</pre></td></tr><tr><td data-num=\"79\"></td><td><pre><span class=\"token keyword\">WHERE</span> Sdept <span class=\"token operator\">=</span> <span class=\"token string\">'CS'</span> <span class=\"token operator\">AND</span> Sage <span class=\"token operator\">&lt;</span> <span class=\"token number\">20</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"80\"></td><td><pre></pre></td></tr><tr><td data-num=\"81\"></td><td><pre><span class=\"token keyword\">SELECT</span> Sname<span class=\"token punctuation\">,</span> Ssex <span class=\"token keyword\">FROM</span> Student</pre></td></tr><tr><td data-num=\"82\"></td><td><pre><span class=\"token keyword\">WHERE</span> Sdept <span class=\"token operator\">IN</span> <span class=\"token punctuation\">(</span><span class=\"token string\">'CS'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'MA'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'IS'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"83\"></td><td><pre></pre></td></tr><tr><td data-num=\"84\"></td><td><pre><span class=\"token keyword\">SELECT</span> Sname<span class=\"token punctuation\">,</span> Ssex <span class=\"token keyword\">FROM</span> Student </pre></td></tr><tr><td data-num=\"85\"></td><td><pre><span class=\"token keyword\">WHERE</span> Sdept <span class=\"token operator\">=</span> <span class=\"token string\">' CS'</span> <span class=\"token operator\">OR</span> Sdept <span class=\"token operator\">=</span> <span class=\"token string\">'MA'</span> <span class=\"token operator\">OR</span> Sdept<span class=\"token operator\">=</span> <span class=\"token string\">'IS'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"86\"></td><td><pre></pre></td></tr><tr><td data-num=\"87\"></td><td><pre><span class=\"token comment\">/* 可以按一个或多个属性列排序</pre></td></tr><tr><td data-num=\"88\"></td><td><pre>升序：ASC; 降序：DESC; 缺省值为升序</pre></td></tr><tr><td data-num=\"89\"></td><td><pre>对于空值，排序时显示的次序由具体系统实现来决定 */</span></pre></td></tr><tr><td data-num=\"90\"></td><td><pre><span class=\"token keyword\">SELECT</span> Sno<span class=\"token punctuation\">,</span> Grade <span class=\"token keyword\">FROM</span> SC <span class=\"token keyword\">WHERE</span> Cno <span class=\"token operator\">=</span> <span class=\"token string\">'3'</span></pre></td></tr><tr><td data-num=\"91\"></td><td><pre><span class=\"token keyword\">ORDER</span> <span class=\"token keyword\">BY</span> Grade <span class=\"token keyword\">DESC</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"92\"></td><td><pre></pre></td></tr><tr><td data-num=\"93\"></td><td><pre><span class=\"token comment\">/*Sdept 按升序排列，学生年龄按降序排列 */</span></pre></td></tr><tr><td data-num=\"94\"></td><td><pre><span class=\"token keyword\">SELECT</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">FROM</span> Student</pre></td></tr><tr><td data-num=\"95\"></td><td><pre><span class=\"token keyword\">ORDER</span> <span class=\"token keyword\">BY</span> Sdept<span class=\"token punctuation\">,</span> Sage <span class=\"token keyword\">DESC</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"96\"></td><td><pre></pre></td></tr><tr><td data-num=\"97\"></td><td><pre><span class=\"token comment\">/* 聚集函数：</pre></td></tr><tr><td data-num=\"98\"></td><td><pre>统计元组个数</pre></td></tr><tr><td data-num=\"99\"></td><td><pre>    COUNT (*)</pre></td></tr><tr><td data-num=\"100\"></td><td><pre>统计一列中值的个数</pre></td></tr><tr><td data-num=\"101\"></td><td><pre>    COUNT ([DISTINCT|ALL] &lt; 列名 >) DISTINC 取消重复值</pre></td></tr><tr><td data-num=\"102\"></td><td><pre>计算一列值的总和（此列必须为数值型）</pre></td></tr><tr><td data-num=\"103\"></td><td><pre>\tSUM ([DISTINCT|ALL] &lt; 列名 >)\t</pre></td></tr><tr><td data-num=\"104\"></td><td><pre>计算一列值的平均值（此列必须为数值型）</pre></td></tr><tr><td data-num=\"105\"></td><td><pre>\tAVG ([DISTINCT|ALL] &lt; 列名 >)</pre></td></tr><tr><td data-num=\"106\"></td><td><pre>求一列中的最大值和最小值</pre></td></tr><tr><td data-num=\"107\"></td><td><pre> \tMAX ([DISTINCT|ALL] &lt; 列名 >)</pre></td></tr><tr><td data-num=\"108\"></td><td><pre>\tMIN ([DISTINCT|ALL] &lt; 列名 >) */</span></pre></td></tr><tr><td data-num=\"109\"></td><td><pre><span class=\"token keyword\">SELECT</span> <span class=\"token function\">COUNT</span><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">FROM</span> Student<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"110\"></td><td><pre></pre></td></tr><tr><td data-num=\"111\"></td><td><pre><span class=\"token keyword\">SELECT</span> <span class=\"token function\">COUNT</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">DISTINCT</span> Sno<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"112\"></td><td><pre><span class=\"token keyword\">FROM</span> SC<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"113\"></td><td><pre></pre></td></tr><tr><td data-num=\"114\"></td><td><pre><span class=\"token keyword\">SELECT</span> <span class=\"token function\">AVG</span><span class=\"token punctuation\">(</span>Grade<span class=\"token punctuation\">)</span> <span class=\"token keyword\">FROM</span> SC</pre></td></tr><tr><td data-num=\"115\"></td><td><pre><span class=\"token keyword\">WHERE</span> Cno <span class=\"token operator\">=</span> <span class=\"token string\">'1'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"116\"></td><td><pre></pre></td></tr><tr><td data-num=\"117\"></td><td><pre><span class=\"token keyword\">SELECT</span> <span class=\"token function\">MAX</span><span class=\"token punctuation\">(</span>Grade<span class=\"token punctuation\">)</span> <span class=\"token keyword\">FROM</span> SC</pre></td></tr><tr><td data-num=\"118\"></td><td><pre><span class=\"token keyword\">WHERE</span> Cno <span class=\"token operator\">=</span> <span class=\"token string\">'1'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"119\"></td><td><pre></pre></td></tr><tr><td data-num=\"120\"></td><td><pre><span class=\"token keyword\">SELECT</span> <span class=\"token function\">SUM</span><span class=\"token punctuation\">(</span>Ccredit<span class=\"token punctuation\">)</span> <span class=\"token keyword\">FROM</span> SC<span class=\"token punctuation\">,</span> Course </pre></td></tr><tr><td data-num=\"121\"></td><td><pre><span class=\"token keyword\">WHERE</span> Sno <span class=\"token operator\">=</span> <span class=\"token string\">'201215012'</span> <span class=\"token operator\">AND</span> SC<span class=\"token punctuation\">.</span>Cno <span class=\"token operator\">=</span> Course<span class=\"token punctuation\">.</span>Cno<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"122\"></td><td><pre></pre></td></tr><tr><td data-num=\"123\"></td><td><pre><span class=\"token comment\">/* GROUP BY 子句分组：</pre></td></tr><tr><td data-num=\"124\"></td><td><pre>细化聚集函数的作用对象；也就是说 GROUP BY 是和聚集函数配套使用的</pre></td></tr><tr><td data-num=\"125\"></td><td><pre>如果未对查询结果分组，聚集函数将作用于整个查询结果</pre></td></tr><tr><td data-num=\"126\"></td><td><pre>* 对查询结果分组后，聚集函数将分别作用于每个组 *</pre></td></tr><tr><td data-num=\"127\"></td><td><pre>按指定的一列或多列值分组，值相等的为一组 */</span></pre></td></tr><tr><td data-num=\"128\"></td><td><pre><span class=\"token keyword\">SELECT</span> Cno<span class=\"token punctuation\">,</span> <span class=\"token function\">COUNT</span><span class=\"token punctuation\">(</span>Sno<span class=\"token punctuation\">)</span> <span class=\"token keyword\">FROM</span> SC</pre></td></tr><tr><td data-num=\"129\"></td><td><pre><span class=\"token keyword\">GROUP</span> <span class=\"token keyword\">BY</span> Cno<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"130\"></td><td><pre></pre></td></tr><tr><td data-num=\"131\"></td><td><pre><span class=\"token comment\">/* HAVING 短语与 WHERE 子句的 区别：</pre></td></tr><tr><td data-num=\"132\"></td><td><pre>\t作用对象不同</pre></td></tr><tr><td data-num=\"133\"></td><td><pre>\tWHERE 子句作用于基表或视图，从中选择满足条件的元组</pre></td></tr><tr><td data-num=\"134\"></td><td><pre>\tHAVING 短语作用于组，从中选择满足条件的组。*/</span></pre></td></tr><tr><td data-num=\"135\"></td><td><pre><span class=\"token keyword\">SELECT</span> Sno <span class=\"token keyword\">FROM</span> SC</pre></td></tr><tr><td data-num=\"136\"></td><td><pre><span class=\"token keyword\">GROUP</span> <span class=\"token keyword\">BY</span> Sno</pre></td></tr><tr><td data-num=\"137\"></td><td><pre><span class=\"token keyword\">HAVING</span> <span class=\"token function\">COUNT</span><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">></span> <span class=\"token number\">3</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"138\"></td><td><pre></pre></td></tr><tr><td data-num=\"139\"></td><td><pre><span class=\"token keyword\">SELECT</span> Sno<span class=\"token punctuation\">,</span> <span class=\"token function\">AVG</span><span class=\"token punctuation\">(</span>Grade<span class=\"token punctuation\">)</span> <span class=\"token keyword\">FROM</span> SC </pre></td></tr><tr><td data-num=\"140\"></td><td><pre><span class=\"token keyword\">GROUP</span> <span class=\"token keyword\">BY</span> Sno</pre></td></tr><tr><td data-num=\"141\"></td><td><pre><span class=\"token keyword\">HAVING</span> <span class=\"token function\">AVG</span><span class=\"token punctuation\">(</span>Grade<span class=\"token punctuation\">)</span> <span class=\"token operator\">>=</span> <span class=\"token number\">90</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">/* 查询平均成绩大于等于 90 分的学生学号和平均成绩 */</span></pre></td></tr></table></figure><h3 id=\"连接查询\"><a class=\"anchor\" href=\"#连接查询\">#</a> 连接查询</h3>\n<ul>\n<li>连接要知道</li>\n<li>连接操作不用看，知道有这么回事就行</li>\n</ul>\n<p><code>[&lt;表名1&gt;.]&lt;列名1&gt;&lt;比较运算符&gt;[&lt;表名2&gt;.]&lt;列名2&gt;</code></p>\n<p>若在等值连接中把目标列中重复的属性列去掉则为<strong>自然连接</strong>。</p>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">/* [例 3.49] 查询每个学生及其选修课程的情况 */</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">SELECT</span> Student<span class=\"token punctuation\">.</span><span class=\"token operator\">*</span><span class=\"token punctuation\">,</span> SC<span class=\"token punctuation\">.</span><span class=\"token operator\">*</span> <span class=\"token keyword\">FROM</span> Student<span class=\"token punctuation\">,</span> SC</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">WHERE</span> Student<span class=\"token punctuation\">.</span>Sno <span class=\"token operator\">=</span> SC<span class=\"token punctuation\">.</span>Sno<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token comment\">/* 对上例使用自然连接 */</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">SELECT</span> Student<span class=\"token punctuation\">.</span>Sno<span class=\"token punctuation\">,</span>Sname<span class=\"token punctuation\">,</span>Ssex<span class=\"token punctuation\">,</span>Sage<span class=\"token punctuation\">,</span>Sd ept<span class=\"token punctuation\">,</span>Cno<span class=\"token punctuation\">,</span>Grade <span class=\"token keyword\">FROM</span> Student<span class=\"token punctuation\">,</span>SC</pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token keyword\">WHERE</span> Student<span class=\"token punctuation\">.</span>Sno <span class=\"token operator\">=</span> SC<span class=\"token punctuation\">.</span>Sno<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token comment\">/*WHERE 子句由连接谓词和选择谓词组成 */</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token keyword\">SELECT</span> Student<span class=\"token punctuation\">.</span>Sno<span class=\"token punctuation\">,</span> Sname </pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token keyword\">FROM</span> Student<span class=\"token punctuation\">,</span> SC</pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token keyword\">WHERE</span> Student<span class=\"token punctuation\">.</span>Sno <span class=\"token operator\">=</span> SC<span class=\"token punctuation\">.</span>Sno <span class=\"token operator\">AND</span> SC<span class=\"token punctuation\">.</span>Cno<span class=\"token operator\">=</span><span class=\"token string\">'2'</span> <span class=\"token operator\">AND</span> SC<span class=\"token punctuation\">.</span>Grade <span class=\"token operator\">></span> <span class=\"token number\">90</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token keyword\">SELECT</span> <span class=\"token keyword\">FIRST</span><span class=\"token punctuation\">.</span>Cno<span class=\"token punctuation\">,</span> <span class=\"token keyword\">SECOND</span><span class=\"token punctuation\">.</span>Cpno <span class=\"token keyword\">FROM</span> Course <span class=\"token keyword\">FIRST</span><span class=\"token punctuation\">,</span> Course <span class=\"token keyword\">SECOND</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token keyword\">WHERE</span> <span class=\"token keyword\">FIRST</span><span class=\"token punctuation\">.</span>Cpno <span class=\"token operator\">=</span> <span class=\"token keyword\">SECOND</span><span class=\"token punctuation\">.</span>Cno<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre></pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token comment\">/* 自身连接：查询每一门课的间接先修课（即先修课的 先修课）*/</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre><span class=\"token keyword\">SELECT</span> <span class=\"token keyword\">FIRST</span><span class=\"token punctuation\">.</span>Cno<span class=\"token punctuation\">,</span> <span class=\"token keyword\">SECOND</span><span class=\"token punctuation\">.</span>Cpno</pre></td></tr><tr><td data-num=\"19\"></td><td><pre><span class=\"token keyword\">FROM</span> Course <span class=\"token keyword\">FIRST</span><span class=\"token punctuation\">,</span> Course <span class=\"token keyword\">SECOND</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre><span class=\"token keyword\">WHERE</span> <span class=\"token keyword\">FIRST</span><span class=\"token punctuation\">.</span>Cpno <span class=\"token operator\">=</span> <span class=\"token keyword\">SECOND</span><span class=\"token punctuation\">.</span>Cno<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre></pre></td></tr><tr><td data-num=\"22\"></td><td><pre><span class=\"token comment\">/* [例 3.53] 改写 [例 3.49] </pre></td></tr><tr><td data-num=\"23\"></td><td><pre>\t左外连接：列出左表中所有的元组 */</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre><span class=\"token keyword\">SELECT</span> Student<span class=\"token punctuation\">.</span>Sno<span class=\"token punctuation\">,</span> Sname<span class=\"token punctuation\">,</span> Ssex<span class=\"token punctuation\">,</span> Sage<span class=\"token punctuation\">,</span> Sdept<span class=\"token punctuation\">,</span> Cno<span class=\"token punctuation\">,</span> Grade</pre></td></tr><tr><td data-num=\"25\"></td><td><pre><span class=\"token keyword\">FROM</span> Student</pre></td></tr><tr><td data-num=\"26\"></td><td><pre><span class=\"token keyword\">LEFT</span> <span class=\"token keyword\">OUT</span> <span class=\"token keyword\">JOIN</span> SC <span class=\"token keyword\">ON</span> <span class=\"token punctuation\">(</span>Student<span class=\"token punctuation\">.</span>Sno<span class=\"token operator\">=</span>SC<span class=\"token punctuation\">.</span>Sno<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre></pre></td></tr><tr><td data-num=\"28\"></td><td><pre><span class=\"token comment\">/* [例 3.54] 查询每个学生的学号、姓名、选修 的课程名及成绩 */</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre><span class=\"token keyword\">SELECT</span> Student<span class=\"token punctuation\">.</span>Sno<span class=\"token punctuation\">,</span> Sname<span class=\"token punctuation\">,</span> Cname<span class=\"token punctuation\">,</span> Grade</pre></td></tr><tr><td data-num=\"30\"></td><td><pre><span class=\"token keyword\">FROM</span> Student<span class=\"token punctuation\">,</span> SC<span class=\"token punctuation\">,</span> Course <span class=\"token comment\">/* 多表连接 */</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre><span class=\"token keyword\">WHERE</span> Student<span class=\"token punctuation\">.</span>Sno <span class=\"token operator\">=</span> SC<span class=\"token punctuation\">.</span>Sno</pre></td></tr><tr><td data-num=\"32\"></td><td><pre><span class=\"token operator\">AND</span> SC<span class=\"token punctuation\">.</span>Cno <span class=\"token operator\">=</span> Course<span class=\"token punctuation\">.</span>Cno<span class=\"token punctuation\">;</span></pre></td></tr></table></figure><h3 id=\"嵌套查询\"><a class=\"anchor\" href=\"#嵌套查询\">#</a> 嵌套查询</h3>\n<ul>\n<li>\n<p>上层的查询块称为外层查询或父查询，下层查询块称为内层查询或子查询。</p>\n<p>SQL 语言允许多层嵌套查询，即一个子查询中还可以嵌套其他子查询。</p>\n<p>子查询的限制：*<strong> 不能使用  <code>ORDER BY</code>  子句 *</strong>。有些嵌套查询可以用连接运算替代，<strong>谨慎使用嵌套查询</strong>。</p>\n</li>\n<li>\n<p>嵌套的部分不做要求</p>\n</li>\n<li>\n<p>但是考试写嵌套没有问题</p>\n</li>\n<li>\n<p>带谓词的子查询看一看就行</p>\n</li>\n<li>\n<p><strong>用聚集函数实现子查询通常比直接用 ANY 或 ALL 查询效率要高</strong></p>\n</li>\n<li>\n<p><img data-src=\"https://quasdo.oss-cn-hangzhou.aliyuncs.com/img/image-20230611093819977.png\" alt=\"image-20230611093819977\" /></p>\n</li>\n<li></li>\n</ul>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\"># [例 3.55] 查询与 “刘晨” 在同一个系学习的学生。</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\"># 不相关子查询：子查询的查询条件不依赖于父查询</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">SELECT</span> Sno<span class=\"token punctuation\">,</span> Sname<span class=\"token punctuation\">,</span> Sdept</pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">FROM</span> Student</pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">WHERE</span> Sdept <span class=\"token operator\">IN</span> <span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token keyword\">SELECT</span> Sdept</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token keyword\">FROM</span> Student</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token keyword\">WHERE</span> Sname <span class=\"token operator\">=</span> <span class=\"token string\">'刘晨'</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token comment\"># 在 [例 3.55] 中，由于一个学生只可能在一个系学习，则 可以用 = 代替 IN：</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token keyword\">SELECT</span> Sno<span class=\"token punctuation\">,</span> Sname<span class=\"token punctuation\">,</span> Sdept</pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token keyword\">FROM</span> Student</pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token keyword\">WHERE</span> Sdept <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    <span class=\"token keyword\">SELECT</span> Sdept</pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    <span class=\"token keyword\">FROM</span> Student</pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    <span class=\"token keyword\">WHERE</span> Sname <span class=\"token operator\">=</span> <span class=\"token string\">'刘晨'</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre></pre></td></tr><tr><td data-num=\"20\"></td><td><pre><span class=\"token comment\"># 上例的解法 2</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre><span class=\"token keyword\">SELECT</span> S1<span class=\"token punctuation\">.</span>Sno<span class=\"token punctuation\">,</span> S1<span class=\"token punctuation\">.</span>Sname<span class=\"token punctuation\">,</span> S1<span class=\"token punctuation\">.</span>Sdept</pre></td></tr><tr><td data-num=\"22\"></td><td><pre><span class=\"token keyword\">FROM</span> Student S1<span class=\"token punctuation\">,</span> Student S2</pre></td></tr><tr><td data-num=\"23\"></td><td><pre><span class=\"token keyword\">WHERE</span> S1<span class=\"token punctuation\">.</span>Sdept <span class=\"token operator\">=</span> S2<span class=\"token punctuation\">.</span>Sdept <span class=\"token operator\">AND</span> S2<span class=\"token punctuation\">.</span>Sname <span class=\"token operator\">=</span> <span class=\"token string\">'刘晨'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre></pre></td></tr><tr><td data-num=\"25\"></td><td><pre></pre></td></tr><tr><td data-num=\"26\"></td><td><pre><span class=\"token comment\"># 自身链接</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre><span class=\"token keyword\">SELECT</span> S1<span class=\"token punctuation\">.</span>Sno<span class=\"token punctuation\">,</span> S1<span class=\"token punctuation\">.</span>Sname<span class=\"token punctuation\">,</span> S1<span class=\"token punctuation\">.</span>Sdept</pre></td></tr><tr><td data-num=\"28\"></td><td><pre><span class=\"token keyword\">FROM</span> Student S1<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>     Student S2</pre></td></tr><tr><td data-num=\"30\"></td><td><pre><span class=\"token keyword\">WHERE</span> S1<span class=\"token punctuation\">.</span>Sdept <span class=\"token operator\">=</span> S2<span class=\"token punctuation\">.</span>Sdept</pre></td></tr><tr><td data-num=\"31\"></td><td><pre>  <span class=\"token operator\">AND</span> S2<span class=\"token punctuation\">.</span>Sname <span class=\"token operator\">=</span> <span class=\"token string\">'刘晨'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre></pre></td></tr><tr><td data-num=\"33\"></td><td><pre><span class=\"token comment\"># [例 3.56] 查询选修了课程名为 “信息系统” 的学生学号和姓名</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre><span class=\"token keyword\">SELECT</span> Sno<span class=\"token punctuation\">,</span> Sname</pre></td></tr><tr><td data-num=\"35\"></td><td><pre><span class=\"token keyword\">FROM</span> Student</pre></td></tr><tr><td data-num=\"36\"></td><td><pre><span class=\"token keyword\">WHERE</span> Sno <span class=\"token operator\">IN</span> <span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>    <span class=\"token keyword\">SELECT</span> Sno</pre></td></tr><tr><td data-num=\"38\"></td><td><pre>    <span class=\"token keyword\">FROM</span> SC</pre></td></tr><tr><td data-num=\"39\"></td><td><pre>    <span class=\"token keyword\">WHERE</span> Cno <span class=\"token operator\">IN</span> <span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>        <span class=\"token keyword\">SELECT</span> Cno</pre></td></tr><tr><td data-num=\"41\"></td><td><pre>        <span class=\"token keyword\">FROM</span> Course</pre></td></tr><tr><td data-num=\"42\"></td><td><pre>        <span class=\"token keyword\">WHERE</span> Cname <span class=\"token operator\">=</span> <span class=\"token string\">'信息系统'</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>    <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre></pre></td></tr><tr><td data-num=\"46\"></td><td><pre><span class=\"token comment\"># 用连接查询实现 [例 3.56]</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre><span class=\"token keyword\">SELECT</span> Sno<span class=\"token punctuation\">,</span> Sname</pre></td></tr><tr><td data-num=\"48\"></td><td><pre><span class=\"token keyword\">FROM</span> Student<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>     SC<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>     Course</pre></td></tr><tr><td data-num=\"51\"></td><td><pre><span class=\"token keyword\">WHERE</span> Student<span class=\"token punctuation\">.</span>Sno <span class=\"token operator\">=</span> SC<span class=\"token punctuation\">.</span>Sno</pre></td></tr><tr><td data-num=\"52\"></td><td><pre>  <span class=\"token operator\">AND</span> SC<span class=\"token punctuation\">.</span>Cno <span class=\"token operator\">=</span> Course<span class=\"token punctuation\">.</span>Cno</pre></td></tr><tr><td data-num=\"53\"></td><td><pre>  <span class=\"token operator\">AND</span> Course<span class=\"token punctuation\">.</span>Cname <span class=\"token operator\">=</span> <span class=\"token string\">'信息系统'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre></pre></td></tr><tr><td data-num=\"55\"></td><td><pre></pre></td></tr><tr><td data-num=\"56\"></td><td><pre><span class=\"token comment\"># [例 3.57] 找出每个学生超过他选修课程平均成绩的课程号。</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre><span class=\"token comment\"># 相关子查询：子查询依赖于父查询（与父查询相关），需要反复求值</span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre><span class=\"token keyword\">SELECT</span> Sno<span class=\"token punctuation\">,</span> Cno</pre></td></tr><tr><td data-num=\"59\"></td><td><pre><span class=\"token keyword\">FROM</span> SC x</pre></td></tr><tr><td data-num=\"60\"></td><td><pre><span class=\"token keyword\">WHERE</span> Grade <span class=\"token operator\">>=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">SELECT</span> AVG（Grade） </pre></td></tr><tr><td data-num=\"61\"></td><td><pre>                <span class=\"token keyword\">FROM</span> SC y </pre></td></tr><tr><td data-num=\"62\"></td><td><pre>                <span class=\"token keyword\">WHERE</span> y<span class=\"token punctuation\">.</span>Sno <span class=\"token operator\">=</span> x<span class=\"token punctuation\">.</span>Sno<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"63\"></td><td><pre></pre></td></tr><tr><td data-num=\"64\"></td><td><pre><span class=\"token comment\"># [例 3.58] 查询非计算机科学系中比 计算机科学系任意一个学生年龄小的学生姓名和年龄</span></pre></td></tr><tr><td data-num=\"65\"></td><td><pre><span class=\"token comment\"># 带有 ANY 或 ALL 谓词的子查询</span></pre></td></tr><tr><td data-num=\"66\"></td><td><pre><span class=\"token keyword\">SELECT</span> Sname<span class=\"token punctuation\">,</span> Sage</pre></td></tr><tr><td data-num=\"67\"></td><td><pre><span class=\"token keyword\">FROM</span> Student</pre></td></tr><tr><td data-num=\"68\"></td><td><pre><span class=\"token keyword\">WHERE</span> Sage <span class=\"token operator\">&lt;</span> <span class=\"token keyword\">ANY</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">SELECT</span> Sage </pre></td></tr><tr><td data-num=\"69\"></td><td><pre>                  <span class=\"token keyword\">FROM</span> Student </pre></td></tr><tr><td data-num=\"70\"></td><td><pre>                  <span class=\"token keyword\">WHERE</span> Sdept <span class=\"token operator\">=</span> <span class=\"token string\">' CS '</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"71\"></td><td><pre><span class=\"token operator\">AND</span> Sdept <span class=\"token operator\">&lt;></span> <span class=\"token string\">'CS'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"72\"></td><td><pre></pre></td></tr><tr><td data-num=\"73\"></td><td><pre><span class=\"token comment\"># 用聚集函数实现 [例 3.58]</span></pre></td></tr><tr><td data-num=\"74\"></td><td><pre><span class=\"token keyword\">SELECT</span> Sname<span class=\"token punctuation\">,</span> Sage</pre></td></tr><tr><td data-num=\"75\"></td><td><pre><span class=\"token keyword\">FROM</span> Student</pre></td></tr><tr><td data-num=\"76\"></td><td><pre><span class=\"token keyword\">WHERE</span> Sage <span class=\"token operator\">&lt;</span> </pre></td></tr><tr><td data-num=\"77\"></td><td><pre>\t\t\t<span class=\"token punctuation\">(</span><span class=\"token keyword\">SELECT</span> <span class=\"token function\">MAX</span><span class=\"token punctuation\">(</span>Sage<span class=\"token punctuation\">)</span> </pre></td></tr><tr><td data-num=\"78\"></td><td><pre>             <span class=\"token keyword\">FROM</span> Student </pre></td></tr><tr><td data-num=\"79\"></td><td><pre>             <span class=\"token keyword\">WHERE</span> Sdept <span class=\"token operator\">=</span> <span class=\"token string\">'CS '</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"80\"></td><td><pre><span class=\"token operator\">AND</span> Sdept <span class=\"token operator\">&lt;></span> <span class=\"token string\">'CS'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"81\"></td><td><pre></pre></td></tr><tr><td data-num=\"82\"></td><td><pre><span class=\"token comment\"># [例 3.59] 查询非计算机科学系 中比计算机科学系所有学生年龄都小的学生姓名及年龄。</span></pre></td></tr><tr><td data-num=\"83\"></td><td><pre><span class=\"token comment\"># 方法一：用 ALL 谓词</span></pre></td></tr><tr><td data-num=\"84\"></td><td><pre><span class=\"token keyword\">SELECT</span> Sname<span class=\"token punctuation\">,</span> Sage</pre></td></tr><tr><td data-num=\"85\"></td><td><pre><span class=\"token keyword\">FROM</span> Student</pre></td></tr><tr><td data-num=\"86\"></td><td><pre><span class=\"token keyword\">WHERE</span> Sage <span class=\"token operator\">&lt;</span> <span class=\"token keyword\">ALL</span> </pre></td></tr><tr><td data-num=\"87\"></td><td><pre>\t\t\t<span class=\"token punctuation\">(</span><span class=\"token keyword\">SELECT</span> Sage </pre></td></tr><tr><td data-num=\"88\"></td><td><pre>             <span class=\"token keyword\">FROM</span> Student </pre></td></tr><tr><td data-num=\"89\"></td><td><pre>             <span class=\"token keyword\">WHERE</span> Sdept <span class=\"token operator\">=</span> <span class=\"token string\">'CS'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"90\"></td><td><pre><span class=\"token operator\">AND</span> Sdept <span class=\"token operator\">&lt;></span> <span class=\"token string\">'CS'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"91\"></td><td><pre></pre></td></tr><tr><td data-num=\"92\"></td><td><pre><span class=\"token comment\"># 方法二：用聚集函数</span></pre></td></tr><tr><td data-num=\"93\"></td><td><pre><span class=\"token keyword\">SELECT</span> Sname<span class=\"token punctuation\">,</span> Sage</pre></td></tr><tr><td data-num=\"94\"></td><td><pre><span class=\"token keyword\">FROM</span> Student</pre></td></tr><tr><td data-num=\"95\"></td><td><pre><span class=\"token keyword\">WHERE</span> Sage <span class=\"token operator\">&lt;</span> </pre></td></tr><tr><td data-num=\"96\"></td><td><pre>\t\t\t<span class=\"token punctuation\">(</span><span class=\"token keyword\">SELECT</span> <span class=\"token function\">MIN</span><span class=\"token punctuation\">(</span>Sage<span class=\"token punctuation\">)</span> </pre></td></tr><tr><td data-num=\"97\"></td><td><pre>             <span class=\"token keyword\">FROM</span> Student </pre></td></tr><tr><td data-num=\"98\"></td><td><pre>             <span class=\"token keyword\">WHERE</span> Sdept <span class=\"token operator\">=</span> <span class=\"token string\">'CS'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"99\"></td><td><pre><span class=\"token operator\">AND</span> Sdept <span class=\"token operator\">&lt;></span> <span class=\"token string\">'CS'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"100\"></td><td><pre></pre></td></tr><tr><td data-num=\"101\"></td><td><pre><span class=\"token comment\"># [例 3.60] 查询所有选修了 1 号课程的学生姓名。</span></pre></td></tr><tr><td data-num=\"102\"></td><td><pre><span class=\"token comment\"># 带有 EXIST 谓词的子查询不返回任何数据，只产生逻辑真值 “true” 或逻辑假植 “false”</span></pre></td></tr><tr><td data-num=\"103\"></td><td><pre><span class=\"token keyword\">SELECT</span> Sname</pre></td></tr><tr><td data-num=\"104\"></td><td><pre><span class=\"token keyword\">FROM</span> Student</pre></td></tr><tr><td data-num=\"105\"></td><td><pre><span class=\"token keyword\">WHERE</span> <span class=\"token keyword\">EXISTS</span><span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"106\"></td><td><pre>              <span class=\"token keyword\">SELECT</span> <span class=\"token operator\">*</span></pre></td></tr><tr><td data-num=\"107\"></td><td><pre>              <span class=\"token keyword\">FROM</span> SC</pre></td></tr><tr><td data-num=\"108\"></td><td><pre>              <span class=\"token keyword\">WHERE</span> Sno <span class=\"token operator\">=</span> Student<span class=\"token punctuation\">.</span>Sno <span class=\"token operator\">AND</span> Cno <span class=\"token operator\">=</span> <span class=\"token string\">'1'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"109\"></td><td><pre></pre></td></tr><tr><td data-num=\"110\"></td><td><pre><span class=\"token comment\">#  [例 3.61] 查询没有选修 1 号课程的学生姓名。</span></pre></td></tr><tr><td data-num=\"111\"></td><td><pre><span class=\"token keyword\">SELECT</span> Sname</pre></td></tr><tr><td data-num=\"112\"></td><td><pre><span class=\"token keyword\">FROM</span> Student</pre></td></tr><tr><td data-num=\"113\"></td><td><pre><span class=\"token keyword\">WHERE</span> <span class=\"token operator\">NOT</span> <span class=\"token keyword\">EXISTS</span><span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"114\"></td><td><pre>        <span class=\"token keyword\">SELECT</span> <span class=\"token operator\">*</span></pre></td></tr><tr><td data-num=\"115\"></td><td><pre>        <span class=\"token keyword\">FROM</span> SC</pre></td></tr><tr><td data-num=\"116\"></td><td><pre>        <span class=\"token keyword\">WHERE</span> Sno <span class=\"token operator\">=</span> Student<span class=\"token punctuation\">.</span>Sno</pre></td></tr><tr><td data-num=\"117\"></td><td><pre>          <span class=\"token operator\">AND</span> Cno <span class=\"token operator\">=</span> <span class=\"token string\">'1'</span></pre></td></tr><tr><td data-num=\"118\"></td><td><pre>    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"119\"></td><td><pre></pre></td></tr><tr><td data-num=\"120\"></td><td><pre><span class=\"token comment\"># [例 3.55] 查询与 “刘晨” 在同一 个系学习的学生。</span></pre></td></tr><tr><td data-num=\"121\"></td><td><pre><span class=\"token keyword\">SELECT</span> Sno<span class=\"token punctuation\">,</span> Sname<span class=\"token punctuation\">,</span> Sdept</pre></td></tr><tr><td data-num=\"122\"></td><td><pre><span class=\"token keyword\">FROM</span> Student S1</pre></td></tr><tr><td data-num=\"123\"></td><td><pre><span class=\"token keyword\">WHERE</span> <span class=\"token keyword\">EXISTS</span><span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"124\"></td><td><pre>              <span class=\"token keyword\">SELECT</span> <span class=\"token operator\">*</span></pre></td></tr><tr><td data-num=\"125\"></td><td><pre>              <span class=\"token keyword\">FROM</span> Student S2</pre></td></tr><tr><td data-num=\"126\"></td><td><pre>              <span class=\"token keyword\">WHERE</span> S2<span class=\"token punctuation\">.</span>Sdept <span class=\"token operator\">=</span> S1<span class=\"token punctuation\">.</span>Sdept</pre></td></tr><tr><td data-num=\"127\"></td><td><pre>              <span class=\"token operator\">AND</span> S2<span class=\"token punctuation\">.</span>Sname <span class=\"token operator\">=</span> <span class=\"token string\">'刘晨'</span></pre></td></tr><tr><td data-num=\"128\"></td><td><pre>          <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"129\"></td><td><pre></pre></td></tr><tr><td data-num=\"130\"></td><td><pre><span class=\"token comment\"># [例 3.62] 查询选修了全部课程的学生姓名。</span></pre></td></tr><tr><td data-num=\"131\"></td><td><pre><span class=\"token comment\"># 存在量词表示全称量词</span></pre></td></tr><tr><td data-num=\"132\"></td><td><pre><span class=\"token comment\"># 即，不存在没有修过的课程</span></pre></td></tr><tr><td data-num=\"133\"></td><td><pre><span class=\"token keyword\">SELECT</span> Sname</pre></td></tr><tr><td data-num=\"134\"></td><td><pre><span class=\"token keyword\">FROM</span> Student</pre></td></tr><tr><td data-num=\"135\"></td><td><pre><span class=\"token keyword\">WHERE</span> <span class=\"token operator\">NOT</span> <span class=\"token keyword\">EXISTS</span><span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"136\"></td><td><pre>        <span class=\"token keyword\">SELECT</span> <span class=\"token operator\">*</span></pre></td></tr><tr><td data-num=\"137\"></td><td><pre>        <span class=\"token keyword\">FROM</span> Course</pre></td></tr><tr><td data-num=\"138\"></td><td><pre>        <span class=\"token keyword\">WHERE</span> <span class=\"token operator\">NOT</span> <span class=\"token keyword\">EXISTS</span><span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"139\"></td><td><pre>                <span class=\"token keyword\">SELECT</span> <span class=\"token operator\">*</span> </pre></td></tr><tr><td data-num=\"140\"></td><td><pre>            \t<span class=\"token keyword\">FROM</span> SC </pre></td></tr><tr><td data-num=\"141\"></td><td><pre>            \t<span class=\"token keyword\">WHERE</span> Sno <span class=\"token operator\">=</span> Student<span class=\"token punctuation\">.</span>Sno </pre></td></tr><tr><td data-num=\"142\"></td><td><pre>            \t\t<span class=\"token operator\">AND</span> Cno <span class=\"token operator\">=</span> Course<span class=\"token punctuation\">.</span>Cno</pre></td></tr><tr><td data-num=\"143\"></td><td><pre>            <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"144\"></td><td><pre>    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"145\"></td><td><pre></pre></td></tr><tr><td data-num=\"146\"></td><td><pre><span class=\"token comment\"># [例 3.62] 改</span></pre></td></tr><tr><td data-num=\"147\"></td><td><pre><span class=\"token keyword\">SELECT</span> Sname</pre></td></tr><tr><td data-num=\"148\"></td><td><pre><span class=\"token keyword\">FROM</span> student</pre></td></tr><tr><td data-num=\"149\"></td><td><pre><span class=\"token keyword\">WHERE</span> Sno <span class=\"token operator\">IN</span> <span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"150\"></td><td><pre>    <span class=\"token keyword\">SELECT</span> Sno</pre></td></tr><tr><td data-num=\"151\"></td><td><pre>    <span class=\"token keyword\">FROM</span> SC</pre></td></tr><tr><td data-num=\"152\"></td><td><pre>    <span class=\"token keyword\">Group</span> <span class=\"token keyword\">by</span> Sno</pre></td></tr><tr><td data-num=\"153\"></td><td><pre>    <span class=\"token keyword\">HAVING</span> <span class=\"token function\">count</span><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">SELECT</span> <span class=\"token function\">count</span><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">FROM</span> course<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"154\"></td><td><pre><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"155\"></td><td><pre></pre></td></tr><tr><td data-num=\"156\"></td><td><pre><span class=\"token comment\"># [例 3.63] 查询至少选修了学生 201215122 选修的全部课程的学生号码。</span></pre></td></tr><tr><td data-num=\"157\"></td><td><pre><span class=\"token comment\"># 不存在这样的课程 y，学生 201215122 选修了 y，而学生 x 没有选。</span></pre></td></tr><tr><td data-num=\"158\"></td><td><pre><span class=\"token keyword\">SELECT</span> <span class=\"token keyword\">DISTINCT</span> Sno</pre></td></tr><tr><td data-num=\"159\"></td><td><pre><span class=\"token keyword\">FROM</span> SC SCX</pre></td></tr><tr><td data-num=\"160\"></td><td><pre><span class=\"token keyword\">WHERE</span> <span class=\"token operator\">NOT</span> <span class=\"token keyword\">EXISTS</span><span class=\"token punctuation\">(</span>  <span class=\"token comment\"># 学生 201215122 选修了而学生 x 没有选的课程</span></pre></td></tr><tr><td data-num=\"161\"></td><td><pre>        <span class=\"token keyword\">SELECT</span> <span class=\"token operator\">*</span></pre></td></tr><tr><td data-num=\"162\"></td><td><pre>        <span class=\"token keyword\">FROM</span> SC SCY</pre></td></tr><tr><td data-num=\"163\"></td><td><pre>        <span class=\"token keyword\">WHERE</span> SCY<span class=\"token punctuation\">.</span>Sno <span class=\"token operator\">=</span> <span class=\"token string\">'201215122'</span> <span class=\"token operator\">AND</span> <span class=\"token operator\">NOT</span> <span class=\"token keyword\">EXISTS</span><span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"164\"></td><td><pre>                <span class=\"token keyword\">SELECT</span> <span class=\"token operator\">*</span>  <span class=\"token comment\"># 学生 x 选修的课程 y</span></pre></td></tr><tr><td data-num=\"165\"></td><td><pre>                <span class=\"token keyword\">FROM</span> SC SCZ</pre></td></tr><tr><td data-num=\"166\"></td><td><pre>                <span class=\"token keyword\">WHERE</span> SCZ<span class=\"token punctuation\">.</span>Sno <span class=\"token operator\">=</span> SCX<span class=\"token punctuation\">.</span>Sno</pre></td></tr><tr><td data-num=\"167\"></td><td><pre>                  <span class=\"token operator\">AND</span> SCZ<span class=\"token punctuation\">.</span>Cno <span class=\"token operator\">=</span> SCY<span class=\"token punctuation\">.</span>Cno</pre></td></tr><tr><td data-num=\"168\"></td><td><pre>            <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"169\"></td><td><pre>    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><h3 id=\"集合操作\"><a class=\"anchor\" href=\"#集合操作\">#</a> 集合操作</h3>\n<ul>\n<li>\n<p>并操作 UNION<br />\n 交操作 INTERSECT<br />\n 差操作 EXCEPT</p>\n</li>\n<li>\n<p>UNION：将多个查询结果合并起来时，系统自动去掉重复元组<br />\n UNION ALL：将多个查询结果合并起来时，保留重复元组</p>\n</li>\n</ul>\n<p>&lt;img src=&quot;<span class=\"exturl\" data-url=\"aHR0cHM6Ly9wZW5nLWltZy5vc3MtY24tc2hhbmdoYWkuYWxpeXVuY3MuY29tL21hcmtkb3duLWltZy9pbWFnZS0yMDIyMDYxODE2NTMzNDk3NC5wbmc=\">https://peng-img.oss-cn-shanghai.aliyuncs.com/markdown-img/image-20220618165334974.png</span>&quot; alt=&quot;image-20220618165334974&quot;  /&gt;</p>\n<p>&lt;img src=&quot;<span class=\"exturl\" data-url=\"aHR0cHM6Ly9wZW5nLWltZy5vc3MtY24tc2hhbmdoYWkuYWxpeXVuY3MuY29tL21hcmtkb3duLWltZy9pbWFnZS0yMDIyMDYxODE2NTM0NTI1NC5wbmc=\">https://peng-img.oss-cn-shanghai.aliyuncs.com/markdown-img/image-20220618165345254.png</span>&quot; alt=&quot;image-20220618165345254&quot;  /&gt;</p>\n<p><img data-src=\"https://peng-img.oss-cn-shanghai.aliyuncs.com/markdown-img/image-20220618165424605.png\" alt=\"image-20220618165424605\" /></p>\n<h3 id=\"基于派生表的查询\"><a class=\"anchor\" href=\"#基于派生表的查询\">#</a> 基于派生表的查询</h3>\n<p>通过 FROM 子句生成派生标的时候，AS 关键字可以省略，<strong>派生关系必须指定一个别名</strong></p>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">SELECT</span> Sno<span class=\"token punctuation\">,</span> Cno</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">FROM</span> SC<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">SELECT</span> Sno<span class=\"token punctuation\">,</span> <span class=\"token function\">Avg</span><span class=\"token punctuation\">(</span>Grade<span class=\"token punctuation\">)</span> <span class=\"token keyword\">FROM</span> SC <span class=\"token keyword\">GROUP</span> <span class=\"token keyword\">BY</span> Sno<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>\t\t<span class=\"token keyword\">AS</span> Avg_sc<span class=\"token punctuation\">(</span>avg_sno<span class=\"token punctuation\">,</span> avg_grade<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>\t\t<span class=\"token keyword\">WHERE</span> SC<span class=\"token punctuation\">.</span>Sno <span class=\"token operator\">=</span> Avg_sc<span class=\"token punctuation\">.</span>avg_sno <span class=\"token operator\">AND</span> SC<span class=\"token punctuation\">.</span>Grade <span class=\"token operator\">>=</span> Avg_sc<span class=\"token punctuation\">.</span>avg_grade<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">SELECT</span> Sname</pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token keyword\">FROM</span> Student<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">SELECT</span> Sno <span class=\"token keyword\">FROM</span> SC <span class=\"token keyword\">WHERE</span> Cno<span class=\"token operator\">=</span><span class=\"token string\">'1'</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">AS</span> SC1</pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token keyword\">WHERE</span> Student<span class=\"token punctuation\">.</span>Sno<span class=\"token operator\">=</span>SC1<span class=\"token punctuation\">.</span>Sno</pre></td></tr></table></figure><h2 id=\"35-数据更新\"><a class=\"anchor\" href=\"#35-数据更新\">#</a> 3.5 数据更新</h2>\n<ul>\n<li>插入和修改和删除</li>\n</ul>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">INSERT</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>\t<span class=\"token keyword\">INTO</span> <span class=\"token operator\">&lt;</span>表名<span class=\"token operator\">></span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&lt;</span>属性列<span class=\"token number\">1</span><span class=\"token operator\">></span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">,</span><span class=\"token operator\">&lt;</span>属性列<span class=\"token number\">2</span> <span class=\"token operator\">></span>…<span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>\t<span class=\"token keyword\">VALUES</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">&lt;</span>常量<span class=\"token number\">1</span><span class=\"token operator\">></span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">,</span><span class=\"token operator\">&lt;</span>常量<span class=\"token number\">2</span><span class=\"token operator\">></span><span class=\"token punctuation\">]</span>… <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>             </pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token keyword\">UPDATE</span>  <span class=\"token operator\">&lt;</span>表名<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token keyword\">SET</span>  <span class=\"token operator\">&lt;</span>列名<span class=\"token operator\">>=</span><span class=\"token operator\">&lt;</span>表达式<span class=\"token operator\">></span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">,</span><span class=\"token operator\">&lt;</span>列名<span class=\"token operator\">>=</span><span class=\"token operator\">&lt;</span>表达式<span class=\"token operator\">></span><span class=\"token punctuation\">]</span>…</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token punctuation\">[</span><span class=\"token keyword\">WHERE</span> <span class=\"token operator\">&lt;</span>条件<span class=\"token operator\">></span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>   </pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token keyword\">DELETE</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token keyword\">FROM</span>     <span class=\"token operator\">&lt;</span>表名<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token punctuation\">[</span><span class=\"token keyword\">WHERE</span> <span class=\"token operator\">&lt;</span>条件<span class=\"token operator\">></span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">INSERT</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">INTO</span> Student<span class=\"token punctuation\">(</span>Sno<span class=\"token punctuation\">,</span> Cno<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">VALUES</span> <span class=\"token punctuation\">(</span><span class=\"token string\">'201215128'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'1'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">INSERT</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">INTO</span> Dept_age<span class=\"token punctuation\">(</span>Sdept<span class=\"token punctuation\">,</span> Avg_age<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token keyword\">SELECT</span> Sdept<span class=\"token punctuation\">,</span> <span class=\"token function\">AVG</span><span class=\"token punctuation\">(</span>Sage<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token keyword\">FROM</span> Student</pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token keyword\">GROUP</span> <span class=\"token keyword\">BY</span> Sdept<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token keyword\">UPDATE</span> Student</pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token keyword\">SET</span> Sage <span class=\"token operator\">=</span> <span class=\"token number\">22</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token keyword\">WHERE</span> Sno <span class=\"token operator\">=</span> <span class=\"token string\">'211250106'</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token keyword\">DELETE</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token keyword\">From</span> Student</pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token keyword\">WHERE</span> Sno <span class=\"token operator\">=</span> <span class=\"token string\">'211250106'</span></pre></td></tr></table></figure><p><img data-src=\"https://peng-img.oss-cn-shanghai.aliyuncs.com/markdown-img/image-20220618165546535.png\" alt=\"image-20220618165546535\" /></p>\n<h2 id=\"36-空值的处理重要\"><a class=\"anchor\" href=\"#36-空值的处理重要\">#</a> 3.6 空值的处理（重要）</h2>\n<ul>\n<li>空值就是 “不知道” 或 “不存在” 或 “无意义” 的值。</li>\n<li>一般有以下几种情况：\n<ul>\n<li>该属性应该有一个值，但目前不知道它的具体值<br />\n该属性不应该有值<br />\n由于某种原因不便于填写，或还没有赋值</li>\n</ul>\n</li>\n</ul>\n<p>判断空值用  <code>IS NULL</code>  或  <code>IS NOT NULL</code> 。</p>\n<p>有  <code>NOT NULL</code>  限制的  <code>UNIQUE</code>  属性不能为空值，码不能为空值。</p>\n<p>空值与其他值的算术运算结果为空值，空值与其他值的比较运算结果为  <code>UNKNOWN</code> 。</p>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\"># [例 3.83] 选出选修 1 号课程的不及格的学生以及缺考的学生。</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">SELECT</span> Sno</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">FROM</span> SC</pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">WHERE</span> Grade <span class=\"token operator\">&lt;</span> <span class=\"token number\">60</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>  <span class=\"token operator\">AND</span> Cno <span class=\"token operator\">=</span> <span class=\"token string\">'1'</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">UNION</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token keyword\">SELECT</span> Sno</pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token keyword\">FROM</span> SC</pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token keyword\">WHERE</span> Grade <span class=\"token operator\">IS</span> <span class=\"token boolean\">NULL</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>  <span class=\"token operator\">AND</span> Cno <span class=\"token operator\">=</span> <span class=\"token string\">'1'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token comment\"># 或者</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token keyword\">SELECT</span> Sno</pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token keyword\">FROM</span> SC</pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token keyword\">WHERE</span> Cno <span class=\"token operator\">=</span> <span class=\"token string\">'1'</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>  <span class=\"token operator\">AND</span> <span class=\"token punctuation\">(</span>Grade <span class=\"token operator\">&lt;</span> <span class=\"token number\">60</span> <span class=\"token operator\">OR</span> Grade <span class=\"token operator\">IS</span> <span class=\"token boolean\">NULL</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><ul>\n<li>属性定义（或者域定义）中\n<ul>\n<li>有 NOT NULL 约束条件的不能取空值<br />\n加了 UNIQUE 限制的属性不能取空值<br />\n码属性不能取空值</li>\n</ul>\n</li>\n</ul>\n<p>&lt;img src=&quot;<span class=\"exturl\" data-url=\"aHR0cHM6Ly9wZW5nLWltZy5vc3MtY24tc2hhbmdoYWkuYWxpeXVuY3MuY29tL21hcmtkb3duLWltZy9pbWFnZS0yMDIyMDYxODE2NTgxNDMxMC5wbmc=\">https://peng-img.oss-cn-shanghai.aliyuncs.com/markdown-img/image-20220618165814310.png</span>&quot; alt=&quot;image-20220618165814310&quot;  /&gt;&lt;img src=&quot;<span class=\"exturl\" data-url=\"aHR0cHM6Ly9wZW5nLWltZy5vc3MtY24tc2hhbmdoYWkuYWxpeXVuY3MuY29tL21hcmtkb3duLWltZy9pbWFnZS0yMDIyMDYxODE2NTgyMTg3Ni5wbmc=\">https://peng-img.oss-cn-shanghai.aliyuncs.com/markdown-img/image-20220618165821876.png</span>&quot; alt=&quot;image-20220618165821876&quot;  /&gt;</p>\n<h2 id=\"37-视图\"><a class=\"anchor\" href=\"#37-视图\">#</a> 3.7 视图</h2>\n<ul>\n<li>\n<p>基本表定义：基本表式独立存在的表，在 SQL 中一个关系就对应一个表</p>\n</li>\n<li>\n<p>视图定义：<strong>视图是由数据库中的一个表或多个表导出的虚拟表</strong>，其作用是方便用户对数据的操作。</p>\n</li>\n<li>\n<p>基本表和视图的区别和联系：</p>\n<ul>\n<li>\n<p>视图在概念上与基本表等同，用户可以像基本表一样使用视图</p>\n</li>\n<li>\n<p><strong>只存放视图的定义</strong>，不存放视图对应的数据</p>\n</li>\n<li>\n<p>基表中的数据发生变化，从视图中查询出的数据也随之改变</p>\n</li>\n</ul>\n</li>\n<li>\n<p>视图的作用</p>\n<ul>\n<li>能够简化用户的操作（视图中数据不是直接来自基本表时，能简化）</li>\n<li>能使用户以多种角度看待同一数据</li>\n<li>对重构数据库提供了一定程度的<strong>逻辑独立性</strong></li>\n<li>能够对机密数据<strong>提供安全保护</strong>（每个用户只能看到他有权看到的数据）</li>\n<li>适当的利用视图可以更清晰的表达查询<img data-src=\"https://peng-img.oss-cn-shanghai.aliyuncs.com/markdown-img/image-20220618170303260.png\" alt=\"image-20220618170303260\" /></li>\n</ul>\n</li>\n<li>\n<p>哪些可以更新？</p>\n</li>\n<li>\n<p>行列子集视图</p>\n<ul>\n<li>若一个视图是从单个基本表导出的，并且只是去掉了基本表的某些行和某些列，但保留了主码，我们称这类视图为行列子集视图</li>\n</ul>\n</li>\n<li>\n<p>非行列子集视图</p>\n</li>\n<li>\n<p>视图不仅可以建立在一个或多个基本表上，也可以建立在一个或多个已定义好的视图上，或建立在基本表与视图上</p>\n</li>\n</ul>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">CREATE</span> <span class=\"token keyword\">VIEW</span> <span class=\"token operator\">&lt;</span>视图名<span class=\"token operator\">></span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&lt;</span>列名<span class=\"token operator\">></span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">,</span><span class=\"token operator\">&lt;</span>列名<span class=\"token operator\">></span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">AS</span> <span class=\"token operator\">&lt;</span>子查询<span class=\"token operator\">></span> <span class=\"token punctuation\">[</span><span class=\"token keyword\">WITH</span> <span class=\"token keyword\">CHECK</span> <span class=\"token keyword\">OPTION</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\"># WITH CKECK OPTION 表示对视图进行更新操作时要保证更新后的行满足谓词条件（即子查询中的条件，即子查询中的 WHERE）</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token comment\"># 子查询可以是任意的 SELECT 语句，是否可以含有 ORDER BY 子句和 DISTINCT 短语，则决定具体系统的实现。</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token comment\"># [例 3.85] 建立信息系学生 的视图，并要求进行修改 和插入操作时仍需保证该 视图只有信息系的学生。</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token keyword\">CREATE</span> <span class=\"token keyword\">VIEW</span> IS_Student <span class=\"token keyword\">AS</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token keyword\">SELECT</span> Sno<span class=\"token punctuation\">,</span> Sname<span class=\"token punctuation\">,</span> Sage</pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token keyword\">FROM</span> Student</pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token keyword\">WHERE</span> Sdept <span class=\"token operator\">=</span> <span class=\"token string\">'IS'</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token keyword\">WITH</span> <span class=\"token keyword\">CHECK</span> <span class=\"token keyword\">OPTION</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token comment\"># [例 3.86] 建立信息系选修了 1 号课程的学生的视图（包括学号、 姓名、成绩）。</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token keyword\">CREATE</span> <span class=\"token keyword\">VIEW</span> IS_S1<span class=\"token punctuation\">(</span>Sno<span class=\"token punctuation\">,</span> Sname<span class=\"token punctuation\">,</span> Grade<span class=\"token punctuation\">)</span> <span class=\"token keyword\">AS</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token keyword\">SELECT</span> Student<span class=\"token punctuation\">.</span>Sno<span class=\"token punctuation\">,</span> Sname<span class=\"token punctuation\">,</span> Grade</pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token keyword\">FROM</span> Student<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>     SC</pre></td></tr><tr><td data-num=\"19\"></td><td><pre><span class=\"token keyword\">WHERE</span> Sdept <span class=\"token operator\">=</span> <span class=\"token string\">'IS'</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>  <span class=\"token operator\">AND</span> Student<span class=\"token punctuation\">.</span>Sno <span class=\"token operator\">=</span> SC<span class=\"token punctuation\">.</span>Sno</pre></td></tr><tr><td data-num=\"21\"></td><td><pre>  <span class=\"token operator\">AND</span> SC<span class=\"token punctuation\">.</span>Cno <span class=\"token operator\">=</span> <span class=\"token string\">'1'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre></pre></td></tr><tr><td data-num=\"23\"></td><td><pre><span class=\"token comment\"># [例 3.87] 建立信息系选修 了 1 号课程且成绩在 90 分 以上的学生的视图。</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre><span class=\"token keyword\">CREATE</span> <span class=\"token keyword\">VIEW</span> IS_S2 <span class=\"token keyword\">AS</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre><span class=\"token keyword\">SELECT</span> Sno<span class=\"token punctuation\">,</span> Sname<span class=\"token punctuation\">,</span> Grade</pre></td></tr><tr><td data-num=\"26\"></td><td><pre><span class=\"token keyword\">FROM</span> IS_S1</pre></td></tr><tr><td data-num=\"27\"></td><td><pre><span class=\"token keyword\">WHERE</span> Grade <span class=\"token operator\">>=</span> <span class=\"token number\">90</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre></pre></td></tr><tr><td data-num=\"29\"></td><td><pre><span class=\"token comment\"># [例 3.88] 定义一个反映学 生出生年份的视图。</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre><span class=\"token keyword\">CREATE</span> <span class=\"token keyword\">VIEW</span> BT_S<span class=\"token punctuation\">(</span>Sno<span class=\"token punctuation\">,</span> Sname<span class=\"token punctuation\">,</span> Sbirth<span class=\"token punctuation\">)</span> <span class=\"token keyword\">AS</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre><span class=\"token keyword\">SELECT</span> Sno<span class=\"token punctuation\">,</span> Sname<span class=\"token punctuation\">,</span> <span class=\"token number\">2014</span> <span class=\"token operator\">-</span> Sage</pre></td></tr><tr><td data-num=\"32\"></td><td><pre><span class=\"token keyword\">FROM</span> Student<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre></pre></td></tr><tr><td data-num=\"34\"></td><td><pre><span class=\"token comment\"># [例 3.89] 将学生的学号及平 均成绩定义为一个视图</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre><span class=\"token keyword\">CREATE</span> <span class=\"token keyword\">VIEW</span> S_G<span class=\"token punctuation\">(</span>Sno<span class=\"token punctuation\">,</span> Gavg<span class=\"token punctuation\">)</span> <span class=\"token keyword\">AS</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre><span class=\"token keyword\">SELECT</span> Sno<span class=\"token punctuation\">,</span> <span class=\"token function\">AVG</span><span class=\"token punctuation\">(</span>Grade<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre><span class=\"token keyword\">FROM</span> SC</pre></td></tr><tr><td data-num=\"38\"></td><td><pre><span class=\"token keyword\">GROUP</span> <span class=\"token keyword\">BY</span> Sno<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre></pre></td></tr><tr><td data-num=\"40\"></td><td><pre><span class=\"token comment\"># [例 3.90] 将 Student 表中所有女生记 录定义为一个视图</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre><span class=\"token comment\"># 修改基表 Student 的结构后，Student 表与 F_Student 视图 的映象关系被破坏，导致该视图不能正确工作。</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre><span class=\"token keyword\">CREATE</span> <span class=\"token keyword\">VIEW</span> F_Student<span class=\"token punctuation\">(</span>F_Sno<span class=\"token punctuation\">,</span> name<span class=\"token punctuation\">,</span> sex<span class=\"token punctuation\">,</span> age<span class=\"token punctuation\">,</span> dept<span class=\"token punctuation\">)</span> <span class=\"token keyword\">AS</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre><span class=\"token keyword\">SELECT</span> <span class=\"token operator\">*</span> <span class=\"token comment\">/* 不指定属性列 */</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre><span class=\"token keyword\">FROM</span> Student</pre></td></tr><tr><td data-num=\"45\"></td><td><pre><span class=\"token keyword\">WHERE</span> Ssex <span class=\"token operator\">=</span> <span class=\"token string\">'女'</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">DROP</span> <span class=\"token keyword\">VIEW</span> <span class=\"token operator\">&lt;</span>视图名<span class=\"token operator\">></span><span class=\"token punctuation\">[</span><span class=\"token keyword\">CASCADE</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\"># [例 3.91] 删除视图 BT_S 和 IS_S1</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">DROP</span> <span class=\"token keyword\">VIEW</span> BT_S<span class=\"token punctuation\">;</span> <span class=\"token comment\">/* 成功执行 */</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">DROP</span> <span class=\"token keyword\">VIEW</span> IS_S1<span class=\"token punctuation\">;</span> <span class=\"token comment\">/* 拒绝执行 */</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">DROP</span> <span class=\"token keyword\">VIEW</span> IS_S1 <span class=\"token keyword\">CASCADE</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token comment\"># 成功执行</span></pre></td></tr></table></figure><figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\"># [例 3.92] 在信息系学生的视 图中找出年龄小于 20 岁的学生。</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">SELECT</span> Sno<span class=\"token punctuation\">,</span> Sage</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">FROM</span> IS_Student</pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">WHERE</span> Sage <span class=\"token operator\">&lt;</span> <span class=\"token number\">20</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token comment\"># 视图消解转换后的查询语句为：</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">SELECT</span> Sno<span class=\"token punctuation\">,</span> Sage</pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token keyword\">FROM</span> Student</pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token keyword\">WHERE</span> Sdept <span class=\"token operator\">=</span> <span class=\"token string\">'IS'</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>  <span class=\"token operator\">AND</span> Sage <span class=\"token operator\">&lt;</span> <span class=\"token number\">20</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token comment\"># [例 3.93] 查询选修了 1 号课 程的信息系学生</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token keyword\">SELECT</span> IS_Student<span class=\"token punctuation\">.</span>Sno<span class=\"token punctuation\">,</span> Sname</pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token keyword\">FROM</span> IS_Student<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>     SC</pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token keyword\">WHERE</span> IS_Student<span class=\"token punctuation\">.</span>Sno <span class=\"token operator\">=</span> SC<span class=\"token punctuation\">.</span>Sno</pre></td></tr><tr><td data-num=\"16\"></td><td><pre>  <span class=\"token operator\">AND</span> SC<span class=\"token punctuation\">.</span>Cno <span class=\"token operator\">=</span> <span class=\"token string\">'1'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre></pre></td></tr><tr><td data-num=\"18\"></td><td><pre><span class=\"token comment\"># [例 3.94] 在 S_G 视图中查询平均成 绩在 90 分以上的学生学号和平均成绩</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre><span class=\"token keyword\">SELECT</span> <span class=\"token operator\">*</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre><span class=\"token keyword\">FROM</span> S_G</pre></td></tr><tr><td data-num=\"21\"></td><td><pre><span class=\"token keyword\">WHERE</span> Gavg <span class=\"token operator\">>=</span> <span class=\"token number\">90</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre></pre></td></tr><tr><td data-num=\"23\"></td><td><pre><span class=\"token comment\"># S_G 视图的子查询定义：</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre><span class=\"token keyword\">SELECT</span> Sno<span class=\"token punctuation\">,</span> <span class=\"token function\">AVG</span><span class=\"token punctuation\">(</span>Grade<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre><span class=\"token keyword\">FROM</span> SC</pre></td></tr><tr><td data-num=\"26\"></td><td><pre><span class=\"token keyword\">GROUP</span> <span class=\"token keyword\">BY</span> Sno<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre></pre></td></tr><tr><td data-num=\"28\"></td><td><pre><span class=\"token comment\"># 错误：</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre><span class=\"token keyword\">SELECT</span> Sno<span class=\"token punctuation\">,</span> <span class=\"token function\">AVG</span><span class=\"token punctuation\">(</span>Grade<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre><span class=\"token keyword\">FROM</span> SC</pre></td></tr><tr><td data-num=\"31\"></td><td><pre><span class=\"token keyword\">WHERE</span> <span class=\"token function\">AVG</span><span class=\"token punctuation\">(</span>Grade<span class=\"token punctuation\">)</span> <span class=\"token operator\">>=</span> <span class=\"token number\">90</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre><span class=\"token keyword\">GROUP</span> <span class=\"token keyword\">BY</span> Sno<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre></pre></td></tr><tr><td data-num=\"34\"></td><td><pre><span class=\"token comment\"># 正确：</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre><span class=\"token keyword\">SELECT</span> Sno<span class=\"token punctuation\">,</span> <span class=\"token function\">AVG</span><span class=\"token punctuation\">(</span>Grade<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre><span class=\"token keyword\">FROM</span> SC</pre></td></tr><tr><td data-num=\"37\"></td><td><pre><span class=\"token keyword\">GROUP</span> <span class=\"token keyword\">BY</span> Sno</pre></td></tr><tr><td data-num=\"38\"></td><td><pre><span class=\"token keyword\">HAVING</span> <span class=\"token function\">AVG</span><span class=\"token punctuation\">(</span>Grade<span class=\"token punctuation\">)</span> <span class=\"token operator\">>=</span> <span class=\"token number\">90</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre></pre></td></tr><tr><td data-num=\"40\"></td><td><pre><span class=\"token comment\"># 或者使用派生表</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre><span class=\"token keyword\">SELECT</span> <span class=\"token operator\">*</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre><span class=\"token keyword\">FROM</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">SELECT</span> Sno<span class=\"token punctuation\">,</span> <span class=\"token function\">AVG</span><span class=\"token punctuation\">(</span>Grade<span class=\"token punctuation\">)</span> <span class=\"token keyword\">FROM</span> SC <span class=\"token keyword\">GROUP</span> <span class=\"token keyword\">BY</span> Sno<span class=\"token punctuation\">)</span> <span class=\"token keyword\">AS</span> S_G<span class=\"token punctuation\">(</span>Sno<span class=\"token punctuation\">,</span> Gavg<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre><span class=\"token keyword\">WHERE</span> Gavg <span class=\"token operator\">>=</span> <span class=\"token number\">90</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><h1 id=\"第4章-数据库安全性\"><a class=\"anchor\" href=\"#第4章-数据库安全性\">#</a> 第 4 章 数据库安全性</h1>\n<blockquote>\n<p>ppt 23-25</p>\n</blockquote>\n<p>数据库的安全性是<strong>指保护数据库以防止不合法使用所造成的数据泄露、更改或破坏</strong></p>\n<p><img data-src=\"https://quasdo.oss-cn-hangzhou.aliyuncs.com/img/image-20230609212932647.png\" alt=\"image-20230609212932647\" /></p>\n<p>C1 进行自主存取控制 DAC</p>\n<p>C2 是安全产品的最低档次</p>\n<p>B1 实施强制存取控制 MAC，是真正意义上的安全产品</p>\n<p><img data-src=\"https://quasdo.oss-cn-hangzhou.aliyuncs.com/img/image-20230609213543484.png\" alt=\"image-20230609213543484\" /></p>\n<p><img data-src=\"https://quasdo.oss-cn-hangzhou.aliyuncs.com/img/image-20230609213523289.png\" alt=\"image-20230609213523289\" /></p>\n<ul>\n<li>\n<p>存取控制（机制）</p>\n<ul>\n<li>\n<p>定义用户权限：用户对某一数据对象的操作权力称为权限，<strong>DBMS 提供适当的语言来定义用户权限，存放在数据字典中</strong></p>\n</li>\n<li>\n<p>合法权限检查：<strong>用户发出存取数据库操作请求，DBMS 进行合法权限检查</strong></p>\n<p><img data-src=\"https://quasdo.oss-cn-hangzhou.aliyuncs.com/img/image-20230612220056903.png\" alt=\"image-20230612220056903\" /></p>\n</li>\n</ul>\n</li>\n<li>\n<p>自主存取控制（DAC Discretionary Access ControlS）</p>\n<ul>\n<li>C2 级</li>\n<li>用户对不同的数据对象有不同的存取权限</li>\n<li>不同的用户对同一对象也有不同的权限</li>\n<li>用户还可将其拥有的存取权限转授给其他用户</li>\n<li>使用 SQL 中的 <code>GRANT</code>  和 <code>REVOKE</code>\n<ul>\n<li>定义各个用户对不同数据对象的存取权限。当用户对数据库访问时首先检查用户的存取权限。防止不合法用户对数据库的存取</li>\n<li><img data-src=\"https://quasdo.oss-cn-hangzhou.aliyuncs.com/img/image-20230609214048305.png\" alt=\"image-20230609214048305\" /></li>\n<li><img data-src=\"https://quasdo.oss-cn-hangzhou.aliyuncs.com/img/image-20230609214115426.png\" alt=\"image-20230609214115426\" /></li>\n</ul>\n</li>\n<li>创建数据库模式的权限\n<ul>\n<li><img data-src=\"https://quasdo.oss-cn-hangzhou.aliyuncs.com/img/image-20230609214245214.png\" alt=\"image-20230609214245214\" /></li>\n<li><img data-src=\"https://quasdo.oss-cn-hangzhou.aliyuncs.com/img/image-20230609214253774.png\" alt=\"image-20230609214253774\" /></li>\n</ul>\n</li>\n<li>数据库角色\n<ul>\n<li>CREATE</li>\n<li>GRANT</li>\n<li>REVOKE</li>\n</ul>\n</li>\n<li>自主存取控制缺点\n<ul>\n<li>可能存在数据的 “无意泄露 “，数据本身并无安全性标记</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<p>强制存取控制 （MAC)</p>\n<p><img data-src=\"https://quasdo.oss-cn-hangzhou.aliyuncs.com/img/image-20230612220035959.png\" alt=\"image-20230612220035959\" /></p>\n<p><img data-src=\"https://quasdo.oss-cn-hangzhou.aliyuncs.com/img/image-20230612220234134.png\" alt=\"image-20230612220234134\" /></p>\n<ul>\n<li>B1 级，保证更高程度的安全性</li>\n<li>每一个数据对象被标以一定的密级</li>\n<li>每一个用户也被授予某一个级别的许可证</li>\n<li>对于任意一个对象，只有具有合法许可证的用户才可以存取</li>\n<li>用户不能直接感知或进行控制</li>\n<li>适用于对数据有严格而固定密级分类的部门\n<ul>\n<li>军事部门</li>\n<li>政府部门</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<p>&lt;img src=&quot;<span class=\"exturl\" data-url=\"aHR0cHM6Ly9wZW5nLWltZy5vc3MtY24tc2hhbmdoYWkuYWxpeXVuY3MuY29tL21hcmtkb3duLWltZy9pbWFnZS0yMDIyMDYxODE3MTMzMjM4MC5wbmc=\">https://peng-img.oss-cn-shanghai.aliyuncs.com/markdown-img/image-20220618171332380.png</span>&quot; alt=&quot;image-20220618171332380&quot;  /&gt;&lt;img src=&quot;<span class=\"exturl\" data-url=\"aHR0cHM6Ly9wZW5nLWltZy5vc3MtY24tc2hhbmdoYWkuYWxpeXVuY3MuY29tL21hcmtkb3duLWltZy9pbWFnZS0yMDIyMDYxODE3MTI0NDU2NS5wbmc=\">https://peng-img.oss-cn-shanghai.aliyuncs.com/markdown-img/image-20220618171244565.png</span>&quot; alt=&quot;image-20220618171244565&quot;  /&gt;&lt;img src=&quot;<span class=\"exturl\" data-url=\"aHR0cHM6Ly9wZW5nLWltZy5vc3MtY24tc2hhbmdoYWkuYWxpeXVuY3MuY29tL21hcmtkb3duLWltZy9pbWFnZS0yMDIyMDYxODE3MTI1NTAzOS5wbmc=\">https://peng-img.oss-cn-shanghai.aliyuncs.com/markdown-img/image-20220618171255039.png</span>&quot; alt=&quot;image-20220618171255039&quot;  /&gt;</p>\n<p>强制存取规则为什么要这么设计，有什么内容？要知道</p>\n<ul>\n<li>高等级才能知晓，低等级才能修改。（低级别可以通过写，来让高级别知道自己的修改）</li>\n<li>避免高等级的主观失误或故意而造成的泄密。</li>\n<li>并且数据无论怎么复制，密级都是固定的，一旦数据被发布，不能被修改</li>\n</ul>\n<p><img data-src=\"https://quasdo.oss-cn-hangzhou.aliyuncs.com/img/image-20230609214755656.png\" alt=\"image-20230609214755656\" /></p>\n<p><img data-src=\"https://quasdo.oss-cn-hangzhou.aliyuncs.com/img/image-20230609213138851.png\" alt=\"image-20230609213138851\" /></p>\n<p>关注 C1\\C2\\A1 的对应关系</p>\n<ul>\n<li>视图\n<ul>\n<li>把<strong>要保密的数据对无权存取这些数据的用户隐藏起来</strong>，对数据提供一定程度的安全保护</li>\n<li><code>CREATE VIEW [viewname] </code></li>\n<li><code>GRANT SELECT ON [view] to [user]</code></li>\n</ul>\n</li>\n<li>审计\n<ul>\n<li>启用一个专用的审计日志（Audit Log）<strong>将用户对数据库的所有操作记录在上面</strong></li>\n<li>审计员利用审计日志监控数据库中的各种行为，找出非法存取数据的人、时间和内容</li>\n<li>C2 以上安全级别的 DBMS 必须具有审计功能</li>\n<li>审计可选\n<ul>\n<li>耗费时间和空间</li>\n<li>DBA 可以根据应用对安全性的要求，灵活地打开或关闭审计功能</li>\n<li>用于安全性要求较高的部门</li>\n</ul>\n</li>\n<li>审计事件</li>\n<li>审计功能</li>\n<li>AUDIT\\NOAUDIT</li>\n</ul>\n</li>\n<li>数据加密\n<ul>\n<li>防止数据库中数据在<strong>存储和传输</strong>中失密的有效手段</li>\n<li>根据一定的算法将原始数据明文（ Plain text ）变换为不可直接识别的格式 密文（ Cipher text）</li>\n<li>加密方法\n<ul>\n<li>存储加密\n<ul>\n<li>透明存储加密</li>\n<li>非透明存储加密</li>\n</ul>\n</li>\n<li>传输加密\n<ul>\n<li>链路加密</li>\n<li>端到端加密</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>其他安全性保护\n<ul>\n<li>推理控制</li>\n<li>隐蔽信道</li>\n<li>数据隐私保护</li>\n</ul>\n</li>\n</ul>\n<h1 id=\"第5章-数据库完整性\"><a class=\"anchor\" href=\"#第5章-数据库完整性\">#</a> 第 5 章 数据库完整性</h1>\n<blockquote>\n<p>ppt 26-31</p>\n</blockquote>\n<p>数据库的完整性是指数据的<strong>正确性</strong>和<strong>相容性</strong>。</p>\n<ul>\n<li>完整性机制：\n<ol>\n<li>（定义功能）提供定义完整性约束条件的机制</li>\n<li>（检查功能）提供完整性检查的方法</li>\n<li>（违约处理功能）</li>\n</ol>\n</li>\n</ul>\n<ul>\n<li>\n<p>实体完整性  <code>PRIMARY KEY</code></p>\n<p><img data-src=\"https://quasdo.oss-cn-hangzhou.aliyuncs.com/img/image-20230610132519644.png\" alt=\"image-20230610132519644\" /></p>\n<ul>\n<li>区分列级、表级定义</li>\n<li>PRIMARY KEY is <strong>UNIQUE</strong></li>\n<li>PRIMARY KEY is <strong>NOT NULL</strong></li>\n<li>PRIMARY KEY has <strong>INDEX</strong></li>\n<li>完整性检查和违约处理\n<ul>\n<li>全表扫描（耗时）</li>\n<li>索引，如 B + 数索引</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<p>参照完整性  <code>FOREIGN KEY [] REFERENCES []</code></p>\n<p><img data-src=\"https://quasdo.oss-cn-hangzhou.aliyuncs.com/img/image-20230610132531345.png\" alt=\"image-20230610132531345\" /></p>\n<p><img data-src=\"https://quasdo.oss-cn-hangzhou.aliyuncs.com/img/image-20230610133451722.png\" alt=\"image-20230610133451722\" /></p>\n<p><img data-src=\"https://quasdo.oss-cn-hangzhou.aliyuncs.com/img/image-20230610132556407.png\" alt=\"image-20230610132556407\" /></p>\n<ul>\n<li>违约处理\n<ul>\n<li><strong>NO ACTION</strong>: 不允许该操作执行</li>\n<li><strong>CASCADE</strong>: 当删除或修改被参照表（Student）的一个元组造成了与参照表（SC）的不一致，则删除或修改参照表中的所有造成不一致的元组</li>\n<li><strong>SET-NULL</strong>: 当删除或修改被参照表的一个元组时造成了不一致，则将参照表中的所有造成不一致的元组的对应属性设置为空值。</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<p>用户定义完整性  <code>CONTRAINT [约束名](随便取的名字)　[约束条件]</code> （跟在哪个属性后面就对哪个属性生效）</p>\n<p><img data-src=\"https://quasdo.oss-cn-hangzhou.aliyuncs.com/img/image-20230610134615830.png\" alt=\"image-20230610134615830\" /></p>\n<p><img data-src=\"https://quasdo.oss-cn-hangzhou.aliyuncs.com/img/image-20230610134712028.png\" alt=\"image-20230610134712028\" /></p>\n<ul>\n<li>NOT NULL</li>\n<li>UNIQUE</li>\n<li>CHECK (条件)\n<ul>\n<li>eg:  <code>  CHECK (Ssex='女' OR Sname NOT LIKE 'Ms.%')</code></li>\n<li>当学生的性别是男时，其名字不能以 Ms. 打头。</li>\n</ul>\n</li>\n<li>CREATE/ALTER</li>\n</ul>\n</li>\n<li>\n<p>断言（不做要求了）</p>\n<ul>\n<li>\n<p><code>CREATE ASSERTION &lt;断言名&gt; &lt;CHECK 子句&gt;</code></p>\n</li>\n<li>\n<p><code>DROP ASSERTION &lt;断言名&gt;</code></p>\n<p><img data-src=\"https://quasdo.oss-cn-hangzhou.aliyuncs.com/img/image-20230610135037129.png\" alt=\"image-20230610135037129\" /></p>\n</li>\n<li>\n<p>断言创建以后，任何对断言中所涉及的关系的操作都会触发关系数据库管理系统对断言的检查，任何使断言不为真值的操作都会被拒绝执行</p>\n</li>\n</ul>\n</li>\n<li>\n<p>触发器（Trigger）是用户定义在关系表上的<strong>一类由事件驱动的特殊过程</strong></p>\n<ul>\n<li>触发器又叫作<strong>事件 - 条件 - 动作</strong>规则。</li>\n<li>触发器保存在数据库服务器中</li>\n<li>任何用户对表的增、删、改操作均由服务器自动激活相应的触发器</li>\n<li>触发器可以实施更为复杂的检查和操作，具有更精细和更强大的数据控制能力</li>\n<li>触发器的执行，是由触发事件激活的，并由数据库服务器自动执行</li>\n<li>一个数据表上可能定义了多个触发器，遵循如下的执行顺序:\n<ul>\n<li>执行该表上的 BEFORE 触发器；（谁先创建，谁先执行）</li>\n<li>激活触发器的 SQL 语句；</li>\n<li>执行该表上的 AFTER 触发器。</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">CREATE</span> <span class=\"token keyword\">TRIGGER</span> <span class=\"token operator\">&lt;</span>触发器名<span class=\"token operator\">></span> &#123;BEFORE <span class=\"token operator\">|</span> <span class=\"token keyword\">AFTER</span>&#125; <span class=\"token operator\">&lt;</span>触发事件<span class=\"token operator\">></span> </pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">ON</span> <span class=\"token operator\">&lt;</span>表名<span class=\"token operator\">></span> REFERENCING NEW<span class=\"token operator\">|</span>OLD <span class=\"token keyword\">ROW</span> <span class=\"token keyword\">AS</span><span class=\"token operator\">&lt;</span>变量<span class=\"token operator\">></span> </pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">FOR</span> EACH &#123;<span class=\"token keyword\">ROW</span> <span class=\"token operator\">|</span> STATEMENT&#125;</pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token punctuation\">[</span><span class=\"token keyword\">WHEN</span> <span class=\"token operator\">&lt;</span>触发条件<span class=\"token operator\">></span><span class=\"token punctuation\">]</span><span class=\"token operator\">&lt;</span>触发动作体<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token comment\">#[例 5.21] 当对表 SC 的 Grade 属性进行修改时，若分数增加了 10% 则将此次操作记录到下面表中：SC_U（Sno,Cno,Oldgrade,Newgrade）其中 Oldgrade 是修改前的分数，Newgrade 是修改后的分数。</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token keyword\">CREATE</span> <span class=\"token keyword\">TRIGGER</span>  SC_T\t\t</pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token keyword\">AFTER</span> <span class=\"token keyword\">UPDATE</span> <span class=\"token keyword\">OF</span> Grade <span class=\"token keyword\">ON</span> SC</pre></td></tr><tr><td data-num=\"9\"></td><td><pre> <span class=\"token comment\">/* 指明触发器激活的时间是在执行 UPDATE 后 */</span> </pre></td></tr><tr><td data-num=\"10\"></td><td><pre>REFERENCING</pre></td></tr><tr><td data-num=\"11\"></td><td><pre>\t    OLD <span class=\"token keyword\">row</span> <span class=\"token keyword\">AS</span>  OldTuple<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>\t    NEW <span class=\"token keyword\">row</span> <span class=\"token keyword\">AS</span>  NewTuple</pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token keyword\">FOR EACH ROW</span> <span class=\"token comment\">/* 行级触发器 */</span> </pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token comment\">/* FOR EACH STATEMENT 语句级触发器 */</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token keyword\">WHEN</span> <span class=\"token punctuation\">(</span>NewTuple<span class=\"token punctuation\">.</span>Grade <span class=\"token operator\">>=</span> <span class=\"token number\">1.1</span><span class=\"token operator\">*</span>OldTuple<span class=\"token punctuation\">.</span>Grade<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>\t    <span class=\"token keyword\">INSERT</span> <span class=\"token keyword\">INTO</span> SC_U<span class=\"token punctuation\">(</span>Sno<span class=\"token punctuation\">,</span>Cno<span class=\"token punctuation\">,</span>OldGrade<span class=\"token punctuation\">,</span>NewGrade<span class=\"token punctuation\">)</span>  </pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token keyword\">VALUES</span><span class=\"token punctuation\">(</span>OldTuple<span class=\"token punctuation\">.</span>Sno<span class=\"token punctuation\">,</span>OldTuple<span class=\"token punctuation\">.</span>Cno<span class=\"token punctuation\">,</span>OldTuple<span class=\"token punctuation\">.</span>Grade<span class=\"token punctuation\">,</span>NewTuple<span class=\"token punctuation\">.</span>Grade<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre></pre></td></tr><tr><td data-num=\"19\"></td><td><pre><span class=\"token keyword\">DROP</span> <span class=\"token keyword\">TRIGGER</span> <span class=\"token operator\">&lt;</span>触发器名<span class=\"token operator\">></span> <span class=\"token keyword\">ON</span> <span class=\"token operator\">&lt;</span>表名<span class=\"token operator\">></span></pre></td></tr></table></figure><h1 id=\"第6章-关系数据理论必考\"><a class=\"anchor\" href=\"#第6章-关系数据理论必考\">#</a> 第 6 章 关系数据理论（必考）</h1>\n<blockquote>\n<p>ppt 32-36</p>\n</blockquote>\n<h2 id=\"基本概念-2\"><a class=\"anchor\" href=\"#基本概念-2\">#</a> 基本概念</h2>\n<ul>\n<li>\n<p>关系模式，是一个五元组： <code>R(U,D,DOM,F)</code> ，</p>\n</li>\n<li>\n<p>数据依赖：是一个关系内部属性与属性之间的一种约束关系，通过属性间值的相等与否体现出来的数据间相关联系</p>\n<ul>\n<li>\n<p>多值依赖（Multi-Valued Dependency，MD）</p>\n</li>\n<li>\n<p>函数依赖 （Functional Dependency，FD）</p>\n<ul>\n<li>Y 函数依赖于 X : X-&gt;Y ，若 X -&gt; Y 且 Y -&gt; X，则 X&lt;--&gt;Y</li>\n<li>Sname = f (Sno)，一个学号只对应一个学生的姓名</li>\n</ul>\n<p><img data-src=\"https://peng-img.oss-cn-shanghai.aliyuncs.com/markdown-img/image-20220618173849601.png\" alt=\"image-20220618173849601\" /></p>\n<ul>\n<li>\n<p>平凡函数依赖、非平凡函数依赖 、完全函数依赖</p>\n<p>&lt;img src=&quot;<span class=\"exturl\" data-url=\"aHR0cHM6Ly9wZW5nLWltZy5vc3MtY24tc2hhbmdoYWkuYWxpeXVuY3MuY29tL21hcmtkb3duLWltZy9pbWFnZS0yMDIyMDYxODE3MzkxODQ5Ni5wbmc=\">https://peng-img.oss-cn-shanghai.aliyuncs.com/markdown-img/image-20220618173918496.png</span>&quot; alt=&quot;image-20220618173918496&quot;  /&gt;&lt;img src=&quot;<span class=\"exturl\" data-url=\"aHR0cHM6Ly9wZW5nLWltZy5vc3MtY24tc2hhbmdoYWkuYWxpeXVuY3MuY29tL21hcmtkb3duLWltZy9pbWFnZS0yMDIyMDYxODE3MzkzNDY2Mi5wbmc=\">https://peng-img.oss-cn-shanghai.aliyuncs.com/markdown-img/image-20220618173934662.png</span>&quot; alt=&quot;image-20220618173934662&quot;  /&gt;</p>\n<p><img data-src=\"https://peng-img.oss-cn-shanghai.aliyuncs.com/markdown-img/image-20220618174104550.png\" alt=\"image-20220618174104550\" /></p>\n</li>\n</ul>\n</li>\n<li>\n<p>码、候选码、主码、主属性、非主属性、全码（整个属性组是码）、超码</p>\n</li>\n</ul>\n</li>\n<li>\n<p>规范化 ：一个低一级范式的关系模式，通过<strong>模式分解</strong>可以转换为若干个高一级范式的关系模式的集合，这种过程就叫规范化。</p>\n<p>（此处有图 见 PDF）</p>\n</li>\n</ul>\n<h2 id=\"1nf\"><a class=\"anchor\" href=\"#1nf\">#</a> 1NF</h2>\n<ul>\n<li>第一范式 (1NF) : 作为二维表，关系要符合一个最基本的条件：每个分量必须是不可分开的数据项。<strong>（属性不可再分）</strong></li>\n</ul>\n<p><img data-src=\"https://peng-img.oss-cn-shanghai.aliyuncs.com/markdown-img/image-20220618173604608.png\" alt=\"image-20220618173604608\" /></p>\n<p>&lt;img src=&quot;<span class=\"exturl\" data-url=\"aHR0cHM6Ly9wZW5nLWltZy5vc3MtY24tc2hhbmdoYWkuYWxpeXVuY3MuY29tL21hcmtkb3duLWltZy9pbWFnZS0yMDIyMDYxODE3MzYyMDIxNi5wbmc=\">https://peng-img.oss-cn-shanghai.aliyuncs.com/markdown-img/image-20220618173620216.png</span>&quot; alt=&quot;image-20220618173620216&quot;  /&gt;&lt;img src=&quot;<span class=\"exturl\" data-url=\"aHR0cHM6Ly9wZW5nLWltZy5vc3MtY24tc2hhbmdoYWkuYWxpeXVuY3MuY29tL21hcmtkb3duLWltZy9pbWFnZS0yMDIyMDYxODE3MzYyODUyNS5wbmc=\">https://peng-img.oss-cn-shanghai.aliyuncs.com/markdown-img/image-20220618173628525.png</span>&quot; alt=&quot;image-20220618173628525&quot;  /&gt;</p>\n<h2 id=\"2nf\"><a class=\"anchor\" href=\"#2nf\">#</a> 2NF</h2>\n<ul>\n<li>第二范式（2NF）: 若关系模式 R∈1NF，并且每一个非主属性都完全函数依赖于任何一个候选码，则 R∈2NF。 <strong>（非主键要完全依赖候选码）</strong></li>\n</ul>\n<p>&lt;img src=&quot;<span class=\"exturl\" data-url=\"aHR0cHM6Ly9wZW5nLWltZy5vc3MtY24tc2hhbmdoYWkuYWxpeXVuY3MuY29tL21hcmtkb3duLWltZy9pbWFnZS0yMDIyMDYxODE3NDQyOTQ4Ni5wbmc=\">https://peng-img.oss-cn-shanghai.aliyuncs.com/markdown-img/image-20220618174429486.png</span>&quot; alt=&quot;image-20220618174429486&quot;  /&gt;&lt;img src=&quot;<span class=\"exturl\" data-url=\"aHR0cHM6Ly9wZW5nLWltZy5vc3MtY24tc2hhbmdoYWkuYWxpeXVuY3MuY29tL21hcmtkb3duLWltZy9pbWFnZS0yMDIyMDYxODE3NDQzNjU0MC5wbmc=\">https://peng-img.oss-cn-shanghai.aliyuncs.com/markdown-img/image-20220618174436540.png</span>&quot; alt=&quot;image-20220618174436540&quot;  /&gt;</p>\n<p>实例</p>\n<p><img data-src=\"https://peng-img.oss-cn-shanghai.aliyuncs.com/markdown-img/image-20220618174501389.png\" alt=\"image-20220618174501389\" /></p>\n<h2 id=\"3nf\"><a class=\"anchor\" href=\"#3nf\">#</a> 3NF</h2>\n<ul>\n<li>第三范式（3NF）: 设关系模式<em> R</em>&lt;<em>U</em>,<em>F</em>&gt;∈1NF, 若<em> R</em> 中不存在这样的码<em> X</em>、属性组<em> Y</em> 及非主属性<em> Z</em>（<em>Z</em> ⊈<em>Y</em>）, 使得<em> X</em>→<em>Y</em>，<em>Y</em>→<em>Z</em> 成立，<em>Y</em> ↛ <em>X</em> 成立，则称<em> R</em>&lt;<em>U</em>,<em>F</em>&gt; ∈ 3NF。 <strong>（没有传递依赖）</strong></li>\n</ul>\n<p><img data-src=\"https://peng-img.oss-cn-shanghai.aliyuncs.com/markdown-img/image-20220618174513643.png\" alt=\"image-20220618174513643\" /></p>\n<h2 id=\"bcnf\"><a class=\"anchor\" href=\"#bcnf\">#</a> BCNF</h2>\n<ul>\n<li>BCNF: 在关系模式 R&lt;U,F&gt; 中，如果<strong>每一个决定属性集都包含候选码</strong>，则 R∈BCNF\n<ul>\n<li>决定属性集：函数依赖的自变量：\n<ul>\n<li>设关系模式 R&lt;U,F&gt;∈1NF，若 X →Y 且 Y ⊈ X 时 X 必含有码，则 R&lt;U,F&gt;∈BCNF。</li>\n</ul>\n</li>\n<li>所有<strong>非主属性</strong>都完全函数<strong>依赖于每个候选码</strong>（2NF 的性质）</li>\n<li>所有主属性都完全函数依赖于每个不包含它的候选码</li>\n<li>没有任何属性完全函数依赖于非码的任何一组属性</li>\n</ul>\n</li>\n<li>好处和消解方法见课本 P184\n<ul>\n<li>在函数依赖的范畴实现了彻底的分离，消除了插入和删除的异常</li>\n<li>3NF 的不彻底性表现在可能存在主属性对码的部分依赖和传递依赖</li>\n</ul>\n</li>\n</ul>\n<hr />\n<p><em>以下内容不要求。</em></p>\n<ul>\n<li>\n<p>多值依赖：设<em> R (U)<em> 是属性集</em> U</em> 上的一个关系模式。<em>X</em>,<em>Y</em>,<em>Z</em> 是<em> U</em> 的子集，并且<em> Z</em>=<em>U</em>-<em>X</em>-<em>Y</em>。关系模式<em> R (U)<em> 中多值依赖</em> X</em>→→<em>Y</em> 成立，当且仅当对<em> R (U)<em> 的任一关系</em> r</em>，给定的一对 (<em>x</em>,<em>z</em>) 值，有一组<em> Y</em> 的值，这组值仅仅决定于<em> x</em> 值而与<em> z</em> 值无关</p>\n<ul>\n<li>对称性：若<em> X</em>→→<em>Y</em>，则<em> X</em>→→<em>Z</em>，其中<em> Z</em>＝<em>U</em>－<em>X</em>－<em>Y</em></li>\n<li>传递性：若<em> X</em>→→<em>Y</em>，<em>Y</em>→→<em>Z</em>， 则 <em>X</em>→→<em>Z</em>  - <em>Y</em></li>\n<li>经典例子：课程 C、教师 T、书 B  <strong>[ Teaching(C,T,B) ]</strong>\n<ul>\n<li>一个课程多个老师，多个参考书，一个老师多个课程，一本书多个课程</li>\n<li>C→→T, C→→B</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<p>4NF：关系模式的属性之间不允许有非平凡且非函数依赖的多值依赖。</p>\n</li>\n</ul>\n<h1 id=\"第7章-数据库设计\"><a class=\"anchor\" href=\"#第7章-数据库设计\">#</a> 第 7 章 数据库设计</h1>\n<blockquote>\n<p>ppt 37-44</p>\n</blockquote>\n<ul>\n<li>\n<p>数据库设计的特点：</p>\n<ul>\n<li>三分技术，七分管理，十二分基础数据</li>\n<li>结构设计与行为设计相结合</li>\n</ul>\n</li>\n<li>\n<p>数据库设计方法</p>\n<ul>\n<li>New Orleans 方法</li>\n<li>E-R 模型方法</li>\n<li>3NF 方法</li>\n<li>OOP 方法</li>\n<li>UML 方法</li>\n</ul>\n</li>\n<li>\n<p>数据库设计的基本步骤（<strong>数据库分析的 6 个阶段</strong>）</p>\n<p><img data-src=\"https://peng-img.oss-cn-shanghai.aliyuncs.com/markdown-img/image-20220613220014932.png\" alt=\"image-20220613220014932\" /></p>\n</li>\n</ul>\n<p><img data-src=\"https://peng-img.oss-cn-shanghai.aliyuncs.com/markdown-img/image-20220615194005996.png\" alt=\"img\" /></p>\n<ul>\n<li>数据库的各级模式</li>\n</ul>\n<p><img data-src=\"https://peng-img.oss-cn-shanghai.aliyuncs.com/markdown-img/image-20220615194236256.png\" alt=\"img\" /></p>\n<ul>\n<li>需求分析：收集用户对数据库的<em>信息要求、处理要求、安全性与完整性要求</em></li>\n<li><strong>数据字典</strong>：是关于数据库中数据的描述，即元数据，不是数据本身。包括<strong>数据项、数据结构、数据流、数据存储结构</strong>、处理过程。</li>\n<li>概念结构设计：画 E-R 图（不太重要）\n<ul>\n<li>E-R 图，[见 1.2](#1.2 数据模型)\n<ul>\n<li>属性必须是不可分的数据项，不能包含其他属性。</li>\n<li>属性不能与其他实体具有联系，即 E-R 图中所表示的联系是实体之间的联系。</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>逻辑结构设计：E-R 图<strong>转换</strong>为关系模型，即数据库的表\n<ul>\n<li>转换\n<ul>\n<li>一个 1:1 联系可以转换为一个独立的关系模式，也可以与任意一端对应的关系模式合并</li>\n<li>一个 1:n 联系可以转换为一个独立的关系模式，也可以与 n 端对应的关系模式合并</li>\n<li>一个 m:n 联系转换为一个关系模式（本质是多对多关系需要单独开一个表来维护）</li>\n<li>三个或三个以上实体间的一个多元联系转换为一个关系模式</li>\n<li>具有相同码的关系模式可合并</li>\n</ul>\n</li>\n<li>设计用户子模式（视图）</li>\n</ul>\n</li>\n<li><strong>关系模式的分解</strong>（重要，如果问到能还原即可）\n<ul>\n<li>水平分解\n<ul>\n<li>分解后表的属性不变，但是存储的数据变了</li>\n<li>把关系的元祖分为若干子集合</li>\n</ul>\n</li>\n<li><img data-src=\"https://peng-img.oss-cn-shanghai.aliyuncs.com/markdown-img/image-20220619212725702.png\" alt=\"image-20220619212725702\" /></li>\n<li>垂直分解\n<ul>\n<li>分解后表的属性变了</li>\n<li>把属性分为若干子集合，形成若干子关系模式</li>\n</ul>\n</li>\n<li><img data-src=\"https://peng-img.oss-cn-shanghai.aliyuncs.com/markdown-img/image-20220619212838748.png\" alt=\"image-20220619212838748\" /></li>\n<li><img data-src=\"https://peng-img.oss-cn-shanghai.aliyuncs.com/markdown-img/image-20220619212856677.png\" alt=\"image-20220619212856677\" /></li>\n</ul>\n</li>\n<li>物理结构设计：为一个给定的逻辑数据模型<strong>选取</strong>一个最适合应用要求的<strong>物理结构</strong>\n<ul>\n<li>存取方法\n<ul>\n<li>B+ Tree 索引</li>\n<li>hash 索引</li>\n<li>clustering（聚簇，这个可能没学过，要了解）</li>\n<li><img data-src=\"https://peng-img.oss-cn-shanghai.aliyuncs.com/markdown-img/image-20220619213047944.png\" alt=\"image-20220619213047944\" /></li>\n</ul>\n</li>\n</ul>\n</li>\n<li>数据库实施和维护：略</li>\n</ul>\n<h1 id=\"第8章-数据库编程\"><a class=\"anchor\" href=\"#第8章-数据库编程\">#</a> 第 8 章 数据库编程</h1>\n<blockquote>\n<p>ppt 45-47</p>\n</blockquote>\n<p>JDBC 比较常用，其他不考，略</p>\n<p><img data-src=\"https://quasdo.oss-cn-hangzhou.aliyuncs.com/img/image-20230611105309306.png\" alt=\"image-20230611105309306\" /></p>\n<p><img data-src=\"https://quasdo.oss-cn-hangzhou.aliyuncs.com/img/image-20230611105328511.png\" alt=\"image-20230611105328511\" /></p>\n<p>过程化 sql</p>\n<p>存储过程和函数</p>\n<h1 id=\"第9章-关系查询处理和优化\"><a class=\"anchor\" href=\"#第9章-关系查询处理和优化\">#</a> 第 9 章 关系查询处理和优化</h1>\n<blockquote>\n<p>ppt 58-61</p>\n</blockquote>\n<p>不考，略</p>\n<h1 id=\"第10章-数据库恢复技术\"><a class=\"anchor\" href=\"#第10章-数据库恢复技术\">#</a> 第 10 章 数据库恢复技术</h1>\n<blockquote>\n<p>ppt 48-53</p>\n</blockquote>\n<ul>\n<li>事务：是用户定义的一个<strong>数据库操作序列</strong>，这些操作要么全做，要么全不做，是一个不可分割的工作单位，是<strong>恢复和并发控制的基本单位</strong></li>\n<li>事务和程序的差别\n<ul>\n<li>在关系数据库中，一个事务可以是一条 SQL 语句，一组 SQL 语句或整个程序</li>\n<li>一个程序通常包含多个事务</li>\n</ul>\n</li>\n</ul>\n<pre><code class=\"language-mysql\">BEGIN TRANSACTION; # 显式开始事务\nCOMMIT; # 事务正常结束\nROLLBACK; # 事务回滚到开始时的状态\n</code></pre>\n<ul>\n<li>事务的特性 ACID\n<ul>\n<li><strong>原子性</strong>（Atomicity）\n<ul>\n<li>事务是数据库的逻辑工作单位，事务中的诸操作要么都做，要么都不做</li>\n</ul>\n</li>\n<li><strong>一致性</strong>（Consistency）\n<ul>\n<li>事务执行的结果必须是使数据库从一个一致性状态变到另一个一致性状态</li>\n<li>全做或者全不做，数据库都处于一致性状态。</li>\n</ul>\n</li>\n<li><strong>隔离性</strong>（Isolation）\n<ul>\n<li>一个事务的执行不能被其他事务干扰</li>\n<li>一个事务内部的操作及使用的数据对其他并发事务是隔离的</li>\n<li>并发执行的各个事务之间不能互相干扰</li>\n</ul>\n</li>\n<li><strong>持续性</strong>（Durability），也称永久性（Permanence）\n<ul>\n<li>一个事务一旦提交，它对数据库中数据的改变就应该是永久性的。</li>\n<li>接下来的其他操作或故障不应该对其执行结果有任何影响。</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>故障恢复可以保证事务的<strong>原子性和持续性</strong></li>\n<li>并发控制可以保证事务的<strong>一致性和隔离性</strong></li>\n<li>数据库故障的种类\n<ul>\n<li>事物内部的故障\n<ul>\n<li>事务撤销（UNDO）</li>\n</ul>\n</li>\n<li>系统故障</li>\n<li>介质故障</li>\n<li>计算机病毒</li>\n</ul>\n</li>\n<li>恢复操作的基本原理：冗余</li>\n<li>恢复的实现技术：复杂</li>\n</ul>\n<p>恢复数据的原理是<strong>冗余</strong>，建立冗余数据最常用的技术是<strong>数据转储</strong>和<strong>登记日志文件</strong></p>\n<ul>\n<li><strong>数据转储</strong>：数据库管理员定期地将整个数据库复制到磁带、磁盘或其他存储介质上保存起来的过程\n<ul>\n<li>备用的数据文本称为后备副本 (backup) 或后援副本</li>\n<li>重装后备副本只能将数据库恢复到转储时的状态</li>\n<li><strong>静态转储</strong>\n<ul>\n<li>在系统中无运行事务时进行的转储操作</li>\n<li>转储开始时数据库处于一致性状态</li>\n<li><strong>转储期间不允许对数据库的任何存取、修改活动</strong></li>\n<li>得到的一定是一个数据一致性的副本</li>\n<li>优点：实现简单</li>\n<li>缺点：降低了数据库的可用性\n<ul>\n<li>转储必须等待正在运行的用户事务结束</li>\n<li>新的事务必须等待转储结束</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>动态转储\n<ul>\n<li>转储操作与用户事务并发进行</li>\n<li><strong>转储期间允许对数据库进行存取或修改</strong></li>\n<li>优点\n<ul>\n<li>不用等待正在运行的用户事务结束</li>\n<li>不会影响新事务的运行</li>\n</ul>\n</li>\n<li>缺点\n<ul>\n<li>不能保证副本中的数据正确有效</li>\n</ul>\n</li>\n<li>利用动态转储得到的副本进行故障恢复\n<ul>\n<li>需要把动态转储期间各事务对数据库的修改活动登记下来，<strong>建立日志文件</strong></li>\n<li>后备副本加上日志文件就能把数据库恢复到某一时刻的正确状态</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>海量转储\n<ul>\n<li>每次转储全部数据库</li>\n</ul>\n</li>\n<li>增量转储\n<ul>\n<li>只转储上次转储后更新过的数据</li>\n</ul>\n</li>\n<li>海量转储和增量转储的比较\n<ul>\n<li>海量转储恢复较为方便</li>\n<li>数据库很大，事务处理频繁，增量转储使用有效</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<p><img data-src=\"https://peng-img.oss-cn-shanghai.aliyuncs.com/markdown-img/image-20220619214037064.png\" alt=\"image-20220619214037064\" /></p>\n<ul>\n<li>\n<p>日志文件：用来记录事务对数据库的更新操作的文件</p>\n<ul>\n<li>\n<p>格式：</p>\n<ul>\n<li>记录</li>\n<li>数据块</li>\n</ul>\n</li>\n<li>\n<p>日志文件的内容</p>\n<ul>\n<li>各个事务的开始标记（BEGIN TRANSACTION）</li>\n<li>各个事务的结束标记（COMMIT/ROLLBACK）</li>\n<li>所有更新操作</li>\n<li>事务标识</li>\n<li>操作类型</li>\n<li>操作对象</li>\n<li>更新前的值</li>\n<li>更新后的值</li>\n</ul>\n</li>\n<li>\n<p>作用：</p>\n<ul>\n<li>事务故障恢复和系统故障恢复必须用日志文件。</li>\n<li>在动态转储方式中必须建立日志文件，后备副本和日志文件结合起来才能有效地恢复数据库。</li>\n<li>在静态转储方式中，也可以建立日志文件。</li>\n</ul>\n</li>\n<li>\n<p><strong>登记日志文件的原则</strong></p>\n<ul>\n<li>登记的次序严格按并发事务执行的时间次序</li>\n<li><strong>必须先写日志文件，后写数据库</strong>，为什么？（必考）（保持 ACID）\n<ul>\n<li>写数据库和写日志文件是两个不同的操作，在这两个操作之间可能发生故障。</li>\n<li>如果先写了数据库修改，而在日志文件中没有登记下这个修改，则以后就无法恢复这个修改了</li>\n<li>如果先写日志，但没有修改数据库，按日志文件恢复时只不过是多执行一次不必要的 UNDO 操作，并不会影响数据库的正确性</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<p>恢复策略（PPT 51）</p>\n<ul>\n<li>事物故障：事务在运行至正常终点前被终止\n<ul>\n<li>恢复方法：由恢复子系统利用日志文件撤消（ UNDO ）此事务已对数据库进行的修改</li>\n<li>自动完成</li>\n<li>恢复步骤：反向扫描 - 逆操作 - 直至开始标记</li>\n</ul>\n</li>\n<li>系统故障：未完成事务对数据库的更新可能已写入数据库；已提交事务对数据库的更新可能还留在缓冲区没来得及写入数据库\n<ul>\n<li>恢复方法：\n<ul>\n<li>UNDO 故障发生时未完成的事务</li>\n<li>REDO 已完成的事务</li>\n</ul>\n</li>\n<li>重启自动完成</li>\n<li>恢复步骤：反向扫描，逆操作 UNDO 队列；正向扫描，执行 REDO 队列</li>\n</ul>\n</li>\n<li>介质故障：重装数据库，重做已完成的事务\n<ul>\n<li>需要管理员介入</li>\n<li>恢复步骤：装入后备数据库副本（静态 / 动态）- 装入有关日志副本，REDO 已完成的事务</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<p>检查点恢复技术：</p>\n<ul>\n<li>\n<p>为什么？</p>\n<ul>\n<li>搜索日志和重做处理耗费了大量的时间</li>\n</ul>\n</li>\n<li>\n<p>技术要点：</p>\n<ul>\n<li>在日志文件中增加<strong>检查点记录</strong></li>\n<li>增加<strong>重新开始文件</strong>（新增一个记录文件）</li>\n<li>恢复子系统在登录日志文件期间动态地维护日志</li>\n</ul>\n</li>\n<li>\n<p>检查点内容：</p>\n<ul>\n<li>建立检查点时刻所有正在执行的事务清单</li>\n<li>这些事务最近一个日志记录的地址</li>\n</ul>\n</li>\n<li>\n<p>重新开始文件的内容</p>\n<ul>\n<li>各个检查点记录在日志文件中的地址</li>\n</ul>\n<p><img data-src=\"https://quasdo.oss-cn-hangzhou.aliyuncs.com/img/image-20230614085140170.png\" alt=\"image-20230614085140170\" /></p>\n</li>\n<li>\n<p>恢复步骤：</p>\n<ol>\n<li>重新检查文件找到最后一条检查点记录地址，在日志文件中找到这个检查点记录</li>\n<li>建立 UNDO-LIST, REDO-LIST, 将检查点上所有正在执行的事物放入 UNDO-LIST</li>\n<li>从检查点记录正向扫描日志。\n<ol>\n<li>如果有新开始的事物，放入 UNDO-LIST；</li>\n<li>如果有提交（COMMIT）的事物，从 UNDO-LIST 移动到 REDO-LIST。直至日志文件结束</li>\n</ol>\n</li>\n<li>对 LIST 中事物进行相应的 UNDO 和 REDO 操作</li>\n</ol>\n</li>\n</ul>\n</li>\n</ul>\n<p><img data-src=\"https://peng-img.oss-cn-shanghai.aliyuncs.com/markdown-img/image-20220616161158480.png\" alt=\"img\" /></p>\n<p><img data-src=\"https://peng-img.oss-cn-shanghai.aliyuncs.com/markdown-img/image-20220619215228883.png\" alt=\"image-20220619215228883\" /></p>\n<ul>\n<li>数据库镜像 ——<strong> 提高数据库可用性</strong>的解决方案\n<ul>\n<li>\n<p>解决介质故障</p>\n</li>\n<li>\n<p><img data-src=\"https://quasdo.oss-cn-hangzhou.aliyuncs.com/img/image-20230611131458313.png\" alt=\"image-20230611131458313\" /></p>\n</li>\n<li>\n<p>出现故障</p>\n<ul>\n<li>\n<p>可由镜像磁盘继续提供使用</p>\n</li>\n<li>\n<p>同时数据库管理系统自动利用镜像磁盘数据进行数据库的恢复</p>\n</li>\n<li>\n<p>不需要关闭系统和重装数据库副本</p>\n</li>\n<li>\n<p><img data-src=\"https://quasdo.oss-cn-hangzhou.aliyuncs.com/img/image-20230611131550904.png\" alt=\"image-20230611131550904\" /></p>\n</li>\n</ul>\n</li>\n<li>\n<p>没有出现故障</p>\n<ul>\n<li>\n<p>可用于<strong>并发操作</strong></p>\n</li>\n<li>\n<p>一个用户对数据加排他锁修改数据，其他用户可以读镜像数据库上的数据，而不必等待该用户释放锁</p>\n</li>\n<li>\n<p><img data-src=\"https://quasdo.oss-cn-hangzhou.aliyuncs.com/img/image-20230611131606468.png\" alt=\"image-20230611131606468\" /></p>\n</li>\n</ul>\n</li>\n<li>\n<p>频繁地复制数据自然会降低系统运行效率，<strong>在实际应用中用户往往只选择对关键数据和日志文件镜像</strong>，不是对整个数据库进行镜像</p>\n</li>\n</ul>\n</li>\n</ul>\n<h1 id=\"第11章-并发控制\"><a class=\"anchor\" href=\"#第11章-并发控制\">#</a> 第 11 章 并发控制</h1>\n<blockquote>\n<p>ppt 54-57</p>\n</blockquote>\n<ul>\n<li>串行执行、交叉并发执行</li>\n</ul>\n<p><img data-src=\"https://peng-img.oss-cn-shanghai.aliyuncs.com/markdown-img/image-20220615194131511.png\" alt=\"image-20220615194131511\" /></p>\n<ul>\n<li><strong>事务是并发控制的基本单位</strong></li>\n<li><strong>需要保证事务的隔离性和一致性</strong></li>\n<li>并发操作带来的数据不一致性\n<ul>\n<li><strong>丢失修改</strong>：两个事务 T1 和 T2 读入同一数据并修改， T2 的提交结果破坏了 T1 提交的结果，导致 T1 的修改被丢失（造成不一致性）</li>\n<li><strong>不可重复读</strong>：不可重复读是指事务 T1 读取数据后，事务 T2 执行更新操作，使 T1 无法再现前一次读取结果。\n<ul>\n<li>3 种情况，后两种不可重复读有时也称为幻影现象（Phantom Row）：</li>\n<li>事务 T1 读取某一数据后，事务 T2 对其<strong>做了修改</strong>，当事务 T1 再次读该数据时，得到与前一次不同的值</li>\n<li>事务 T1 按一定条件从数据库中读取了某些数据记录后，事务 T2<strong> 删除</strong>了其中部分记录，当 T1 再次按相同条件读取数据时，发现某些记录神秘地消失了。</li>\n<li>事务 T1 按一定条件从数据库中读取某些数据记录后，事务 T2<strong> 插入了一些记录</strong>，当 T1 再次按相同条件读取数据时，发现多了一些记录。</li>\n</ul>\n</li>\n<li><strong>脏读</strong>：事务 T1 修改某一数据，并将其写回磁盘。事务 T2 读取同一数据后， <strong>T1 由于某种原因被撤销</strong>。这时 T1 已修改过的数据恢复原值， <strong>T2 读到的数据就与数据库中的数据不一致</strong>。T2 读到的数据就为 “脏” 数据，即不正确的数据</li>\n</ul>\n</li>\n</ul>\n<p><img data-src=\"https://peng-img.oss-cn-shanghai.aliyuncs.com/markdown-img/image-20220615194500872.png\" alt=\"image-20220615194500872\" /></p>\n<ul>\n<li>数据不一致性：由于并发操作破坏了事务的隔离性</li>\n<li>并发控制就是要用正确的方式调度并发操作，使一个用户事务的执行不受其他事务的干扰，从而避免造成数据的不一致性\n<ul>\n<li>关系型数据库的并发控制主要靠封锁（Locking）</li>\n</ul>\n</li>\n</ul>\n<ul>\n<li>\n<p>封锁：</p>\n<ul>\n<li>排它锁（X 锁、写锁），共享锁（S 锁、读锁）<br />\n<img data-src=\"https://peng-img.oss-cn-shanghai.aliyuncs.com/markdown-img/image-20220615194848184.png\" alt=\"image-20220615194848184\" /></li>\n<li>锁的相容矩阵<br />\n<img data-src=\"https://peng-img.oss-cn-shanghai.aliyuncs.com/markdown-img/image-20220615195011343.png\" alt=\"image-20220615195011343\" /></li>\n</ul>\n</li>\n<li>\n<p>封锁协议</p>\n<ul>\n<li>一级封锁协议：事务 T 在<strong>修改数据 R 之前必须先对其加 X 锁</strong>，直到事务结束才释放\n<ul>\n<li>一级封锁协议可防止丢失修改，并保证事务 T 是可恢复的。</li>\n<li>如果仅仅是读数据不对其进行修改，是不需要加锁的，所以它不能保证可重复读和不读 “脏” 数据</li>\n</ul>\n</li>\n<li>二级封锁协议：一级封锁协议加上事务 T 在<strong>读取数据 R 之前必须先对其加 S 锁</strong>，<strong>读完后即可释放</strong> S 锁。\n<ul>\n<li>可以防止丢失修改和读 “脏” 数据</li>\n<li>因为读完数据后即可释放 S 锁，<strong>但在事务结束的时候可能其他事务已经修改了这个数据，所以它不能保证可重复读</strong></li>\n</ul>\n</li>\n<li>三级封锁协议：一级封锁协议加上事务 T 在读取数据 R 之前必须先对其加 S 锁，<strong>直到事务结束才释放</strong>（X 和 S 锁）\n<ul>\n<li>可防止丢失修改、读脏数据和不可重复读</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<p><img data-src=\"https://peng-img.oss-cn-shanghai.aliyuncs.com/markdown-img/image-20220619222230257.png\" alt=\"image-20220619222230257\" /></p>\n<ul>\n<li>\n<p>活锁：一个事务永远可能等待，因为是新来先服务</p>\n<ul>\n<li>解决方案：先来先服务</li>\n</ul>\n</li>\n<li>\n<p>死锁：T1 在等待 T2 ，而 T2 又在等待 T1 ， T1 和 T2 两个事务永远不能结束</p>\n</li>\n<li>\n<p><img data-src=\"https://peng-img.oss-cn-shanghai.aliyuncs.com/markdown-img/image-20220619222358912.png\" alt=\"image-20220619222358912\" /></p>\n<ul>\n<li>\n<p>预防</p>\n<ul>\n<li><strong>一次封锁法</strong>，要求每个事务必须一次将所有要使用的数据全部加锁，否则就不能继续执行</li>\n<li><strong>顺序封锁法</strong>，预先对数据对象规定一个封锁顺序，所有事务都按这个顺序实行封锁</li>\n</ul>\n</li>\n<li>\n<p>数据库管理系统在解决死锁的问题上更普遍采用的是<strong>诊断并解除死锁的方法</strong></p>\n</li>\n<li>\n<p>解决方案</p>\n<ul>\n<li>\n<p><strong>超时法</strong>：如果一个事务的等待时间超过了规定的时限，就认为发生了死锁</p>\n</li>\n<li>\n<p><strong>等待图法</strong>：发控制子系统周期性地（比如每隔数秒）<strong>生成事务等待图，检测事务</strong>。如果发现图<strong>中存在回路</strong>，则表示系统中出现了死锁。</p>\n<p><img data-src=\"https://peng-img.oss-cn-shanghai.aliyuncs.com/markdown-img/image-20220615201057389.png\" alt=\"image-20220615201057389\" /></p>\n</li>\n<li>\n<p>解除死锁</p>\n<ul>\n<li>选择一个处理死锁<strong>代价最小</strong>的事务，将其撤消<br />\n释放此事务持有的所有的锁，使其它事务能继续运行下去</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<p>可串行化调度</p>\n<ul>\n<li>多个事务的并发执行是正确的，当且仅当其结果与按某一次序串行地执行这些事务时的结果相同，这种调度策略被称为可串行化调度</li>\n</ul>\n</li>\n<li>\n<p>冲突可串行化（掌握概念即可）</p>\n<ul>\n<li>执行结果等价于串行调度的调度也是正确的，称为<strong>可串行化</strong>调度</li>\n<li><strong>冲突操作：是指不同的事务对同一数据的读写操作和写写操作</strong></li>\n<li><strong>不能交换的操作：同一事务的两个操作、不同事务的冲突操作</strong></li>\n<li>一个调度 Sc 在保证冲突操作的次序不变的情况下，通过交换两个事务不冲突操作的次序得到另一个调度 Sc’，如果 Sc’是串行的，称调度 Sc 是<strong>冲突可串行化</strong>的调度\n<ul>\n<li>冲突可串行化调度是可串行化调度的<strong>充分条件</strong>，不是必要条件</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<p>两段锁协议（2PL)，指所有事务必须分两个阶段对数据项加锁和解锁</p>\n<ul>\n<li>第一阶段：获得封锁，也称为扩展阶段。事务可以申请获得任何数据项上的任何类型的锁，但是不能释放任何锁</li>\n<li>第二阶段：释放封锁，也称为收缩阶段。事务可以释放任何数据项上的任何类型的锁，但是不能再申请任何锁</li>\n<li>事务遵守两段锁协议是可串行化调度的<strong>充分条件</strong>，而不是必要条件</li>\n</ul>\n</li>\n</ul>\n<p><img data-src=\"https://peng-img.oss-cn-shanghai.aliyuncs.com/markdown-img/image-20220619222951210.png\" alt=\"image-20220619222951210\" /></p>\n<p>&lt;img src=&quot;<span class=\"exturl\" data-url=\"aHR0cHM6Ly9wZW5nLWltZy5vc3MtY24tc2hhbmdoYWkuYWxpeXVuY3MuY29tL21hcmtkb3duLWltZy9pbWFnZS0yMDIyMDYxOTIyMzA0Mzg1My5wbmc=\">https://peng-img.oss-cn-shanghai.aliyuncs.com/markdown-img/image-20220619223043853.png</span>&quot; alt=&quot;image-20220619223043853&quot;  /&gt;&lt;img src=&quot;<span class=\"exturl\" data-url=\"aHR0cHM6Ly9wZW5nLWltZy5vc3MtY24tc2hhbmdoYWkuYWxpeXVuY3MuY29tL21hcmtkb3duLWltZy9pbWFnZS0yMDIyMDYxOTIyMzA1MjYwMC5wbmc=\">https://peng-img.oss-cn-shanghai.aliyuncs.com/markdown-img/image-20220619223052600.png</span>&quot; alt=&quot;image-20220619223052600&quot;  /&gt;</p>\n<ul>\n<li>\n<p>封锁对象的大小称为<strong>封锁粒度</strong> (Granularity)</p>\n<ul>\n<li>逻辑单元：属性值、属性值的集合、元组、关系、索引项、整个索引、整个数据库等</li>\n<li>物理单元：页（数据页或索引页）、物理记录等</li>\n</ul>\n</li>\n<li>\n<p>封锁的粒度越大，数据库所能够封锁的数据单元就越少，<strong>并发度</strong>就越小，系统开销也越小</p>\n</li>\n<li>\n<p>多粒度封锁：在一个系统中同时支持多种封锁粒度供不同的事务选择</p>\n<p><img data-src=\"https://peng-img.oss-cn-shanghai.aliyuncs.com/markdown-img/image-20220615204625429.png\" alt=\"image-20220615204625429\" /></p>\n</li>\n<li>\n<p>多粒度加锁，对一个结点加锁，意味着这个结点的所有后裔结点也被加以同样类型的锁。</p>\n<ul>\n<li><strong>显式封锁</strong>：直接加到数据对象上的封锁</li>\n<li><strong>隐式封锁</strong>：是该数据对象没有独立加锁，是由于其上级结点加锁而使该数据对象加上了锁</li>\n<li>对某个数据对象加锁，系统要检查：\n<ul>\n<li>该数据对象：有无显式封锁与之冲突</li>\n<li>所有上级结点：本事务的显式封锁是否与该数据对象上的隐式封锁冲突</li>\n<li>所有下级结点：看它们的的显式封锁是否与本事务的隐式封锁冲突</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<p><img data-src=\"https://peng-img.oss-cn-shanghai.aliyuncs.com/markdown-img/image-20220619223343312.png\" alt=\"image-20220619223343312\" /></p>\n<ul>\n<li>\n<p>意向锁：如果对一个结点加意向锁，则说明该结点的下层结点正在被加锁。对任一结点加基本锁，<strong>必须先对它的上层结点加意向锁</strong>。</p>\n<ul>\n<li>IS 锁：它的后裔结点拟（意向）加 S 锁</li>\n<li>IX 锁：它的后裔结点拟（意向）加 X 锁</li>\n<li>SIX 锁：<strong>它加 S 锁，再加 IX 锁。</strong>\n<ul>\n<li><strong>e.g.</strong> 对某个表加 SIX 锁，则表示该事务要读整个表（所以要对该表加 S 锁），同时会更新个别元组（所以要对该表加 IX 锁</li>\n</ul>\n</li>\n<li><strong>申请封锁时应该按自上而下的次序进行，释放封锁时则应该按自下而上的次序进行</strong></li>\n</ul>\n</li>\n</ul>\n<h1 id=\"nosql\"><a class=\"anchor\" href=\"#nosql\">#</a> NoSQL</h1>\n<blockquote>\n<p>ppt 62-74</p>\n</blockquote>\n<p>见《nosql 精粹》第 1-6，8-11 章</p>\n<h2 id=\"1-为什么关系型数据库好-nosql和sql的差异\"><a class=\"anchor\" href=\"#1-为什么关系型数据库好-nosql和sql的差异\">#</a> 1. 为什么关系型数据库好 / NoSQL 和 SQL 的差异</h2>\n<ul>\n<li>\n<p>可回答第一章的部分（关系模型的优缺点）</p>\n<ul>\n<li><img data-src=\"https://peng-img.oss-cn-shanghai.aliyuncs.com/markdown-img/image-20220620211107102.png\" alt=\"image-20220620211107102\" /></li>\n</ul>\n</li>\n<li>\n<p>也可回答 PPT62 的部分</p>\n<ul>\n<li>\n<p>获取持久化数据</p>\n<ul>\n<li>持久存储大量数据</li>\n</ul>\n</li>\n<li>\n<p>集成</p>\n<ul>\n<li>并能<strong>共享数据库集成</strong>，<strong>多个应用程序都将数据保存在同一个数据库中</strong>。这样一来，所有应用程序很容易就能使用彼此的数据了</li>\n</ul>\n</li>\n<li>\n<p>并发</p>\n<ul>\n<li>在面对并发操作时，关系型数据库<strong>提供了 “事务” 机制来控制对其数据的访问</strong></li>\n<li><strong>事务在处理错误时也起到作用</strong>。比如如果事务中途出错，可以通过回滚保证数据不受破坏</li>\n</ul>\n</li>\n<li>\n<p>近乎标准的模型</p>\n<ul>\n<li>关系型数据库以<strong>近乎标准的方式</strong>提供了<strong>数据模型</strong>。规定了模式，具有更高的数据独立性和安全保密性。</li>\n</ul>\n</li>\n<li>\n<p>但是存取路径对用户透明，<strong>查询效率往往不如格式化数据模型</strong>（NoSQL）</p>\n</li>\n<li>\n<p>为提高性能，必须对用户的查询请求进行优化，<strong>增加了 DBMS 的难度。</strong></p>\n</li>\n<li>\n<p>NoSQL 是<strong>应用数据库</strong>，MySQL 是<strong>集成数据库</strong></p>\n</li>\n<li>\n<p>NoSQL 在集群问题上，<strong>让用户自行决定可用性和一致性的平衡</strong></p>\n</li>\n<li>\n<p>NoSQL 是<strong>无模式</strong>的，不需要预先定义值和型，不会发生阻抗失谐的问题</p>\n</li>\n</ul>\n</li>\n<li>\n<p>NoSQL</p>\n<ul>\n<li>\n<p>开源分布式的非关系型数据库</p>\n</li>\n<li>\n<p>不使用关系模型</p>\n</li>\n<li>\n<p>在集群中运行良好</p>\n<ul>\n<li>关系型数据库使用 ACID 事务来保持整个数据库的一致性，而这种方式本身与集群环境相冲突</li>\n<li>NoSQL 数据库为处理并发及分布问题提供了众多选项。</li>\n</ul>\n</li>\n<li>\n<p>开源</p>\n</li>\n<li>\n<p>适用于 21 世纪的互联网公司</p>\n</li>\n<li>\n<p>无模式</p>\n<ul>\n<li>不用事先修改结构定义，即可自由添加字段了</li>\n<li>这在处理不规则数据和自定义字段时 非常有用</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"2-nosql的由来考选择题\"><a class=\"anchor\" href=\"#2-nosql的由来考选择题\">#</a> 2. NoSQL 的由来（考选择题）</h2>\n<h3 id=\"阻抗失谐\"><a class=\"anchor\" href=\"#阻抗失谐\">#</a> 阻抗失谐</h3>\n<p><strong>关系模型</strong>和内存中的<strong>数据结构</strong>之间存在差异，存储时，需要在两种不同的表示形式之间转译。每次处理的过程很麻烦</p>\n<p>解决方法：</p>\n<ol>\n<li>面向对象数据库</li>\n<li>对象 - 关系映射框架，通过映射模式表达转换</li>\n</ol>\n<h3 id=\"集成数据库和应用程序数据库\"><a class=\"anchor\" href=\"#集成数据库和应用程序数据库\">#</a> 集成数据库和应用程序数据库</h3>\n<p>集成数据库和应用程序数据库的问题（NoSQL 是<strong>应用程序数据库</strong>）</p>\n<h3 id=\"集群问题\"><a class=\"anchor\" href=\"#集群问题\">#</a> 集群问题</h3>\n<ol>\n<li>纵向扩展和横向扩展</li>\n<li>分片和复制</li>\n<li>让用户<strong>自行决定可用性和一致性的平衡</strong></li>\n</ol>\n<h2 id=\"3-聚合无知\"><a class=\"anchor\" href=\"#3-聚合无知\">#</a> 3. 聚合无知</h2>\n<ul>\n<li>\n<p>聚合</p>\n<ul>\n<li>把一组相互关联的对象视为一个整体单元来操作，而这个单元就叫聚合</li>\n<li>键值数据库</li>\n<li>文档数据库</li>\n<li>列族数据库</li>\n</ul>\n</li>\n<li>\n<p>关系型数据库不知道一个特定的聚合（数据结构），把其打散存在不同关系里，select 时，再聚在一起</p>\n<ul>\n<li>“图数据库 &quot; 也是聚合无知的。</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"4-无模式\"><a class=\"anchor\" href=\"#4-无模式\">#</a> 4. 无模式</h2>\n<p>关系型数据库模式和 NoSQL 模式的区别：</p>\n<p>NoSQL 是无模式的，不需要预先定义值和型。</p>\n<p><img data-src=\"https://peng-img.oss-cn-shanghai.aliyuncs.com/markdown-img/image-20220619224154166.png\" alt=\"image-20220619224154166\" /></p>\n<p><img data-src=\"https://peng-img.oss-cn-shanghai.aliyuncs.com/markdown-img/image-20220619224203066.png\" alt=\"image-20220619224203066\" /></p>\n<p><img data-src=\"https://peng-img.oss-cn-shanghai.aliyuncs.com/markdown-img/image-20220619224209118.png\" alt=\"image-20220619224209118\" /></p>\n<h2 id=\"5-分布式\"><a class=\"anchor\" href=\"#5-分布式\">#</a> 5. 分布式</h2>\n<ul>\n<li>\n<p>概念默认大家知道，没必要考</p>\n</li>\n<li>\n<p>PPT66</p>\n</li>\n<li>\n<p>分片</p>\n<ul>\n<li>不同数据存放到不同节点中</li>\n</ul>\n</li>\n<li>\n<p>复制</p>\n<ul>\n<li>将同一份数据拷贝到多个节点</li>\n<li>主从复制</li>\n<li>对等复制</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"6-一致性和持久性\"><a class=\"anchor\" href=\"#6-一致性和持久性\">#</a> 6. 一致性和持久性</h2>\n<ul>\n<li>\n<p>CAP 定理</p>\n<ul>\n<li>CAP 定理：给定 “一致性”(Consistency)、“可用性”(Availability)、“分区耐受性”( Partition tolerance) 这三个属性，我们只能同时满足其中两个属性。\n<ul>\n<li>“一致性”</li>\n<li>“可用性”，如果客户可以同集群中的某个节点通信，那么该节点就必然能够处理读取及写入操作。</li>\n<li>“分区耐受性” ，如果发生通信故障，导致整个集群被分割成多个无法互相通信的分区时 (这种情况也叫 “ 脑裂”，split brain)，集群仍然可用。</li>\n</ul>\n</li>\n<li>分区耐受性不能够妥协，但凡有一个结点 down，整个系统都要 down 掉</li>\n</ul>\n</li>\n<li>\n<p>剩下的理解为主，不需要照搬背诵</p>\n</li>\n</ul>\n<h2 id=\"7-仲裁\"><a class=\"anchor\" href=\"#7-仲裁\">#</a> 7. 仲裁</h2>\n<ul>\n<li>经典公式：\n<ul>\n<li>R + W &gt; N\n<ul>\n<li>“对等式分布模型”：\n<ul>\n<li>只有当 R+W&gt;N 时，才能保证读取操作的 “强一致性”。其中，执行读取操作时所需联系的节点数 (R)，确认写入操作时所需征询的节点数 (W)，以及复制因子 (N)</li>\n<li>否则，可能读到的都是 UNWRITE 的</li>\n</ul>\n</li>\n<li>“主从式分布模型”\n<ul>\n<li>只需从主节点中读取数据</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>写入：二分之一\n<ul>\n<li>“对等式分布模型”：\n<ul>\n<li>“写入仲裁”(write quorum)：如果发生两个相互冲突的写入操作，那么只有其中一个操作能为超过半数的节点所认可，W&gt;N/2 。即，参与写入操作的节点数 (W)，必须超过副本节点数 (N) 的一半。副本个数又称为 “复制因子”</li>\n</ul>\n</li>\n<li>“主从式分布模型”\n<ul>\n<li>只需要向主节点中写入数据</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>复制因子</li>\n<li>实际情况</li>\n</ul>\n<h2 id=\"8-key-value数据库\"><a class=\"anchor\" href=\"#8-key-value数据库\">#</a> 8. key-value 数据库</h2>\n<ul>\n<li>数据库是如何完成基本存放的想法 / 数据库存放的是什么东西，怎么存的\n<ul>\n<li>是一张<strong>简单的哈希表</strong> (hash table)，主要用在所有数据库访问均通过主键 (primary key) 来操作的情况下。\n<ul>\n<li>可把此表想象成传统的 “关系” 该关系有两列：ID 与 NAME\n<ul>\n<li>ID 列代表关键字，NAME 列存放值。<strong>NAME 列仅能存放 String 型的数据。</strong></li>\n<li><strong>应用程序</strong>可提供 ID 及 VALUE 值，并将这一键值对持久化</li>\n<li>假如 ID 已存在，就用新值覆盖当前值，否则就新建一条数据。</li>\n</ul>\n</li>\n</ul>\n</li>\n<li><strong>客户端可以根据键查询值，设置键所对应的值，或从数据库中删除键。</strong>\n<ul>\n<li><strong>“值” 只是数据库存储的一块数据而已，它并不关心也无需知道其中的内容</strong></li>\n<li><strong>应用程序负责理解所存数据的含义。</strong></li>\n<li><strong>能够存储 list、set、hash 等数据结构</strong></li>\n</ul>\n</li>\n</ul>\n</li>\n<li>适合做什么，不适合做什么\n<ul>\n<li>非常适合\n<ul>\n<li>保存<strong>会话</strong> (用会话 ID 作为键)</li>\n<li><strong>购物车数据</strong>（用 userid 绑定）</li>\n<li><strong>用户配置</strong>等信息（本质是因为键值数据库可以存放任意数据结构的数据）</li>\n</ul>\n</li>\n<li>不适合\n<ul>\n<li><strong>数据间（建立）关系</strong></li>\n<li><strong>含有多项操作的事务</strong>（kv 数据库不擅长回滚恢复等操作）</li>\n<li><strong>查询数据</strong>（无法搜索 value）</li>\n<li><strong>操作关键字集合</strong>（一次只能操作一个键）</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<p>&lt;img src=&quot;<span class=\"exturl\" data-url=\"aHR0cHM6Ly9wZW5nLWltZy5vc3MtY24tc2hhbmdoYWkuYWxpeXVuY3MuY29tL21hcmtkb3duLWltZy9pbWFnZS0yMDIyMDYxOTIzMDE1NzAzMi5wbmc=\">https://peng-img.oss-cn-shanghai.aliyuncs.com/markdown-img/image-20220619230157032.png</span>&quot; alt=&quot;image-20220619230157032&quot; style=&quot;zoom:33%;&quot; /&gt;&lt;img src=&quot;<span class=\"exturl\" data-url=\"aHR0cHM6Ly9wZW5nLWltZy5vc3MtY24tc2hhbmdoYWkuYWxpeXVuY3MuY29tL21hcmtkb3duLWltZy9pbWFnZS0yMDIyMDYxOTIzMDIwNzIzMi5wbmc=\">https://peng-img.oss-cn-shanghai.aliyuncs.com/markdown-img/image-20220619230207232.png</span>&quot; alt=&quot;image-20220619230207232&quot; style=&quot;zoom:33%;&quot; /&gt;&lt;img src=&quot;<span class=\"exturl\" data-url=\"aHR0cHM6Ly9wZW5nLWltZy5vc3MtY24tc2hhbmdoYWkuYWxpeXVuY3MuY29tL21hcmtkb3duLWltZy9pbWFnZS0yMDIyMDYxOTIzMDIxNjgwNy5wbmc=\">https://peng-img.oss-cn-shanghai.aliyuncs.com/markdown-img/image-20220619230216807.png</span>&quot; alt=&quot;image-20220619230216807&quot; style=&quot;zoom:33%;&quot; /&gt;&lt;img src=&quot;<span class=\"exturl\" data-url=\"aHR0cHM6Ly9wZW5nLWltZy5vc3MtY24tc2hhbmdoYWkuYWxpeXVuY3MuY29tL21hcmtkb3duLWltZy9pbWFnZS0yMDIyMDYxOTIzMDI0NzE1MC5wbmc=\">https://peng-img.oss-cn-shanghai.aliyuncs.com/markdown-img/image-20220619230247150.png</span>&quot; style=&quot;zoom:33%;&quot; /&gt;</p>\n<h2 id=\"9-文档数据库\"><a class=\"anchor\" href=\"#9-文档数据库\">#</a> 9. 文档数据库</h2>\n<ul>\n<li>数据库是如何完成基本存放的想法\n<ul>\n<li>文档彼此相似，但不必完全相同。<strong>文档数据库所存放的文档，就相当于键值数据库所存放的 “值”</strong>。</li>\n<li>文档数据库可视为<strong>其值可查的键值数据库。</strong></li>\n</ul>\n</li>\n<li>数据库存放的是什么东西，怎么存的\n<ul>\n<li><strong>“文档”</strong>(document) 是文档数据库中的主要概念。\n<ul>\n<li>其格式可以是<strong> XML、JSON、BSON</strong> 等。</li>\n<li>文档具备自述性 (self-describing)，呈现分层的<strong>树状数据结构</strong> (hierarchical tree data structure)，可以包含映射表、集合和标量值。</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<p><img data-src=\"https://peng-img.oss-cn-shanghai.aliyuncs.com/markdown-img/image-20220619230506254.png\" alt=\"image-20220619230506254\" /></p>\n<ul>\n<li>适合做什么，不适合做什么\n<ul>\n<li>适用：\n<ul>\n<li><strong>事件记录</strong>（数据结构灵活）</li>\n<li><strong>内容管理系统及博客平台</strong>（数据结构灵活，支持 JSON）</li>\n<li><strong>网站分析与实时分析</strong>（可以只更新部分数据，方便保存浏览量等信息）</li>\n<li><strong>电子商务应用程序</strong>（适应较为灵活的模式）</li>\n</ul>\n</li>\n<li>不适用：\n<ul>\n<li><strong>包含多项操作的复杂事务</strong>（不适合执行跨文档的原子操作）</li>\n<li><strong>查询持续变化的聚合结构</strong></li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<p>&lt;img src=&quot;<span class=\"exturl\" data-url=\"aHR0cHM6Ly9wZW5nLWltZy5vc3MtY24tc2hhbmdoYWkuYWxpeXVuY3MuY29tL21hcmtkb3duLWltZy9pbWFnZS0yMDIyMDYxOTIzMDUzMjA3My5wbmc=\">https://peng-img.oss-cn-shanghai.aliyuncs.com/markdown-img/image-20220619230532073.png</span>&quot; alt=&quot;image-20220619230532073&quot; style=&quot;zoom:33%;&quot; /&gt;&lt;img src=&quot;<span class=\"exturl\" data-url=\"aHR0cHM6Ly9wZW5nLWltZy5vc3MtY24tc2hhbmdoYWkuYWxpeXVuY3MuY29tL21hcmtkb3duLWltZy9pbWFnZS0yMDIyMDYxOTIzMDUzOTUzMi5wbmc=\">https://peng-img.oss-cn-shanghai.aliyuncs.com/markdown-img/image-20220619230539532.png</span>&quot; alt=&quot;image-20220619230539532&quot; style=&quot;zoom:33%;&quot; /&gt;</p>\n<p>&lt;img src=&quot;<span class=\"exturl\" data-url=\"aHR0cHM6Ly9wZW5nLWltZy5vc3MtY24tc2hhbmdoYWkuYWxpeXVuY3MuY29tL21hcmtkb3duLWltZy9pbWFnZS0yMDIyMDYxOTIzMDczODM2OC5wbmc=\">https://peng-img.oss-cn-shanghai.aliyuncs.com/markdown-img/image-20220619230738368.png</span>&quot; alt=&quot;image-20220619230738368&quot; style=&quot;zoom:33%;&quot; /&gt;</p>\n<h2 id=\"10-列族数据库\"><a class=\"anchor\" href=\"#10-列族数据库\">#</a> 10. 列族数据库</h2>\n<ul>\n<li>数据库是如何完成基本存放的想法\n<ul>\n<li>列族数据库，可以存储关键字及其映射值，并且可以把值分成多个列族，让每个列族代表一张数据映射表 (map of data)。</li>\n<li>列族数据库将数据存储在列族中，而列族里的行则把许多列数据与本行的 “行键”(row key) 关联起来。</li>\n</ul>\n</li>\n<li>数据库存放的是什么东西，怎么存的\n<ul>\n<li><strong>基本存储单元为 “列”</strong>，列由一个 **“名值对 **”(name-value pair) 组成，其中的<strong>名字也充当关键字</strong>。</li>\n<li>每个键值对都占据一列，并且都<strong>存有一个 “时间戳” 值</strong>。令数据过期、解决写入冲突、处理陈旧数据等操作都会用到时间戳。若某列数据不再使用，则数据库可于稍后的 “压缩阶段”(compaction phase) 回收其所占空间。</li>\n<li><strong>行是列的集合</strong>，这些<strong>列都附在某个关键字名下</strong>，或与之相连。由<strong>相似行所构成的集合就是列族</strong>。</li>\n<li>每个列族都可以与关系型数据库的 “行容器”(container of rows) 相对照:\n<ul>\n<li>两者都用关键字标识行，并且每一行都由多个列组成。</li>\n<li>其差别在于，列族数据库的各行不一定要具备完全相同的列，并且可以随意向其中某行加入一列，而不用把它添加到其他行中。</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<p><img data-src=\"https://peng-img.oss-cn-shanghai.aliyuncs.com/markdown-img/image-20220619230901046.png\" alt=\"image-20220619230901046\" /></p>\n<ul>\n<li>\n<p>“标准列族”(standard column family) 中的列都是 “简单列”(simple column) 。</p>\n</li>\n<li>\n<p>“超列族”(super column family)：</p>\n<ul>\n<li>如果某列中包含一个由小列组成的映射表，那么它就是 “超列”(super column)。可将超列视为 “列容器”(container of columns)。</li>\n<li>用超列构建的列族叫做 “超列族” 。</li>\n<li>超列族适合将相关数据存在一起。但是，如果部分列在大部分情况下都用不到，则存在不必要的开销。</li>\n</ul>\n</li>\n<li>\n<p>“键空间” (keyspace) 与关系型数据库中的 “数据库” 类似，与应用程序有关的全部列族都存放于此。</p>\n<ul>\n<li>必须先创建键空间，才能为其增添列族</li>\n</ul>\n</li>\n<li>\n<p>适合做什么，不适合做什么</p>\n<ul>\n<li>适合：<strong>事件记录、内容管理系统与博客平台、计数器、限期</strong>（利用时间戳 TTL）</li>\n<li>不适合：\n<ul>\n<li>需要以 “ACID 事务” 执行写入及读取操作的系统。</li>\n<li>根据查询结果聚合数据（需要把每一行读到客户端，成本高）</li>\n<li>开发早期或试探某个技术方案（改变查询模式成本高）</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<p>&lt;img src=&quot;<span class=\"exturl\" data-url=\"aHR0cHM6Ly9wZW5nLWltZy5vc3MtY24tc2hhbmdoYWkuYWxpeXVuY3MuY29tL21hcmtkb3duLWltZy9pbWFnZS0yMDIyMDYxOTIzMTA0OTU4MC5wbmc=\">https://peng-img.oss-cn-shanghai.aliyuncs.com/markdown-img/image-20220619231049580.png</span>&quot; style=&quot;zoom:33%;&quot; /&gt;&lt;img src=&quot;<span class=\"exturl\" data-url=\"aHR0cHM6Ly9wZW5nLWltZy5vc3MtY24tc2hhbmdoYWkuYWxpeXVuY3MuY29tL21hcmtkb3duLWltZy9pbWFnZS0yMDIyMDYxOTIzMTEwMDM5Ny5wbmc=\">https://peng-img.oss-cn-shanghai.aliyuncs.com/markdown-img/image-20220619231100397.png</span>&quot; alt=&quot;image-20220619231100397&quot; style=&quot;zoom:33%;&quot; /&gt;&lt;img src=&quot;<span class=\"exturl\" data-url=\"aHR0cHM6Ly9wZW5nLWltZy5vc3MtY24tc2hhbmdoYWkuYWxpeXVuY3MuY29tL21hcmtkb3duLWltZy9pbWFnZS0yMDIyMDYxOTIzMTEwOTA1MS5wbmc=\">https://peng-img.oss-cn-shanghai.aliyuncs.com/markdown-img/image-20220619231109051.png</span>&quot; alt=&quot;image-20220619231109051&quot; style=&quot;zoom:33%;&quot; /&gt;&lt;img src=&quot;<span class=\"exturl\" data-url=\"aHR0cHM6Ly9wZW5nLWltZy5vc3MtY24tc2hhbmdoYWkuYWxpeXVuY3MuY29tL21hcmtkb3duLWltZy9pbWFnZS0yMDIyMDYxOTIzMTA0MjQ1OS5wbmc=\">https://peng-img.oss-cn-shanghai.aliyuncs.com/markdown-img/image-20220619231042459.png</span>&quot; alt=&quot;image-20220619231042459&quot; style=&quot;zoom:33%;&quot; /&gt;</p>\n<h2 id=\"11-图数据库\"><a class=\"anchor\" href=\"#11-图数据库\">#</a> 11. 图数据库</h2>\n<ul>\n<li>数据库是如何完成基本存放的想法\n<ul>\n<li>图数据库可存放<strong>实体及实体间关系。</strong></li>\n<li>用图将数据一次性组织好，稍后便可根据 “关系” 以不同方式解读它。</li>\n</ul>\n</li>\n<li>数据库存放的是什么东西，怎么存的\n<ul>\n<li>实体也叫 **“节点”<strong>(node)，它们具有</strong>属性 **(property)。可将节点视为应用程序中某对象的实例。</li>\n<li>关系又叫 **“边”<strong>(edge)，它们也有</strong>属性 **，有<strong>类型</strong>。边具备<strong>方向性</strong> (directional significance)，而节点则按关系组织起来，以便在其中查找所需模式。</li>\n<li>实体和实体间关系组成的有向图（实体作为结点，实体间关系作为边）</li>\n</ul>\n</li>\n</ul>\n<p>&lt;img src=&quot;<span class=\"exturl\" data-url=\"aHR0cHM6Ly9wZW5nLWltZy5vc3MtY24tc2hhbmdoYWkuYWxpeXVuY3MuY29tL21hcmtkb3duLWltZy9pbWFnZS0yMDIyMDYxOTIzMTE1Mzc0MC5wbmc=\">https://peng-img.oss-cn-shanghai.aliyuncs.com/markdown-img/image-20220619231153740.png</span>&quot; alt=&quot;image-20220619231153740&quot; style=&quot;zoom: 45%;&quot; /&gt;&lt;img src=&quot;<span class=\"exturl\" data-url=\"aHR0cHM6Ly9wZW5nLWltZy5vc3MtY24tc2hhbmdoYWkuYWxpeXVuY3MuY29tL21hcmtkb3duLWltZy9pbWFnZS0yMDIyMDYxOTIzMTIxMjQ5Mi5wbmc=\">https://peng-img.oss-cn-shanghai.aliyuncs.com/markdown-img/image-20220619231212492.png</span>&quot; alt=&quot;image-20220619231212492&quot; style=&quot;zoom: 45%;&quot; /&gt;</p>\n<ul>\n<li>适合做什么，不适合做什么\n<ul>\n<li>适合：\n<ul>\n<li><strong>互联</strong>数据</li>\n<li>安排<strong>运输路线</strong></li>\n<li>分派<strong>货物</strong>和<strong>基于位置</strong>的服务</li>\n<li><strong>推荐引擎</strong>（结点间关系）</li>\n</ul>\n</li>\n<li>不适合：\n<ul>\n<li>更新全部或某子集内的实体（无法一次改变所有结点的某个属性）</li>\n<li>图数据库可能没有办法处理<strong>数据量过大的场合</strong>，即便模型适合</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<p>&lt;img src=&quot;<span class=\"exturl\" data-url=\"aHR0cHM6Ly9wZW5nLWltZy5vc3MtY24tc2hhbmdoYWkuYWxpeXVuY3MuY29tL21hcmtkb3duLWltZy9pbWFnZS0yMDIyMDYxOTIzMTMzNDYzNi5wbmc=\">https://peng-img.oss-cn-shanghai.aliyuncs.com/markdown-img/image-20220619231334636.png</span>&quot; alt=&quot;image-20220619231334636&quot; style=&quot;zoom:33%;&quot; /&gt;&lt;img src=&quot;<span class=\"exturl\" data-url=\"aHR0cHM6Ly9wZW5nLWltZy5vc3MtY24tc2hhbmdoYWkuYWxpeXVuY3MuY29tL21hcmtkb3duLWltZy9pbWFnZS0yMDIyMDYxOTIzMTM0MTEzNC5wbmc=\">https://peng-img.oss-cn-shanghai.aliyuncs.com/markdown-img/image-20220619231341134.png</span>&quot; alt=&quot;image-20220619231341134&quot; style=&quot;zoom:33%;&quot; /&gt;&lt;img src=&quot;<span class=\"exturl\" data-url=\"aHR0cHM6Ly9wZW5nLWltZy5vc3MtY24tc2hhbmdoYWkuYWxpeXVuY3MuY29tL21hcmtkb3duLWltZy9pbWFnZS0yMDIyMDYxOTIzMTM1MDIxNi5wbmc=\">https://peng-img.oss-cn-shanghai.aliyuncs.com/markdown-img/image-20220619231350216.png</span>&quot; alt=&quot;image-20220619231350216&quot; style=&quot;zoom:33%;&quot; /&gt;&lt;img src=&quot;<span class=\"exturl\" data-url=\"aHR0cHM6Ly9wZW5nLWltZy5vc3MtY24tc2hhbmdoYWkuYWxpeXVuY3MuY29tL21hcmtkb3duLWltZy9pbWFnZS0yMDIyMDYxOTIzMTM1NjU1OC5wbmc=\">https://peng-img.oss-cn-shanghai.aliyuncs.com/markdown-img/image-20220619231356558.png</span>&quot; alt=&quot;image-20220619231356558&quot; style=&quot;zoom:33%;&quot; /&gt;</p>\n<h2 id=\"12-4种数据库大汇总\"><a class=\"anchor\" href=\"#12-4种数据库大汇总\">#</a> 12. 4 种数据库大汇总</h2>\n<p><img data-src=\"https://peng-img.oss-cn-shanghai.aliyuncs.com/markdown-img/image-20220620212854163.png\" alt=\"image-20220620212854163\" /></p>\n<h2 id=\"提到的可能考点\"><a class=\"anchor\" href=\"#提到的可能考点\">#</a> 提到的可能考点</h2>\n<ul>\n<li>综合题\n<ul>\n<li>写 sql</li>\n<li>写关系代数</li>\n<li>写 E-R</li>\n</ul>\n</li>\n<li>简答题（几分就是几点）\n<ul>\n<li>NoSQL 和 SQL 的最大差异</li>\n</ul>\n</li>\n</ul>\n<p><img data-src=\"https://peng-img.oss-cn-shanghai.aliyuncs.com/markdown-img/image-20220619225729150.png\" alt=\"image-20220619225729150\" /></p>\n",
            "tags": [
                "NJUSE",
                "数据管理基础",
                "数据管理基础"
            ]
        }
    ]
}